                 1С:Предприятие версия 7.7. Фирма "1С".
                ДОПОЛНЕНИЯ И ИСПРАВЛЕНИЯ К ДОКУМЕНТАЦИИ

	В данном документе приводятся дополнения и исправления к документации
продуктов системы программ 1С:Предприятие.

	Для пользователей версий 7.5 программ системы 1С:Предприятие в поставку
включен файл 1С75_77.TXT, содержащий описание новых возможностей версии 7.7, 
а также особенностей перевода конфигураций и информационных баз, работающих 
в версии 7.5, в формат версии 7.7.

Средства встроенного языка, описание которых не содержится в документации 
или изменено:
==================================================================================

Операторы
----------------------------------------------------------------------------------
Оператор безусловного перехода "Перейти" ("Goto") не может быть использован для
передачи управления на операторы, находящиеся внутри конструкций: 
"Пока ... КонецЦикла", "Для ... КонецЦикла", "Если ... ИначеЕсли ... Иначе ... КонецЕсли",
"Попытка ... Исключение ... КонецПопытки" извне этих конструкций.

Процедуры и функции
----------------------------------------------------------------------------------
Значения "по умолчанию" параметров объявляемых процедур и функций могут задаваться только 
непосредственными значениями типа Число, Строка или Дата. Использование переменных или 
выражений в данном случае не допускается.

Системные процедуры и функции
----------------------------------------------------------------------------------
 - Функция ПравоДоступа   (AccessRight)
   Синтаксис:  ПравоДоступа(<НазваниеПрава>,<Объект>)
   Назначение: Проверяет для текущего пользователя наличие права доступа для заданного
               объекта. Возвращает: 1 - если право доступа есть, иначе 0.
   Параметры:  <НазваниеПрава> - строка с названием права доступа, как оно 
               выводится в конфигурации (без пробелов).
               <Объект> - строка с наименованием типа и вида объекта (записывается 
               через точку). Для глобальных прав этот  параметр не указывается. 
               Для объектов, у которых нет вида - записывается только тип объекта,
               например, "Операция".
      Пример:  Доступ=ПравоДоступа("Чтение","Документ.Счет");
	           Доступ1=ПравоДоступа("МонопольныйРежим");

 - Функция  НачалоСтандартногоИнтервала   (BegOfStandardRange)
   Синтаксис:  НачалоСтандартногоИнтервала(<Вариант>)
   Назначение: Устанавливает вариант задания начала стандартного интервала отображения
               журнала документов. Возвращает текущий установленный вариант. Вариант 
               может изменяться при помощи главного меню Сервис-Параметры-Общие.
   Параметры:  <Вариант> - необязательный параметр. Выражение со значением типа 
               строка или дата. Возможные строковые значения параметра: 
               "День", "Месяц", "Квартал", "Год", "Day", "Month", "Quarter", "Year".
               Значением типа дата задается конкретная дата начала интервала журнала
               документов. Если параметр не задан, то установка сделанная в параметрах 
               системы не меняется, а только возвращается текущий вариант.

 - Функция  КонецСтандартногоИнтервала   (EndOfStandardRange)
   Синтаксис:  КонецСтандартногоИнтервала(<Вариант>)
   Назначение: Устанавливает вариант задания конца стандартного интервала отображения
               журнала документов. Возвращает текущий установленный вариант. Вариант 
               может изменяться при помощи главного меню Сервис-Параметры-Общие.
   Параметры:  <Вариант> - необязательный параметр. Выражение со значением типа 
               строка или дата. Возможные строковые значения параметра: 
               "День", "Месяц", "Квартал", "Год", "Day", "Month", "Quarter", "Year".
               Значением типа дата задается конкретная дата конца интервала журнала
               документов. Если параметр не задан, то установка сделанная в параметрах 
               системы не меняется, а только возвращается текущий вариант.

 - Процедура НайтиСсылки (FindReferences);
   Синтаксис:  НайтиСсылки(<Объекты>,<Ссылки>)
   Параметры:  <Объекты> - может быть конкретным значением или объектом типа 
               "СписокЗначений".

 - Процедура УдалитьОбъекты (DeleteObjects);
   Синтаксис:  УдалитьОбъекты(<Объекты>,<Проверять>,<Ссылки>)
   Параметры:  <Объекты> - может быть конкретным значением или объектом типа 
               "СписокЗначений".

 - Функция РабочаяДата   (WorkingDate)
   Синтаксис:  РабочаяДата(<Дата>,<РежимСменыРабДаты>)
   Параметры:  <РежимСменыРабДаты> - Необязательный параметр. Режим автоматической
               смены рабочей даты в полночь: 0 - не менять; 1 - менять с 
               предупреждением; 2 - менять автоматически без предупреждения.
               Если параметр не указан, то режим не меняется и действует установка, 
               выбранная в параметрах системы.

 - Функция ОткрытьФорму   (OpenForm)
        (в применении к окну истории значения периодических констант и реквизитов)
	          Допустимо включение в описатель открываемой формы уникального имени 
              открываемой формы через символ "#".	В том случае открываемая форма 
              закрепляется за выбранным объектом и не происходит обновление формы при 
              смене объекта, например при смене текущей строки списка справочника.
      Пример: ОткрытьФорму("История.Справочник.Сотрудники.Тариф#Ид001",,ТекущийЭлемент())

 - Процедура ЗаписьЖурналаРегистрации    (LogMessageWrite)
   Параметры: В качестве события документа может указываться 
              "ЗаписанИПроведенЗаднимЧислом".

 - Функция Окр  (Round)
   Синтаксис: Окр(<Число1>,<Число2>,<Способ>)
   Параметры: <Число1> - числовое выражение, значение которого нужно округлить
              <Число2> - число значащих цифр дробной части или минус число не значащих
                         младших цифр целой части (не обязателен, по умолчанию - 0)
              <Способ> - способ округления граничных значений: 0 - если 1.5 округляется до 1,
                         1 - если 1.5 округляется до 2 (не обязателен, по умолчанию соответствует
                         способу округления, установленному в конфигурации: Задача/Свойства, закладка
                         Задача, поле Округление)

Предопределенная процедура глобального модуля
----------------------------------------------------------------------------------
 - Предопределенная процедура ПриОткрытииИстории   (OnOpenHistory)
   Синтаксис:  ПриОткрытииИстории(<ТипОбъекта>,<Объект>,<ТолькоПросмотр>)
   Назначение: Предопределенная процедура при открытии окна Истории значения 
               периодического реквизита элемента справочника или периодической 
               константы.
   Параметры:  <ТипОбъекта> - строка с названием периодического объекта конфигурации
               (периодического реквизита справочника или периодической константы);
               <Объект> - элемент справочника у которого выполняется удаление 
               значения периодического реквизита (для константы не используется);
               <ТолькоПросмотр> - флаг установки режима "только просмотр" для окна
               истории значения. Если значение этого параметра установить в 1 
               (в предопределенной процедуре), то окно истории будет открыто только 
               для чтения. Установка значения в 0 - введет режим по умолчанию 
               (определенный правами).
   Замечание:  Данная предопределенная процедура может располагаться только в 
               глобальном модуле.

Модуль формы
----------------------------------------------------------------------------------
 - Процедура Активизировать  (Activate);
   Синтаксис:  Активизировать(<ИмяРеквизита>,<Режим>)
   Параметры:  <ИмяРеквизита> - необязательный параметр. Строка с именем поля диалога,
               которое нужно активизировать. Пустое имя элемента диалога используется
               для активизации формы.
   Замечание:  Метод  Активизировать(...) может быть вызван из внешнего модуля.
   Замечание:  данный метод нельзя использовать в формулах элементов диалогов (кроме кнопок).

 - Предопределенная процедура ОбработкаВыбораЗначения  (ProcessValueChoice)
   Замечание:  Данная предопределенная процедура вызывается только при выборе значения
	       из открывающейся для выбора формы. Если выбор осуществляется из выпадающего 
               списка то данная процедура не вызывается.
   Замечание:  Англоязычным синонимом является ProcessValueChoice

 
Методы объекта "Форма"
----------------------------------------------------------------------------------
 - Метод       ПолучитьАтрибут (GetAttrib);
   Синтаксис:  ПолучитьАтрибут(<ИмяЭлементаДиалога>)
   Параметры:  <ИмяЭлементаДиалога> - Строка с именем элемента диалога.
   Замечание:  Метод используется для получения элемента диалога по строковому идентификатору.
               Полученное значение аналогично обращению к атрибуту объекта "Форма".


Методы элементов диалога объекта "Форма"
----------------------------------------------------------------------------------
 - Метод       Видимость (Visible);
   Описание:   Метод Видимость позволяет установить режим отображения выбранного
               элемента формы или колонки многострочной части формы. Использование
               данного метода для колонки табличной части формы не может изменять 
               видимость отдельно для совмещенных и многострочных колонок.

 - Метод       Доступность (Enable);
   Замечание:  Англоязычным синонимом является Enable

 Замечание: Методы управляющие свойствами элементов диалога (Видимость, Доступность, Редактирование)
            должны вызываться в предопределенной процедуре ПриОткрытии или в формулах и процедурах,
	    отрабатывающих после открытия формы.


Регистр
----------------------------------------------------------------------------------
 - метод ОбратныйПорядок (BackwardOrder)
   Синтаксис:  ОбратныйПорядок(<режим>)
   Замечание:  Данный метод нельзя применять с методом ВыбратьДвиженияСОстатками.

 - метод ВыбратьДвиженияДокумента (SelectDocActs)
   Замечание:  На работу данного метода не распространяется действие фильтров установленных 
	       для регистра.

Справочник
----------------------------------------------------------------------------------
 - метод ОбратныйПорядок (BackwardOrder)
   Синтаксис:  ОбратныйПорядок(<режим>)
   Назначение: Позволяет установить порядок элементов в выборке элементов справочника. Возвращает
               текущую установку.    
   Параметры:  <режим> - необязательный параметр. Число 1 - установить обратный порядок элементов
			   Число 0 - установить прямой порядок элементов. Если параметр не задан метод просто 
			   возвратит текущую установку.
			   По умолчанию при выборке элементов справочника устанавливается прямой порядок 
			   следования элементов.

 - метод ВыборГруппы(SelectGroup)
   Назначение: Установить режим выборки групп при интерактивном выборе элемента справочника.    
   Замечание: Метод можно применять как объектов, созданных функцией СоздатьОбъект (интерактивный 
              выбор осуществляется методом Выбрать), так и в диалогах для полей типа справочник.
              По умолчанию, выборка элементов справочников для полей диалога в формах документов,
              журналов и справочников установлена без выбора групп, а в форме отчета - с выбором групп.

Модуль формы списка справочника и формы элемента справочника
----------------------------------------------------------------------------------
 - метод ПросмотрИстории  (ViewHistory)
   Синтаксис:  ПросмотрИстории(<СписокРеквизитов>)
   Назначение: Позволяет установить список реквизитов для которых допускается
               просмор истории. Возвращает - текущий (ранее установленный на 
               момент вызова метода) список реквизитов, просмотр истории которых 
               допускается.
   Параметры:  <СписокРеквизитов> - строка со списком идентификаторов (через запятую)
               тех реквизитов, просмотр истории которых допускается. 
   Пример:     Процедура ПриОткрытии()
	               ПросмотрИстории("Оклад,Тариф,Подразделение");
               КонецПроцедуры

 - метод СохранениеПериодическихРеквизитов  (PeriodicAttributesSaving)
   Синтаксис:  СохранениеПериодическихРеквизитов(<ВариантВызова>,<Список>)
   Назначение: Метод управляет режимом автоматического определения списка 
               измененных периодических реквизитов, показом диалога для выбора 
               записываемых периодических реквизитов, а также предоставляет доступ
               непосредственно к списку записываемых периодических реквизитов.
   Параметры:  <ВариантВызова> - число определяет вариант вызова метода.
               <Список> - необязательный параметр. Строковое выражение, в котором через 
               запятую перечислены идентификаторы периодических реквизитов справочника. 
               Если указан символ "*", то считается, что в список включены все
               периодические реквизиты справочника.
   Варианты:   0 - отключить автоматический режим определения списка измененных 
                   реквизитов и показ диалога (параметр <Список> не используется);
               1 - включить автоматический режим определения списка измененных  
                   реквизитов с показом диалога (параметр <Список> определяет 
                   набор анализируемых реквизитов);
               2 - включить автоматический режим определения списка измененных  
                   реквизитов без показа диалога (параметр <Список> определяет 
                   набор анализируемых реквизитов);
               3 - выполнить определение списка измененных реквизитов с показом 
                   диалога (параметр <Список> определяет набор анализируемых 
                   реквизитов);
               4 - выполнить определение списка измененных реквизитов без показа 
                   диалога (параметр <Список> определяет набор анализируемых 
                   реквизитов);
               5 - выдать/установить список сохраняемых периодических реквизитов;
                   метод возвращает установленный список периодических реквизитов,
                   которые будут записываться на момент до вызова метода;
                   если параметр <Список> указан, то устанавливается список 
                   периодических реквизитов, которые должны быть записаны.

Модуль формы списка справочника
----------------------------------------------------------------------------------
 - метод ВидыОтбора  (KindsOfSelection)
   Синтаксис:  ВидыОтбора(<СписокИменОтборов>)
   Назначение: Позволяет установить доступные виды отборов списка справочника для вызова 
               их в интерактивном режиме. Возвращает строковое значение, содержащее
               текущий список имен отборов, разделенных запятыми (на момент до 
               исполнения метода).
   Параметры:  <СписокИменОтборов> - строка со списком имен тех реквизитов, отбор 
               по которым допускается (через запятую), или "*" - для всех видов отборов. 
 
 - метод ЗакладкиОтбора  (TabCtrlSelection)
   Синтаксис:  ЗакладкиОтбора(<ИмяОтбора>,<ЗначениеОтбора>)
   Назначение: Установить в форме списка справочника закладки для интерактивного 
               включения отбора.
   Параметры:  <ИмяОтбора> - строка с именем отбора.
               <ЗначениеОтбора> - значение отбора, который будет установлен 
               первоначально.

 - метод Сортировка  (SortOrder)
   Синтаксис:  Сортировка(<Способ>,<Разрешение>)
   Назначение: Установить способ сортировки элементов справочника. Возвращает 
               текущее значение установленного на данный момент способа сортировки 
               элементов справочника (до применения метода).
   Параметры:  <Способ> - строка с именем устанавливаемой сортировки. Это может быть
               (в зависимости от языка по умолчанию) "Код\Code"  
               "Наименование\Description", или имя реквизита по которому устанавливается 
               сортировка. 
               <Разрешение> - необязательный параметр. Флаг разрешения пользователю 
               менять способ сортировки интерактивно: 1 - разрешить; 0 - запретить. 

Модуль формы элемента справочника
----------------------------------------------------------------------------------
 - метод Записать(Write)
   Замечание: если в форме использован метод Записать(), то при этом не вызывается 
   диалог изменения периодических реквизитов и не определяется автоматически список 
   измененных периодических реквизитов. Если в форме существуют периодические реквизиты,
   то при использовании метода "Записать" установка списка измененных периодических 
   реквизитов и вызов диалога должны производиться с помощью вызова метода 
   "СохранениеПериодическихРеквизитов" до вызова метода "Записать".

Документ
----------------------------------------------------------------------------------
 - метод ОбратныйПорядок (BackwardOrder)
   Параметры: <Режим>  Необязательный параметр. Числовое выражение: 1 - выбирать 
              документы в обратном порядке даты и времени; 0 - выбирать документы 
              в порядке возрастания даты и времени. Если параметр опущен, то метод 
              просто возвращает текущее значение порядка выборки документов.

Модуль формы документа
----------------------------------------------------------------------------------
 - метод Провести  (MakeActions)
   Замечание:  Метод нельзя использовать в теле предопределенной процедуры 
               "ОбработкаПроведения". Если этот метод применяется в Модуле формы 
               документа непосредственно к документу локального контекста, то 
               данный метод отрабатывает такие же действия, как интерактивное нажатие 
               пользователем кнопки с формулой "#Провести". В этом случае, 
               если параметр <Режим> опущен, то документ проводится в режиме, 
               соответствующем установкам в меню Сервис-Параметры 
               и в модуле формы.
 - В формулах табличной части документа не поддерживается возможность добавления строк 
   в табличную часть.

Модуль документа
----------------------------------------------------------------------------------
 - метод УстановитьРеквизитСправочника  (SetRefField)
   Синтаксис:  УстановитьРеквизитСправочника(<ЭлементСправочника>,<НазваниеРеквизита>,
               <Значение>,<ДатаУстановки>,<ИмяТипа>,<Длина>,<Точность>)
   Параметры:  <ИмяТипа> - необязательный параметр. Строковое выражение - название 
               типа данных (или Вид субконто);
               <Длина> - необязательный параметр. Число - длина числового или 
               строкового значения; 
               <Точность> - необязательный параметр. Число знаков после десятичной точки. 
   Замечание:  Параметры ИмяТипа, Длина и Точность указываются при установке значения
               периодического реквизита справочника имеющего неопределенный тип. 
 - метод ГрупповаяОбработка (IsGroupProcessing)
   Замечание:  Данный метод возвращает 1 только при системном групповом проведении документов
	       (из диалога проведения документов или при переносе ТА). При проведении из 
	       алгоритма встроенного языка данный метод возвращает 0.


Модуль формы списка счетов
----------------------------------------------------------------------------------
 - метод РедактироватьВДиалоге   (EditInForm)
   Синтаксис:  РедактироватьВДиалоге(<Способ>,<Разрешение>)
   Назначение: Установить способ редактирования счета. Возвращает значение 
               установленного на данный момент способа редактирования счета 
               (до применения метода).
   Параметры:  <Способ> - необязательный параметр. Способ редактирования 
               счета: 1 - в диалоге; 0 - в строке.
               <Разрешение> - необязательный параметр. Флаг разрешения пользователю
                интерактивно менять способ редактирования: 1 - разрешить; 0 - запретить. 

Бухгалтерские Итоги
----------------------------------------------------------------------------------
 - функции СНДРС, СНКРС, СКДРС, СККРС
   Замечание:  Для необязательных параметров <ТипФильтра> значения по умолчанию:
               "*" (1) - для первого субконто, " " (3) - для остальных субконто.

Операция
----------------------------------------------------------------------------------
 - метод ИспользоватьСубконто объекта "Операция" (UseSubconto)
 - метод ИспользоватьКорСубконто объекта "Операция" (UseCorSubconto)
   Синтаксис:  ИспользоватьСубконто(<ВидСубконто>,<Субконто>)
   Синтаксис:  ИспользоватьКорСубконто(<ВидСубконто>,<Субконто>)
   Параметры:  <Субконто>  - в качестве значения данного параметра может быть 
               передан объект типа "Список значений".


Табличный документ
----------------------------------------------------------------------------------
 - метод НоваяСтраница  (NewPage)
   Синтаксис:  НоваяСтраница(<Ном>)
   Параметры:  <Ном> - необязательный параметр. Номер строки, после которой 
               установить разделитель страниц. Если параметр не указан, то 
               разделитель страниц вставляется по текущей высоте таблицы. 

 - метод НоваяКолонка  (NewColumn)
   Синтаксис:  НоваяКолонка(<Ном>)
   Параметры:  <Ном> - необязательный параметр. Номер столбца, после которого 
               установить разделитель колонок. Если параметр не указан, 
               то разделитель колонок вставляется по текущей ширине таблицы.
               Разделитель колонок используется для принудительного разделения 
               при печати страниц по вертикали.

 - метод ЗначениеТекущейЯчейки  (ValueOfCurrentCell)
   Синтаксис:  ЗначениеТекущейЯчейки(<Адрес>)
   Назначение: Возвращает значение расшифровки текущей ячейки таблицы 
               (задается в конфигураторе: "Свойства" ячейки-Текст-Расшифровка).
   Параметры:  <Адрес> - необязательный параметр. Идентификатор переменной, 
               куда система возвратит адрес текущей ячейки в формате "R2C2". 

 - метод ВысотаСтроки (RowHeight)
   Замечание:  Метод возвращает высоту строки только для тех строк, для которых установлена 
               определенная высота. Для тех строк, для которых высота строки установлена
               в положение "Авто", данный метод возвращает значение 0. 			

 - метод ОбластьПечати  (PrintRange)
   Замечание:  Параметры <Верх>,<Лево>,<Низ>,<Право> должны указываться в качестве номеров 
               строк и столбцов. Указание нулевого значения не допускается.
               
 - метод КоличествоСтраниц (PageCount)
   Синтаксис:  КоличествоСтраниц()
   Назначение: Возвращает количество страниц, занимаемое таблицей при выводе на печать.
   Параметры:  Отсутствуют


Область таблицы
----------------------------------------------------------------------------------
 - метод Расшифровка  (Details)
   Синтаксис:  Расшифровка(<Значение>,<РежимИспользования>)
   Замечание:  Возвращает текущее значение расшифровки.
   Параметры:  <Значение> -  необязательный параметр. Новое значение расшифровки области.
               <РежимИспользования> - необязательный параметр. Число: 0 - обычный режим;
               1 - установить данную расшифровку для все строки; 2 - не вызывать 
               расшифровку для данной ячейки. 

 - метод Шрифт  (Font)
   Синтаксис:  Шрифт(<ИмяШрифта>)
   Параметры:  <ИмяШрифта> - необязательный параметр. Строковое выражение, задающее 
               имя шрифта или "имя, набор символов", где основные наборы символов:
                   204 - русский; 
                   238 - европейский;
                   186 - балтийский; 
                   161 - греческий; 
                   162 - турецкий.
               Если параметр опущен, то шрифт области не изменяется.

 - методы РамкаСверху (TopBord); РамкаСнизу (BottomBorder); РамкаСлева (LeftBorder);
          РамкаСправа (RightBorder); Рамка (Border); РамкаОбвести (BorderOutline)
   Синтаксис:  РамкаСверху(<Рамка>)
   Параметры:  <Рамка> - необязательный параметр. Число: 0 - нет;
               1 - тонкая точечная; 2 - очень тонкая ; 
               3 - тонкая сплошная; 4 - средняя сплошная; 
               5 - толстая сплошная; 6 - двойная; 
               7 - тонкая средний пунктир; 8 - тонкая длинный пунктир; 
               9 - толстая пунктир. Если параметр опущен, 
               то рамка сверху области не изменяется.

 - метод ВертикальноеПоложение (VerticalAlign)
   Синтаксис:  ВертикальноеПоложение(<Положение>)
   Параметры:  <Положение> - необязательный параметр. Число: 1 - снизу; 
               2 - сверху; 3 - по центру. Если параметр опущен, 
               то признак вертикального выравнивания текста области не изменяется.

 - метод ОриентацияТекста (TextOrientation)
   Синтаксис:  ОриентацияТекста(<Угол>)
   Назначение: Метод позволяет получить и установить ориентацию текста области.
	       Возвращает угол наклона текста в градусах.
   Параметры:  <Угол> - необязательный параметр. Число: угол наклона текста в градусах.
               Если параметр опущен, то угол наклона текста области не изменяется.


Атрибуты и методы таблицы в режиме ввода данных
----------------------------------------------------------------------------------
   При работе с таблицей в режиме ввода данных не могут использоваться методы и атрибуты,
предназначенные для заполнения таблицы в обычном режиме, например, методы вывода секций,
метод Показать и другие, не имеющие смысла для табличного документа в режиме ввода данных.
Разумеется, могут использоваться методы, управляющие параметрами печати табличного документа,
а также методы: Напечатать, Опции, Записать, Область.

 - метод Выгрузить (англоязычный синоним - Unload)

 - метод Загрузить (англоязычный синоним - Load)

ВидСубконто
----------------------------------------------------------------------------------
 - Метод Идентификатор (Identifier) 
   Синтаксис:  Идентификатор()
   Назначение: Возвращает строку - идентификатор вида субконто как он задан в метаданных. 

-  Метод объекта "ВидыСубконто" ЗначениеПоИдентификатору (ValueByIdentifier)
   Синтаксис:  ЗначениеПоИдентификатору(<Идентификатор>)
   Назначение: Возвращает значение вида субконто, соответствующее идентификатору 
               в метаданных. Если не найдено - то пустое значение.
   Параметры:  <Идентификатор> - строковое выражение. Идентификатор вида субконто,
               заданный в конфигураторе.

ПланСчетов
----------------------------------------------------------------------------------
 - Метод Идентификатор (Identifier)
   Синтаксис:  Идентификатор()
   Назначение: Возвращает строку - идентификатор плана счетов как он задан 
               в метаданных.

-  Метод объекта "ПланыСчетов" ЗначениеПоИдентификатору (ValueByIdentifier)
   Синтаксис:  ЗначениеПоИдентификатору(<Идентификатор>)
   Назначение: Возвращает значение плана счетов, соответствующее идентификатору 
               в метаданных. Если не найдено - то пустое значение.
   Параметры:  <Идентификатор> - строковое выражение. Идентификатор плана счетов,
               заданный в метаданных.

Список Значений
----------------------------------------------------------------------------------
 - метод СдвинутьЗначение  (MoveValue)
   Синтаксис:  СдвинутьЗначение(<Колич>,<НомерЗнач>)
   Назначение: Переместить значение списка значений на новую позицию.
   Параметры:  <Колич> - число позиций, на которое надо переместить значение. 
               Если число положительное, то значение сдвигается вниз, 
               если отрицательное, то вверх.
               <НомерЗнач> - номер значения которое надо переместить.

 - метод Выгрузить  (Unload)
   Синтаксис:  Выгрузить(<Знач>,<НачПозиция>,<Колич>)
   Назначение: Выгрузить список значений в другой список значений или таблицу значений. 
               При выгрузке в таблицу значений, в ней добавляется новая колонка.
   Параметры:  <Знач> - значение типа "Таблица значений" или "Список значений", в 
               которое нужно выгрузить данные. Если переданное значение пустое, 
               тогда система сама создаст объект типа "Список значений".
               <НачПозиция> - необязательный параметр. Номер начальной позиции, с 
               которой надо начинать выгрузку. Значение по умолчанию 1.
               <Колич> - необязательный параметр. Количество выгружаемых значений, 
               если не указан то все.

Таблица Значений
----------------------------------------------------------------------------------
 - методы НоваяКолонка,ВставитьКолонку,УстановитьПараметрыКолонки,ПолучитьПараметрыКолонки
          (NewColumn,InsertColumn,SetColumnParameters,GetColumnParameters)  
   Синтаксис:  НоваяКолонка(<Идентификатор>,<Тип>,<Длина>,<Точность>,
                            <Заголовок>,<Ширина>,<Формат>,<Положение>)
               ВставитьКолонку(<Идентификатор>,<НомерКолонки>,<Тип>,<Длина>,<Точность>,
                            <Заголовок>,<Ширина>,<Формат>,<Положение>)
               УстановитьПараметрыКолонки(<Колонка>,<Тип>,<Длина>,<Точность>,<Заголовок>,
                            <Заголовок>,<Ширина>,<Формат>,<Положение>)
               ПолучитьПараметрыКолонки(<Колонка>,<Тип>,<Длина>,<Точность>,<Заголовок>,
                            <Заголовок>,<Ширина>,<Формат>,<Положение>)
   Параметры:  <Формат> - необязательный параметр. Строковое выражение,
               содержащее форматную строку, которая будет использована при визуальном 
               показе значений данной колонки.
               <Положение> - необязательный параметр. Число: 1 - слева; 2 - справа.
               Определяет выриант отображения при визуальном показе значений 
               данной колонки.

 - метод КоличествоСтрок
   Англоязычный синоним: LinesCnt

 - атрибут НомерСтроки
   Англоязычный синоним: LineNum

Диаграмма
----------------------------------------------------------------------------------
 - методы КоличествоСерий,КоличествоТочек (SeriesCount,PointsCount)
   Синтаксис:  КоличествоСерий(<количество>),КоличествоТочек(<количество>)
   Параметры:  <количество> - необязательный параметр. 
   Замечание:  Возвращают текущее установленное значение.

Вид расчета и группа расчетов
----------------------------------------------------------------------------------

 - атрибут Наименование (Description)
   В основной документации неверно указан англоязычный синоним - должен быть Description

Вид расчета
----------------------------------------------------------------------------------
 - атрибут ПриоритетВытеснения (ReplacementPriority)
   В основной документации неверно указан англоязычный синоним - должен быть ReplacementPriority


Журнал расчетов
----------------------------------------------------------------------------------
 - метод УстановитьТекущийПериод (SetCurrentPeriod)
   Синтаксис:	УстановитьТекущийПериод(<Период>,<Способ>)
   Назначение:	Устанавливает текущий период журнала расчетов. Возвращает число: 1 - если 
				установка текущего периода выполнена успешно и 0 в противном случае.
   Параметры:	<Период> - Имеет тип "период журнала расчетов" - устанавливаемый период.
				<Способ> - Имеет тип число. 
				1 - отработать системные действия, связанные со сменой периода, (например, 
				отменить рассчитанность записей при сменен текущего периода назад или 
				провести архивацию документов при смене периода "вперед". 
				В этом случае ведет себя как интерактивная смена периода. 
				0 - не отрабатывать системные действия, связанные со сменой периода.

 

Журнал расчетов, Запись журнала расчетов и Период журнала расчетов
----------------------------------------------------------------------------------
 - атрибут ДатаНачала (DateOfBegin)
   В основной документации неверно указан англоязычный синоним - должен быть DateOfBegin
 - атрибут ДатаОкончания (DateOfEnd)
   В основной документации неверно указан англоязычный синоним - должен быть DateOfEnd

Журнал расчетов и Запись журнала расчетов
----------------------------------------------------------------------------------
 - атрибут ВидРасч (Calc)
   В основной документации неверно указан англоязычный синоним - должен быть Calc

Модуль формы журнала расчетов
----------------------------------------------------------------------------------
 - метод ВидыОтбора  (KindsOfSelection)
   Синтаксис:  ВидыОтбора(<СписокИменОтборов>)
   Назначение: Установить доступные виды отборов журнала расчетов для вызова их в 
               интерактивном режиме. Возвращает строковое значение, содержащее 
               текущий список имен отборов, разделенных запятыми (на момент до 
               исполнения метода).
   Параметры:  <СписокИменОтборов> - строка со списком разрешенных имен отборов
               (через запятую), или "*" - для всех видов отборов.

 - метод РассчитыватьПриОтменеИсправления  (CalculateOnEditCancel)
   Синтаксис:  РассчитыватьПриОтменеИсправления(<Флаг>)
   Назначение: Устанавливает значение флага автоматического расчета записи журнала
               расчетов при интерактивной отмене ее исправления. Возвращает 
               текущее значение этого флага.
   Параметры:  <Флаг> - необязательный параметр. Число: 1 - автоматически 
               рассчитывать записи журнала расчетов при интерактивной отмене 
               ее исправления. 0 - не рассчитывать автоматически.

Объект "Периодический"
----------------------------------------------------------------------------------
 - метод ВыбратьЗначения (SelectValues)
   В документации неверно указан англоязычный синоним - должен быть SelectValues

 - метод Удалить (Delete)
   Описание:   Метод Удалить удаляет периодическое значение. 
               До вызова данного метода периодическое значение следует выбрать 
               при помощи методов ПолучитьЗначение или НайтиЗначение.

Периодические константы, периодические реквизиты справочника/счета
----------------------------------------------------------------------------------
 - метод Получить(GetValue)
   Синтаксис:  Получить(<Дата>)
   Параметры:  <Дата> - необязательный параметр. Выражение типа дата или значение
               типа документ или позиция документа. Этот параметр задает момент 
               времени, на который требуется получить значение периодического 
               реквизита (или константы). Значение по умолчанию: ТА - если 
               используется компонента "Оперативный учет", Рабочая дата - если 
               компонента "Оперативный учет" не используется.
 
Модуль формы Справочника/Документа/Счета/Операции
----------------------------------------------------------------------------------
 - метод Записать(Write)
   Замечание: если в форме использован метод Записать(), то при этом не вызывается 
   предопределеная процедура ПриЗаписи().

Глобальный атрибут "Последовательность"
----------------------------------------------------------------------------------
 - метод ПолучитьАтрибут(GetAttrib)
   Синтаксис:  ПолучитьАтрибут(<ИмяПоследовательности >)
   Назначение: Получить значение последовательности по имени. Возвращает значение 
               последовательности.
   Параметры:  <ИмяПоследовательности> - строковое выражение, содержащее имя 
               последовательности, как оно задано в конфигураторе.

Календари
---------------------
 - метод Вид(Kind)
	Возвращает идентификатор календаря, заданный при конфигурировании.

   Синтаксис:  Вид()
   Параметры:  нет
   Пример: 
	// справочник рабочих смен - СпрСмены
	СпрСмены.НайтиПоКоду(1);
	Календ = СоздатьОбъект("Календарь."+СпрСмены.ОсновнойКалендарь.Вид());
	Календ.Автозаполнение(НачГода(РабочаяДата()),КонГода(РабочаяДата()));

Правила перерасчетов
---------------------
В основной документации неверно описаны значения атрибута Тип

 - атрибут Тип(Type)
	Возможные значения
	0 - Только по текущему периоду
	Правила перерасчетов такого типа обеспечивают перерасчет записей 
	текущего периода при вводе, редактировании, удалении записей любого периода.

	1 - В том же периоде
	Обеспечивается перерасчет записей того же периода, что и редактируемая, 
	вводимая, удаляемая.

	2 - В следующих ... периодах
	Обеспечивается перерасчет записей нескольких периодов, следующих за 
	периодом, в котором отредактирована, введена, удалена запись журнала расчетов.
	Количество периодов в которых проводится перерасчет определяется атрибутом 
	КоличествоПериодов.

Особенности использования методов объектов справочник и документ
для поиска и выборки по значениям строкового типа
----------------------------------------------------------------------------------
  При использовании методов объектов встроенного языка типа Справочник и Документ
для поиска по значениям строкового типа (код и наименование справочника, номер 
документа, реквизиты строкового типа) или для получения выборок по реквизитам
строкового типа следует помнить, что при поиске или выборке не учитывается
регистр букв. 
  Например, у справочника Товары имеется реквизит Описание типа Строка и 
по этому реквизиту включен отбор. В случае, если указанный справочник содержит 
элементы, реквизиты Описание которых имеют значения

Электроприбор
ЭлектроПрибор

то в результате выполнения фрагмента кода

Спр = СоздатьОбъект("Справочник.Товары");
Спр.ВыбратьЭлементыПоРеквизиту("Описание", "электроприбор", 1, 0);

в выборку попадут элементы с обоими вышеперечисленными значениями.

Язык генерации запросов
----------------------------------------------------------------------------------
   Предопределенные группировки могут быть следующими:
Документ (Document) - позволяет детализацию до каждого документа.
СтрокаДокумента (DocumentLine) - позволяет детализацию до каждой строки табличной 
    части каждого документа.
ПериодЖурнала (JournalPeriod) - группировка по времени ввода записи журнала расчетов 
    или по времени ее действия.
День,  Неделя,  Месяц,  Квартал, Год (Day,  Week, Month, Quarter, Year)
    - группировки по дате, дают возможность накапливать значения по документам за 
    конкретный период (на каждый день, неделю, месяц и т.д.). В запросе может 
    присутствовать несколько группировок такого типа.

Запрос
----------------------------------------------------------------------------------
- Область видимости переменных объекта типа "Запрос". Область видимости запроса
зависит от того, где исполняется метод Выполнить(). Если метод вызывается из
исполняемого модуля, то Запрос видит локальные переменные и параметры
процедуры/функции, глобальные переменные исполняемого модуля и экспортируемые
глобальные переменные глобального модуля. Если метод Запрос.Выполнить(ТекстЗапроса)
вызывается из экспортируемой процедуры/функции глобального модуля, то Запрос видит
локальные переменные и параметры экспортируемой процедуры/функции глобального
модуля, экспортируемые глобальные переменные глобального модуля, но не видит
неэкспортируемых глобальных переменных глобального модуля.
  Объявление внутренних переменных. Объявлением переменных запроса задается путь
обхода таблиц базы данных, и каждая таблица базы данных участвует в формировании
выборки только единожды. Поэтому нельзя объявлять переменную запроса, как несколько
ОписанийПеременной к одной и той же таблице.
    Док = Документ.ИмяДокумента.ПриходныйДокумент,
          Документ.ИмяДокумента.РасходныйДокумент;
В выборку будут попадать только данные из Документ.ИмяДокумента.ПриходныйДокумент,
а по пути Документ.ИмяДокумента.РасходныйДокумент - запрос вообще не пройдет.
  Особенности вычисления функций. При обходе регистров группировками вида:
    Группировка Документ;
    или
    Группировка СтрокаДокумента;
    или
    Имя = Регистр.ВидРегистра.ТекущийДокумент;
    Группировка Имя;
функции остатков (НачОст, КонОст) не расчитываются с детализаций - документ 
(строка документа), и равны 0.

- метод ИспользоватьГрафуОтбора. Для указания графы отбора по журналу расчетов
необходимо записать ее в следующем виде "ИмяСправочника.ИмяРеквизита".
  Запрос.ИспользоватьГрафуОтбора("Сотрудники.Подразделение");

Текст
----------------------------------------------------------------------------------
- метод КодоваяСтраница (CodePage)
   В документации неверно указан англоязычный синоним - должен быть CodePage

XBase
----------------------------------------------------------------------------------
- метод КодоваяСтраница (CodePage)
   В документации неверно указан англоязычный синоним - должен быть CodePage

- методы СоздатьФайл (CreateFile), ОткрытьФайл (OpenFile), СоздатьИндексныйФайл    (CreateIndex)
   Имена файлов таблицы и индекса должны задаваться по правилу 8.3. То есть название
   файла не должно превышать 8 символов, расширение файла не должно превышать 3 символа.

Методы различных объектов
----------------------------------------------------------------------------------
 - метод НазначитьТип (SetType)
   Параметр:  <Длина> - для типа "Строка" реквизитов неопределенного типа длина не может привышать
              22 символа. 


Объединение конфигураций:
==================================================================================
  В режиме объединения конфигураций выполняется также анализ изменений 
и объединение наборов прав пользователей и пользовательских интерфейсов.
  Обнаруженные изменения в наборах прав показываются в узлах соответствующих 
конкретным объектам метаданных и отдельно в нижней части дерева конфигурации. 
Изменения показываются в разрезе наборов прав. Изменения в правах можно просмотреть
используя кнопку "Сравнить". При выполнении объединения (независимо от того, выбран 
режим "Объединять объекты" или "Замещать объекты") права конкретного набора прав 
для конкретного объекта метаданных замещаются полностью в соответствии с выбранным 
приоритетом конфигурации. Замещение прав выполняется при условии, что в дереве 
конфигурации включен признак объединения и у объекта метаданных и у набора прав.
  Обнаруженные изменения в интерфейсах выводятся в нижней части дерева конфигурации.
При выполнении объединения (независимо от того, выбран режим "Объединять объекты" 
или "Замещать объекты") элементы меню и кнопки панелей инструментов для измененных
интерфейсов объединяются. При этом за основу берется интерфейс соответствующий 
выбранному приоритету конфигурации. 

Графы отбора
==================================================================================
	В графах отбора журналов документов не могу участвовать строковые реквизиты 
длиной более 20 символов, строковые реквизиты неограниченной длины и числовые реквизиты с
дробной частью.

Настройка маски строкового поля ввода
==========================================================================================
	В маске поля ввода символ "L" не может использоваться для обозначения 
собственно символа "L" вводимой строки. При включении символа "L" в маску он будет отрабатывать 
как символ принимающий значение "T" или "F" при нажатии соответственно символов "T" или "Y" 
и "F" или "N". 

Настройка маски кода счета для плана счетов
==========================================================================================
	При настройке маски кода счета у плана счетов существует возможность в качестве 
разделителя кодов субсчетов наряду с символом "точка" указать символ "двоеточие" (":"). 
Этот разделитель позволяет определить в маске кода счета уровень субсчетов, который
будет использоваться для группировки счетов в плане счетов и в бухгалтерских итогах,
но не будет отделяться точкой при вводе и отображении кода счета.
	При вводе кода счета, разделитель, заданный в маске в виде двоеточия, не отображается.
Код счета (субсчета), предшествующий такому разделителю, вводится позиционно. То есть пользователь 
должен дополнить эту часть кода пробелами справа, если длина кода меньше, чем это определенно в маске.
	При отображении кода счета в формах и в отчетах разделитель, заданный в маске в виде двоеточия, 
не отображается. Код, предшествующий такому разделителю, дополняется пробелами до длины 
определенной маской.
	При использовании кода счета во встроенном языке, можно указывать коды счетов 
с точками на месте разделителей заданных в маске в виде двоеточия или без них. 
Если не указываются точки, то код который предшествует такому разделителю должен быть дополнен
пробелами справа. При указании точки, код можно не дополнять пробелами.
	При наличии в конфигурации планов счетов с разделителем в виде двоеточия и использовании 
масок задаваемых пользователем в параметрах, пользовательская маска не будет применяться в полях 
ввода, которые допускают ввод счета из разных планов счетов. 
	При настройке маски допускается комбинирование разделителей типа "точка" и "двоеточие".
Это позволяет описывать структуру субсчетов в которой некоторые уровни будут отделяться 
точками а некоторые не будут.

Табличный документ
==========================================================================================
	В таблице существует возможность вывода текста ячеек и рисунков
под произвольным углом. Для обеспечения этой возможности используется
свойство "Ориентация" в палитре свойств на закладке "Положение".
В нем указывается угол наклона текста в градусах.

	В таблице существует возможность вывода в колонтитуле общего количества
страниц в печатаемом документе. Для этого в описании колонтитула следует
использовать конструкцию #Q.

	В таблице существует возможность вычисления текущего количества	
страниц, занимаемого таблицей при выводе на печать. Для этого следует
воспользоваться методом таблицы КоличествоСтраниц. 

Использование базовых версий 1С:Предприятия
==========================================================================================
Для базовых версий 1С:Предприятия не поддерживается работа в режиме Ole-automation сервера.

Деноминация оперативного учета
==================================================================================
  Описанные ниже средства системы 1С:Предприятие предназначены для реализации
деноминации базовой денежной единицы в компоненте оперативный учет. 
  Предлагаемое решение выполняет пересчет остатков по регистрам на дату
деноминации динамически, без создания новой информационной базы, что 
позволяет вести непрерывный оперативный учет. Для автоматической
поддержки пересчета остатков необходимо описать, какие ресурсы, каких 
регистров и при каких условиях должны быть пересчитаны, а также дату
деноминации, делитель и режим округления.
  После наступления деноминации необходимо сделать перерасчет итогов.
  Это решение дает возможность переносить остатки регистров через дату 
деноминации с их пересчетом без потери точности округления. Все документы 
остаются неудаленными, что делает возможным их изменение и перепроведение 
задним числом.

   Описание деноминации производится специальными конструкциями в глобальном
 модуле конфигурации.

Синтаксис
~~~~~~~~~
  Секция описания деноминации начинается с первой строки глобального
модуля, и все строки этой секции начинаются с символа '#' в первой позиции.

Пример:
# // строка описания деноминации
 # // Ошибка - символ '#' должен быть в первой позиции

Комментарии
----------
Комментарий начинается парой символов "//" и оканчивается концом строки.

ДатаДеноминации
---------------
Первым предложением должно быть предложение 'ДатаДеноминации', которое 
задает начало описания деноминации, а так же дату ее начала.
Синтаксис:
    ДатаДеноминации = дата;
Англоязычный синоним:
    DenominationDate = date;
где дата (date) - дата начала деноминации.
Пример:
ДатаДеноминации = '01.01.1998';

Делитель
--------
Устанавливает делитель, на который будут деноминироваться остатки
регистров.
Синтаксис:
    Делитель = число;
Англоязычный синоним:
    Divisor = number;
Пример:
    Делитель = 1000;

РежимОкругления
---------------
Устанавливает режим округления:
    - бухгалтерское  округление 1.5 = 1;
    - математическое округление 1.5 = 2;
По умолчанию используется математическое округление.
Синтаксис:
    РежимОкругления = число;
Англоязычный синоним:
    RoundMode = digit;
где число - режим округления:
    1 - бухгалтерское  округление;
    2 - математическое округление;
Пример:
  РежимОкругления = 1; // Устанавливаю бухгалтерское округление (1.5 = 1)
  РежимОкругления = 3; // Ошибка! Неверный аргумент. Может быть только 1 или 2.

Пересчет
--------
Устанавливает, какой ресурс, какого регистра необходимо деноминировать и
при каком условии.
Синтаксис:
    Пересчет(регистр, ресурс, путь, знак, константа);
Англоязычный синоним:
    Recalc(register, resource, path, sign, const);
где
регистр   - имя регистра;
ресурс    - имя ресурса регистра;
путь      - путь условия;
знак      - знак сравнения "=", "<>";
константа - имя константы, в которой хранится значение, с которым надо сравнивать значение пути.
путь, знак, константа - необязательные параметры.
Пример:
    Пересчет(ОстаткиТоваров, БазоваяСтоимость);
	// Пересчитывать только тогда, когда валюта учета товара равна Базовой валюте
    Пересчет(ОстаткиТоваров, ВалютнаяСтоимость, Товар.ВалютаУчета, "=", БазоваяВалюта);


   Общий пример применения:

#//--------------------------------------------------------------------------
#// Секция деноминации.
#//--------------------------------------------------------------------------
#// Пример деноминации типовой конфигурации редакции 4.
#//
#// Для деноминации регистра УчетКредита, 
#// необходимо в справочнике Клиент определить
#// ВалютаКредита для каждого элемента.
#// Необходимо проверить, что Константа.БазоваяВалюта - рубль.
#//--------------------------------------------------------------------------
# ДатаДеноминации = '01.01.1998';
# Делитель        = 1000;
# РежимОкругления = 2; // Окр(1.5) = 1 или Окр(1.5) = 2
#
# Пересчет(ОстаткиТоваров, БазоваяСтоимость);
# Пересчет(ОстаткиТоваров,ВалютнаяСтоим,Товар.ВалютаУчета,"=", БазоваяВалюта);
# Пересчет(Взаиморасчеты,СуммаБазовая);
# Пересчет(Касса,Наличность,Валюта,"=",БазоваяВалюта);
# Пересчет(УчетКредита,Долг,Клиент.ВалютаКредита,"=",БазоваяВалюта);
# Пересчет(УчетКредитаПоставщиков,Долг,Клиент.ВалютаКредита,"=",БазоваяВалюта);
# Пересчет(УчетРеализации,Стоимость,Товар.ВалютаУчета,"=",БазоваяВалюта);
# Пересчет(ИздержкиОбращения,БазоваяСтоимость);
# Пересчет(ИздержкиОбращения,ВалютнаяСтоим,Товар.ВалютаУчета,"=",БазоваяВалюта);
#
#//--------------------------------------------------------------------------


Защита от несанкционированного использования
==================================================================================
  В систему 1С:Предприятие 7.7 (7.70.006) внесены изменения в подсистему защиты от
несанционированного использования, основанную на аппаратных ключах защиты (HASP). 
При этом программные продукты системы 1С:Предприятие 7.7 (7.70.006) не смогут взаимодействовать 
с локально установленными ключами аппаратной защиты, если на компьютере пользователя не будет 
произведено обновление драйвера защиты. При запуске система 1С:Предприятие 7.7 (7.70.006) 
пытается обнаружить установленный на компьютере пользователя драйвер защиты и в случае, 
если его версия оказывается устаревшей, предпринимает попытку установить новую версию драйвера, 
о чем выдается соответствующее сообщение. Если после этого запуск системы 1С:Предприятие 7.7
производится успешно, то никаких специальных действий предпринимать не следует - драйвер нормально
установился и заработал. Если же при запуске выдается сообщение о том, что ключ аппаратной
защиты не найден, то следует произвести перезагрузку компьютера и повторить попытку запуска
системы 1С:Предприятие 7.7. В случае, если ключ защиты не будет обнаружен и в этот раз,
следует произвести установку драйвера защиты "вручную". Процедура установки драйвера защиты 
описана в брошюре "1С:Предприятие 7.7. Руководство по установке и запуску", входящей в комплект
поставки программных продуктов системы 1С:Предприятие 7.7.


Указание каталога временных файлов в командной строке запуска 1С:Предприятия
==================================================================================
  В брошюре "1С:Предприятие Версия 7.7. Руководство по установке и запуску" в описании параметров
командной строки не указано, что имеется параметр, позволяющий переопределить каталог, в котором 
1С:Предприятие будет создавать свои временные файлы. По умолчанию в качестве каталога временных
файлов 1С:Предприятие использует каталог временных файлов операционной системы.
  Параметр для переопределения каталога временных файлов имеет следующий вид:

  /T<Путь>

где <путь> - это путь к каталогу, в котором будут создаваться временные файлы. Путь может
быть задан как абсолютный (с указанием устройства и полного пути к каталогу) или относительно
каталога информационной базы. Например, в случае использования командной строки:

1CV7 ENTERPRISE /DC:\1cv7\db /TC:\TMP

в качестве каталога временных файлов 1С:Предприятие будет использовать каталог C:\TMP,
а в случае командной строки:

1CV7 ENTERPRISE /DC:\1cv7\db /TTMP

в качестве каталога временных файлов будет использован каталог C:\1cv7\db\TMP.


Работа 1С:Предприятия 7.7 для SQL с Microsoft SQL Server 2000
==================================================================================
  Начиная с релиза 7.70.015 1С:Предприятие 7.7 для SQL может работать с 
Microsoft SQL Server 2000. Предыдущие релизы не имели такой возможности из-за особенностей 
определения версии MS SQL Server и драйверов ODBC, поставляемых в составе MS SQL Server 2000.


Отключение проверки порядка сортировки
==================================================================================
  Начиная с релиза 7.70.026 имеется возможность отключения проверки идентичности порядка 
сортировки, установленного для базы данных и системного порядка сортировки.
  Отключение проверки достигается созданием в каталоге программных файлов системы или в
каталоге информационной базы сигнального файла с именем OrdNoChk.prm. Содержание файла
никакого влияния на работу системы не оказывает. В случае размещения файла в каталоге
программных файлов системы проверка отключается при работе со всеми информационными
базами, если в каталоге информационной базы - то только при работе с данной базой.
  Применение данной возможности может быть рекомендовано только в крайних случаях, когда
не имеется возможности согласовать системный порядок сортировки с порядком сортировки,
устанавливаемым для информационной базы.
  При отключении проверки порядка сортировки в условиях применения компоненты управления
распределенными информационными базами НЕ СЛЕДУЕТ использовать символы любых алфавитов,
кроме латинского, в трехбуквенном идентификаторе информационных баз, входящих в состав 
распределенной.
  Следует иметь в виду, что 1С:Предприятие при работе использует возможности по сортировке
обоих механизмов, и отключение проверки идентичности порядка в них может привести к
неожиданному для пользователя порядку следования строк, например, при формировании отчетов.
