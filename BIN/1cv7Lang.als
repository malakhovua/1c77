{"Shell",
 {"Folder","AST","Конструкции языка","",
 {"Folder","AST","Структурные","",
    {"Item","AST","Процедура","Procedure",
"Процедура <?>()

КонецПроцедуры",
"Procedure <?>()

EndProcedure",
"@Синтаксис:
Процедура <Имя_проц>([[Знач] <Парам1>[=<ДефЗнач>],
... ,[Знач] <ПарамN>[=<ДефЗнач>]])[Экспорт]	
    //Объявления локальных переменных;
    //Операторы;
    ...
   [Возврат;]
   //Операторы;
	...
КонецПроцедуры
@Назначение:
Ключевое слово Процедура начинает секцию исходного текста, выполнение которого можно инициировать из любой точки программного модуля, просто указав <Имя_процедуры> со списком параметров (если параметры не передаются, то круглые скобки, тем не менее, обязательны). Конец программной секции процедуры определяется по ключевому слову КонецПроцедуры.
@Замечание:
Ключевые слова Процедура, КонецПроцедуры, являются  не операторами, а операторными скобками, поэтому не должны заканчиваться точкой с запятой (это может приводить к ошибкам выполнения модуля).
@Параметры:
<Имя_проц> - Назначает имя процедуры.
Знач  - Необязательное ключевое слово, которое указывает на то, что следующий за ним параметр передается по значению, т.е. изменение значения формального параметра при выполнении процедуры никак не повлияет на фактический параметр, переданный при вызове процедуры. Если это ключевое слово не указано, то параметр процедуры передается по ссылке, то есть изменение внутри процедуры значения формального параметра приведет к изменению значения соответствующего фактического параметра.
<Парам1>,...,<ПарамN> - Необязательный  список формальных параметров, разделяемых запятыми. Значения формальных параметров должны соответсвовать значениям передаваемых при вызове процедуры фактических параметров. В этом списке определяются имена каждого из параметров так, как они используются в тексте процедуры. Список формальных параметров может быть пуст.
=<ДефЗнач> - Необязательная установка значения параметра по умолчанию. Параметры с установленными значениями по умолчанию можно располагать в любом месте списка формальных параметров. Если параметр при вызове процедуры опущен, то он принимает либо установленное по умолчанию значение (если оно есть) либо принимает ''пустое'' значение (значение неопределенного типа). Если параметру не задано значение по умолчанию и он является последним в списке передаваемых параметров, то при вызове процедуры его нельзя опускать. Если параметру задано значение по умолчанию и он является последним в списке, то при вызове процедуры его можно опускать в списке передаваемых фактических параметров и не ставить запятую перед опущенным параметром. Если параметру не задано значения по умолчанию, то при вызове процедуры его можно опускать в списке передаваемых фактических параметров, но разделительную запятую надо ставить. 
Экспорт - Необязательное ключевое слово, которое указывает на то, что данная процедура является доступной из других программных модулей. Имеет смысл только в глобальном программном модуле.
//Объявления локальных переменных - Объявляются локальные переменные, на которые можно ссылаться только в рамках этой процедуры.
//Операторы - Исполняемые операторы процедуры.
Возврат  - оператор, который завершает выполнение процедуры и осуществляет возврат в точку программы, из которой было обращение к процедуре. Использование данного оператора в процедуре не обязательно."
    },
    {"Item","AST","Функция","Function",
"Функция <?>()
	Возврат ??;
КонецФункции",
"Function <?>()
	Return ??;
EndFunction",
"@Синтаксис:
Функция <Имя_функции>([[Знач] <Парам1>[=<ДефЗнач>], ... ,[Знач] <ПарамN>[=<ДефЗнач>]])[Экспорт]	
   //Объявления локальных переменных;
   // Операторы ;
   ...
   Возврат <ВозвращаемоеЗначение>;
   // Операторы ;
   ...
КонецФункции
@Назначение:
Ключевое слово Функция начинает секцию исходного текста функции, выполнение которой можно инициировать из любой точки программного модуля, просто указав <Имя_функции>  со списком параметров (если параметры не передаются, то круглые скобки, тем не менее, обязательны).  Выполнение функции заканчивается обязательным оператором Возврат. Функции отличаются от процедур только тем, что возвращают ВозвращаемоеЗначение. Конец программной секции функции определяется по ключевому слову КонецФункции. Вызов любой функции в тексте программного модуля можно записывать как вызов процедуры, т.е. в языке допускается не принимать от функции возвращаемое значение.
@Замечание:
Ключевые слова Функция, КонецФункции, являются  не операторами, а операторными скобками, поэтому не должны заканчиваться точкой с запятой (это может приводить к ошибкам выполнения модуля).
@Параметры:
<Имя_функции> - Назначает имя функции
Знач  - Необязательное ключевое слово, которое указывает на то, что следующий за ним параметр передается по значению, т.е. изменение значения формального параметра при выполнении функции никак не повлияет на фактический параметр, переданный при вызове функции. Если это ключевое слово не указано, то параметр функции передается по ссылке, то есть изменение внутри функции значения формального параметра приведет к изменению значения соответствующего фактического параметра.
<Парам1>,...,<ПарамN> - Необязательный  список формальных параметров, разделяемых запятыми. Значения формальных параметров должны соответсвовать значениям передаваемых при вызове функции фактических параметров. В этом списке определяются имена каждого из параметров так, как они используются в тексте функции. Список формальных параметров может быть пуст.
=<ДефЗнач> - Необязательная установка значения параметра по умолчанию. Параметры с установленными значениями по умолчанию можно располагать в любом месте списка формальных параметров. Если параметр при вызове функции опущен, то он принимает либо установленное по умолчанию значение (если оно есть) либо принимает ''пустое'' значение (значение неопределенного типа). Если параметру не задано значение по умолчанию и он является последним в списке передаваемых параметров, то при вызове функции его нельзя опускать. Если параметру задано значение по умолчанию и он является последним в списке, то при вызове функции его можно опускать в списке передаваемых фактических параметров и не ставить запятую перед опущенным параметром. Если параметру не задано значения по умолчанию, то при вызове функции его можно опускать в списке передаваемых фактических параметров, но разделительную запятую надо ставить. 
Экспорт - Необязательное ключевое слово, которое указывает на то, что данная функция является доступной из других программных модулей. Имеет смысл только в глобальном программном модуле.
//Объявления локальных переменных - Объявляются локальные переменные, на которые можно ссылаться только в рамках этой функции. 
//Операторы - Исполняемые операторы функции.
Возврат  - оператор, который завершает выполнение функции и возвращает ВозвращаемоеЗначение в выражение, в котором используется функция. Использование данного ключевого слова в функции обязательно.
<ВозвращаемоеЗначение> - Выражение, значение которого содержит результат обращения к функции."
    },
    {"Item","AST","Если Тогда","If Then",
"Если <?>  Тогда
	
КонецЕсли;",
"If <?>  Then
	
EndIf;",
"@Синтаксис:
Если <Логическое_выражение> Тогда
	<операторы>
КонецЕсли;
@Назначение:
оператор условного выполнения.
@Параметры:
<Логическое_выражение> - логическое выражение;
<операторы> - последовательность исполняемых операторов.
Подробнее см. в документации, глава 'Управляющие операторы'"
    },
    {"Item","AST","Если Тогда Иначе","If Then Else",
"Если <?>  Тогда
	
Иначе
	
КонецЕсли;",
"If <?>  Then
	
Else
	
EndIf;",
"@Синтаксис:
Если <Логическое_выражение> Тогда
	<Тогда_операторы>
Иначе
	<Иначе_операторы>
КонецЕсли;
@Назначение:
оператор условного выполнения.
@Параметры:
<Логическое_выражение> - логическое выражение;
<Тогда_операторы> - последовательность исполняемых операторов;
<Иначе_операторы> - последовательность исполняемых операторов.
Подробнее см. в документации, глава 'Управляющие операторы'"
    },
    {"Item","AST","Если Тогда ИначеЕсли","If Then ElsIf",
"Если <?>  Тогда
	
ИначеЕсли ()  Тогда
	
Иначе
	
КонецЕсли;",
"If <?>  Then
	
ElsIf ()  Then
	
Else
	
EndIf;",
"@Синтаксис:
Если <Логическое_выражение_1> Тогда
	<Тогда_операторы>
[ИначеЕсли <Логическое_выражение_к> Тогда
	<ИначеЕсли_операторы_к>]
[Иначе
	<Иначе_операторы>]
КонецЕсли;
@Назначение:
оператор условного выполнения.
@Параметры:
<Логическое_выражение_1> - логическое выражение;
.
.
<Логическое_выражение_к> - логическое выражение;
<Тогда_операторы> - последовательность исполняемых операторов;
<ИначеЕсли_операторы_к> - последовательность исполняемых операторов;
<Иначе_операторы> - последовательность исполняемых операторов.
Подробнее см. в документации, глава 'Управляющие операторы'"
    },
    {"Item","AST","Пока Цикл","While Do",
"Пока <?>  Цикл
	
КонецЦикла;",
"While <?>  Do
	
EndDo;",
"@Синтаксис:
Пока <Логическое_выражение> Цикл
	<операторы>
КонецЦикла;
@Назначение:
оператор цикла с предусловием.
@Параметры:
<Логическое_выражение> - логическое выражение;
<операторы> - последовательность исполняемых операторов.
Подробнее см. в документации, глава ''Управляющие операторы''"
    },
    {"Item","AST","Для Цикл","For Do",
"Для <?> = <?> По <?>  Цикл
	
КонецЦикла;",
"For <?> = <?> To <?>  Do
	
EndDo;",
"@Синтаксис:
Для <Имя_переменной>=<Выражение1> По <Выражение2> Цикл
	<операторы>
КонецЦикла;
@Назначение:
оператор цикла с шагом.
@Параметры:
<Имя_переменной> - идентификатор переменной (счетчик цикла);
<Выражение1> - начальное значение счетчика цикла;
<Выражение2> - конечное значение счетчика цикла;
<операторы> - последовательность исполняемых операторов.
Подробнее см. в документации, глава ''Управляющие операторы''"
    },
    {"Item","AST","Попытка Исключение","Try Except",
"Попытка

Исключение
	
КонецПопытки;",
"Try

Except	

EndTry;",
"@Синтаксис:
Попытка
	// Некоторые действия;
Исключение
	// Обработка исключительной ситуации;
КонецПопытки;
@Назначение:
управляет выполнением программы, основываясь на возникающих при выполнении модуля ошибочных (исключительных) ситуациях и определяет обработку этих ситуаций. В качестве ошибочных (исключительных) ситуаций воспринимаются ошибки времени выполнения модуля. 
   В выдаче диагностики помощь может оказать встроенная функция ОписаниеОшибки()  (англоязычный синоним GetErrorDescription). Эта функция не имеет параметров, а в качестве значения возвращает описание ошибки, такое же, как то, которое было бы выдано в окне сообщений, в случае отсутствия обработчика исключительной ситуации, за исключением описания модуля и строки, в которой ошибка возникла. Применять данную функцию имеет смысл только при выполнении последовательности операторов <// Обработка исключительной ситуации>, так как в ином случае она вернет пустую строку.
См. также ВызватьИсключение.
Подробнее см. в документации, глава ''Управляющие операторы''"
    },
    },
 {"Folder","AST","Передача управления","",
    {"Item","AST","Перейти","Goto",
"Перейти <?>;",
"Goto <?>;",
"@Синтаксис:
Перейти <Метка>;
@Назначение:
Безусловная передача управления на исполняемый оператор программного блока.
@Параметры:
<Метка> - метка исполняемого оператора программного блока.
Подробнее см. в документации, глава 'Управляющие операторы'"
    },
    {"Item","AST","Продолжить","Continue",
"Продолжить;",
"Continue;",
"@Синтаксис:
Продолжить;
@Назначение:
Передача управление в начало цикла.
Подробнее см. в документации, глава 'Управляющие операторы'"
    },
    {"Item","AST","Прервать","Break",
"Прервать;",
"Break;",
"@Синтаксис:
Прервать;
@Назначение:
Прерывает выполнение цикла.
Подробнее см. в документации, глава 'Управляющие операторы'"
    },
    {"Item","AST","Возврат","Return",
"Возврат <?>;",
"Return <?>;",
"@Синтаксис:
Возврат [<Выражение>]
@Назначение:
Завершение процедуры или функции.
@Параметры:
<Выражение> - значение возвращаемое функцией.
@Замечание:
Возвращаемое значение обязательно при завершении функции, но не может использоваться при завершении процедуры.
Подробнее см. в документации, глава 'Управляющие операторы'"
    },
    {"Item","AST","ВызватьИсключение","",
"ВызватьИсключение;",
"Raise;",
"@Синтаксис:
ВызватьИсключение;
@Назначение:
Данный оператор применяется в языковой конструкции Попытка-Исключение-КонецПопытки. Обработки исключительной ситуации могут быть вложенными. При этом, при возникновении исключительной ситуации управлениие будет передано на самый ''внутренний'' обработчик, начинающийся с ключевого слова Исключение. Последовательность операторов обработки исключительной ситуации может содержать оператор ВызватьИсключение. Выполнение данного оператора прекращает выполнение последовательности обработки исключительной ситуации и производится поиск более ''внешнего'' обработчика. Если таковой есть, то управление передается на его первый оператор. Если нет, то выполнение модуля прекращается с выдачей сообщения о первоначально возникшей ошибке. Оператор ВызватьИсключение может встречаться только внутри операторных скобок Исключение ... КонецПопытки.
@Параметры:
Нет."
    },
    },
 {"Folder","AST","Директивы","",
    {"Item","AST","ЗагрузитьИзФайла","LoadFromFile",
"#ЗагрузитьИзФайла <?>",
"#LoadFromFile <?>",
"@Синтаксис:
#ЗагрузитьИзФайла <ИмяФайла>
@Назначение:
Переключение загрузки программного модуля на загрузку из текстового файла.
@Параметры:
<ИмяФайла> - имя файла, содержащего исходный текст программного модуля (записывается без кавычек и скобок).
@Замечание:
Конструкция #ЗагрузитьИзФайла должна записываться в первой строке программного модуля с первой позиции.
Подробнее см. в документации, глава 'Управляющие операторы'"
    },
    },
 {"Folder","AST","Предварительное описание процедур и функций","",
    {"Item","AST","Процедура","Procedure",
"Процедура <?>() Далее",
"Procedure <?>() Forward",
"@Синтаксис:
Процедура <Имя_проц>(<Парам1>,...,<ПарамN>) Далее	
@Назначение:
В тексте программного модуля допускается предварительное описание процедур и функций без их определения. На то, что это предварительное описание, указывает наличие ключевого слова Далее, которое замещает в случае предварительного описания тело процедуры и ключевое слово КонецПроцедуры. Предварительное описание процедуры/функции может содержаться в любом месте текста модуля, где допускается фактическое определение процедуры или функции, а сам заголовок процедуры/функции должен в точности соответствовать заголовку в фактическом определении, включая наличие, если необходимо, ключевого слова Экспорт и имен формальных параметров."
    },
    {"Item","AST","Функция","Function",
"Функция <?>() Далее",
"Function <?>() Forward",
"@Синтаксис:
Функция <Имя_функции>(<Парам1>,...,<ПарамN>) Далее	
@Назначение:
В тексте программного модуля допускается предварительное описание процедур и функций без их определения. На то, что это предварительное описание, указывает наличие ключевого слова Далее, которое замещает в случае предварительного описания тело процедуры и ключевое слово КонецПроцедуры. Предварительное описание процедуры/функции может содержаться в любом месте текста модуля, где допускается фактическое определение процедуры или функции, а сам заголовок процедуры/функции должен в точности соответствовать заголовку в фактическом определении, включая наличие, если необходимо, ключевого слова Экспорт и имен формальных параметров."
    },
    },
    },
 {"Folder","AST","Системные","",
 {"Folder","AST","Константы","",
    {"Item","AST","РазделительСтраниц","PageBreak",
"РазделительСтраниц",
"PageBreak",
"@Синтаксис:
РазделительСтраниц
@Назначение:
Символ перевода страницы текста."
    },
    {"Item","AST","РазделительСтрок","LineBreak",
"РазделительСтрок",
"LineBreak",
"@Синтаксис:
РазделительСтрок
@Назначение:
Символ перевода строки текста."
    },
    {"Item","AST","СимволТабуляции","TabSymbol",
"СимволТабуляции",
"TabSymbol",
"@Синтаксис:
СимволТабуляции
@Назначение:
Символ табуляции текста."
    },
    },
 {"Folder","AST","Функции/процедуры","",
 {"Folder","AST","Математические","",
    {"Item","AST","Окр","Round",
"Окр(<?>,,)",
"Round(<?>,,)",
"@Синтаксис:
Окр(<Число1>,<Число2>,<Способ>)
@Назначение:
Возвращает значение результата округления.
@Параметры:
<Число1> - числовое выражение, значение которого надо округлить;
<Число2> - число значащих цифр дробной части или 
минус число не значащих младших цифр целой части (не обязателен, по умолчанию - 0);
<Способ> - способ округления граничных значений: 0 - если 1.5 округляется до 1, 1 - если 1.5 округляется до 2 (не обязателен, по умолчанию принимается значение, установленное в окне свойств конфигурации: Конфигурация/Задача/Свойства страница Задача, поле Округление)."
    },
    {"Item","AST","Цел","Int",
"Цел(<?>)",
"Int(<?>)",
"@Синтаксис:
Цел(<Число>)
@Назначение:
Возвращает значение целой части параметра.
@Параметры:
<Число> - числовое выражение."
    },
    {"Item","AST","Мин","Min",
"Мин(<?>)",
"Min(<?>)",
"@Синтаксис:
Мин(<Элемент1>,...,<ЭлементN>)
@Назначение:
Возвращает значение наименьшего параметра.
@Параметры:
<Элемент1>,...,<ЭлементN> - список выражений базовых типов данных.
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    {"Item","AST","Макс","Max",
"Макс(<?>)",
"Max(<?>)",
"@Синтаксис:
Макс(<Элемент1>,...,<ЭлементN>)
@Назначение:
Возвращает значение наибольшего параметра.
@Параметры:
<Элемент1>,...,<ЭлементN> - список выражений базовых типов данных.
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    {"Item","AST","Лог10","Log10",
"Лог10(<?>)",
"Log10(<?>)",
"@Синтаксис:
Лог10(<Число>)
@Назначение:
Возвращает значение десятичного логарифма параметра.
@Параметры:
<Число> - числовое выражение.
@Замечание:
Если значение параметра отрицательно или нуль, то возвращаемое значение - 0."
    },
    {"Item","AST","Лог","Ln",
"Лог(<?>)",
"Ln(<?>)",
"@Синтаксис:
Лог(<Число>)
@Назначение:
Возвращает значение натурального логарифма параметра.
@Параметры:
<Число> - числовое выражение.
@Замечание:
Если значение параметра отрицательно или нуль, то возвращаемое значение - 0."
    },
    },
 {"Folder","AST","Строковые","",
    {"Item","AST","СтрДлина","StrLen",
"СтрДлина(<?>)",
"StrLen(<?>)",
"@Синтаксис:
СтрДлина(<Строка>)
@Назначение:
Возвращает длину строки.
@Параметры:
<Строка> - строковое выражение."
    },
    {"Item","AST","ПустаяСтрока","IsBlankString",
"ПустаяСтрока(<?>)",
"IsBlankString(<?>)",
"@Синтаксис:
ПустаяСтрока(<Строка>)
@Назначение:
Проверить строку на наличие значащих символов.
Возвращает: 1 - если строка пустая или содержит только пробелы, 0 - иначе.
@Параметры:
<Строка> - строковое выражение."
    },
    {"Item","AST","СокрЛ","TrimL",
"СокрЛ(<?>)",
"TrimL(<?>)",
"@Синтаксис:
СокрЛ(<Строка>)
@Назначение:
Возвращает cтроку, полученную из параметра отсечением левых пробелов.
@Параметры:
<Строка> - строковое выражение."
    },
    {"Item","AST","СокрП","TrimR",
"СокрП(<?>)",
"TrimR(<?>)",
"@Синтаксис:
СокрП(<Строка>)
@Назначение:
Возвращает cтроку, полученную из исходной строки отсечением справа всех существующих пробелов.
@Параметры:
<Строка> - строковое выражение."
    },
    {"Item","AST","СокрЛП","TrimAll",
"СокрЛП(<?>)",
"TrimAll(<?>)",
"@Синтаксис:
СокрЛП(<Строка>)
@Назначение:
Отсекает стоящие слева и справа пробелы и возвращает результирующую строку.
@Параметры:
<Строка> - строковое выражение."
    },
    {"Item","AST","Лев","Left",
"Лев(<?>,)",
"Left(<?>,)",
"@Синтаксис:
Лев(<Строка>,<Число>)
@Назначение:
Возвращает cтроку, содержащую первые (самые левые) символы текстовой строки.
@Параметры:
<Строка> - строка, содержащая извлекаемые символы;
<Число> - количество символов, которое должна вернуть функция."
    },
    {"Item","AST","Прав","Right",
"Прав(<?>,)",
"Right(<?>,)",
"@Синтаксис:
Прав(<Строка>,<Число>)
@Назначение:
Возвращает cтроку, содержащую последние (самые правые) символы текстовой строки.
@Параметры:
<Строка> - строка, содержащая извлекаемые символы;
<Число> - количество символов, которое должна вернуть функция."
    },
    {"Item","AST","Сред","Mid",
"Сред(<?>,)",
"Mid(<?>,)",
"@Синтаксис:
Сред(<Строка>,<Число1>,<Число2>)
@Назначение:
Возвращает подcтроку исходной строки, заданную номером  позиции и числом символов.
@Параметры:
<Строка> - строка, содержащая извлекаемые символы;
<Число1> - определяет позицию первого символа, извлекаемого из строки (начиная с 1);
<Число2> - количество символов, которое должна вернуть функция (если опущен, то до конца строки)."
    },
    {"Item","AST","Найти","Find",
"Найти(<?>,)",
"Find(<?>,)",
"@Синтаксис:
Найти(<Строка1>,<Строка2>)
@Назначение:
Возвращает позицию первого вхождения в строку поиска заданной подстроки.
@Параметры:
<Строка1> - строка в которой ищем (место поиска);
<Строка2> - строка которую ищем (шаблон поиска).
@Замечание:
Если не находит - возвращает число 0.
Первая позиция имеет индекс 1."
    },
    {"Item","AST","СтрЗаменить","StrReplace",
"СтрЗаменить(<?>,,)",
"StrReplace(<?>,,)",
"@Синтаксис:
СтрЗаменить(<СтрИсточник>,<СтрПодстрока>,<СтрЗамены>)
@Назначение:
Возвращает строку, полученную из строки поиска заменой всех вхождений шаблона поиска строкой замены.
@Параметры:
<СтрИсточник> - строка в которой ищем (место поиска);
<СтрПодстрока> - строка которую ищем (шаблон поиска);
<СтрЗамены> - строка, которой заменяем найденную подстроку (строка замены)."
    },
    {"Item","AST","СтрЧислоВхождений","StrCountOccur",
"СтрЧислоВхождений(<?>,)",
"StrCountOccur(<?>,)",
"@Синтаксис:
СтрЧислоВхождений(<СтрИсточник>,<СтрПодстрока>)
@Назначение:
Возвращает число вхождений строки шаблона поиска в строку поиска.
@Параметры:
<СтрИсточник> - строка в которой ищем (место поиска);
<СтрПодстрока> - строка которую ищем (шаблон поиска)."
    },
    {"Item","AST","СтрКоличествоСтрок","StrLineCount",
"СтрКоличествоСтрок(<?>)",
"StrLineCount(<?>)",
"@Синтаксис:
СтрКоличествоСтрок(<Строка>)
@Назначение:
Возвращает число строк в многострочном тексте.
@Параметры:
<Строка> - строковое выражение, в котором строки разделены символами перевода строк.
См. также: РазделительСтрок"
    },
    {"Item","AST","СтрПолучитьСтроку","StrGetLine",
"СтрПолучитьСтроку(<?>,)",
"StrGetLine(<?>,)",
"@Синтаксис:
СтрПолучитьСтроку(<Текст>,<НомерСтроки>)
@Назначение:
Возвращает строку из многострочного текста по заданному номеру.
@Параметры:
<Текст> - строковое выражение, в котором строки разделены символами перевода строк;
<НомерСтроки> - номер строки.
См. также: РазделительСтрок"
    },
    {"Item","AST","Врег","Upper",
"Врег(<?>)",
"Upper(<?>)",
"@Синтаксис:
Врег(<Строка>)
@Назначение:
Возвращает строку, полученную из исходной преобразованием всех символов в верхний регистр.
@Параметры:
<Строка> - исходная строка."
    },
    {"Item","AST","Нрег","Lower",
"Нрег(<?>)",
"Lower(<?>)",
"@Синтаксис:
Нрег(<Строка>)
@Назначение:
Возвращает строку, полученную из исходной преобразованием всех символов в нижний регистр.
@Параметры:
<Строка> - исходная строка."
    },
    {"Item","AST","OemToAnsi","OemToAnsi",
"OemToAnsi(<?>)",
"OemToAnsi(<?>)",
"@Синтаксис:
OemToAnsi(<Строка>)
@Назначение:
Возвращает строку, полученную из исходной преобразованием всех символов в кодировку Ansi.
@Параметры:
<Строка> - исходная строка."
    },
    {"Item","AST","AnsiToOem","AnsiToOem",
"AnsiToOem(<?>)",
"AnsiToOem(<?>)",
"@Синтаксис:
AnsiToOem(<Строка>)
@Назначение:
Возвращает строку, полученную из исходной преобразованием всех символов в кодировку Oem.
@Параметры:
<Строка> - исходная строка."
    },
    {"Item","AST","Симв","Chr",
"Симв(<?>)",
"Chr(<?>)",
"@Синтаксис:
Симв(<КодСимвола>)
@Назначение:
Возвращает односимвольную строку, содержащую символ с заданным кодом.
@Параметры:
<КодСимвола> - числовое значение кода символа.
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    {"Item","AST","КодСимв","Asc",
"КодСимв(<?>)",
"Asc(<?>)",
"@Синтаксис:
КодСимв(<Символ>)
@Назначение:
Возвращает код первого символа, содержащегося в строке.
@Параметры:
<Символ> - строковое выражение."
    },
    },
 {"Folder","AST","Работа с датой","",
    {"Item","AST","РабочаяДата","WorkingDate",
"РабочаяДата(<?>,)",
"WorkingDate(<?>,)",
"@Синтаксис:
РабочаяДата(<Дата>,<РежимСменыРабДаты>)
@Назначение:
Устанавливает значение рабочей даты. Возвращает значение рабочей даты, выбранной в текущем сеансе работы программы.
Рабочая дата может изменяться при помощи главного меню Сервис-Параметры-Общие-РабочаяДата).
@Параметры:
<Дата> - Необязательный параметр. Выражение типа дата.
<РежимСменыРабДаты> - Необязательный параметр. Режим автоматической смены рабочей даты в полночь: 0 - не менять; 1 - менять с предупреждением; 2 - менять автоматически без предупреждения. Если параметр не указан, то режим не меняется и действует установка, выбранная в параметрах системы."
    },
    {"Item","AST","ТекущаяДата","CurDate",
"ТекущаяДата()",
"CurDate()",
"@Синтаксис:
ТекущаяДата()
@Назначение:
Возвращает текущую системную дату."
    },
    {"Item","AST","ДобавитьМесяц","AddMonth",
"ДобавитьМесяц(<?>,)",
"AddMonth(<?>,)",
"@Синтаксис:
ДобавитьМесяц(<Дата>,<ЧислоМесяцев>)
@Назначение:
Возвращает дату, полученную добавлением к исходной дате заданного числа месяцев.
@Параметры:
<Дата> - выражение со значением типа дата;
<ЧислоМесяцев> - число месяцев, добавляемое к дате."
    },
    {"Item","AST","НачМесяца","BegOfMonth",
"НачМесяца(<?>)",
"BegOfMonth(<?>)",
"@Синтаксис:
НачМесяца(<Дата>)
@Назначение:
Возвращает дату начала месяца для заданной даты.
@Параметры:
<Дата> - выражение со значением типа дата."
    },
    {"Item","AST","КонМесяца","EndOfMonth",
"КонМесяца(<?>)",
"EndOfMonth(<?>)",
"@Синтаксис:
КонМесяца(<Дата>)
@Назначение:
Возвращает дату конца месяца для заданной даты.
@Параметры:
<Дата> - выражение со значением типа дата."
    },
    {"Item","AST","НачКвартала","BegOfQuart",
"НачКвартала(<?>)",
"BegOfQuart(<?>)",
"@Синтаксис:
НачКвартала(<Дата>)
@Назначение:
Возвращает дату начала квартала для заданной даты.
@Параметры:
<Дата> - выражение со значением типа дата."
    },
    {"Item","AST","КонКвартала","EndOfQuart",
"КонКвартала(<?>)",
"EndOfQuart(<?>)",
"@Синтаксис:
КонКвартала(<Дата>)
@Назначение:
Возвращает дату конца квартала для заданной даты.
@Параметры:
<Дата> - выражение со значением типа дата."
    },
    {"Item","AST","НачГода","BegOfYear",
"НачГода(<?>)",
"BegOfYear(<?>)",
"@Синтаксис:
НачГода(<Дата>)
@Назначение:
Возвращает дату начала года для заданной даты.
@Параметры:
<Дата> - выражение со значением типа дата."
    },
    {"Item","AST","КонГода","EndOfYear",
"КонГода(<?>)",
"EndOfYear(<?>)",
"@Синтаксис:
КонГода(<Дата>)
@Назначение:
Возвращает дату конца года для заданной даты.
@Параметры:
<Дата> - выражение со значением типа дата."
    },
    {"Item","AST","НачНедели","BegOfWeek",
"НачНедели(<?>)",
"BegOfWeek(<?>)",
"@Синтаксис:
НачНедели(<Дата>)
@Назначение:
Возвращает дату начала недели для заданной даты.
@Параметры:
<Дата> - выражение со значением типа дата."
    },
    {"Item","AST","КонНедели","EndOfWeek",
"КонНедели(<?>)",
"EndOfWeek(<?>)",
"@Синтаксис:
КонНедели(<Дата>)
@Назначение:
Возвращает дату конца недели для заданной даты.
@Параметры:
<Дата> - выражение со значением типа дата."
    },
    {"Item","AST","ДатаГод","GetYear",
"ДатаГод(<?>)",
"GetYear(<?>)",
"@Синтаксис:
ДатаГод(<Дата>)
@Назначение:
Возвращает числовое значение года для заданной даты.
@Параметры:
<Дата> - выражение со значением типа дата."
    },
    {"Item","AST","ДатаМесяц","GetMonth",
"ДатаМесяц(<?>)",
"GetMonth(<?>)",
"@Синтаксис:
ДатаМесяц(<Дата>)
@Назначение:
Возвращает числовое значение месяца для заданной даты.
@Параметры:
<Дата> - выражение со значением типа дата."
    },
    {"Item","AST","ДатаЧисло","GetDay",
"ДатаЧисло(<?>)",
"GetDay(<?>)",
"@Синтаксис:
ДатаЧисло(<Дата>)
@Назначение:
Возвращает числовое значение дня месяца для заданной даты.
@Параметры:
<Дата> - выражение со значением типа дата."
    },
    {"Item","AST","НомерНеделиГода","GetWeekOfYear",
"НомерНеделиГода(<?>)",
"GetWeekOfYear(<?>)",
"@Синтаксис:
НомерНеделиГода(<Дата>)
@Назначение:
Возвращает номер недели в году для заданной даты.
@Параметры:
<Дата> - выражение со значением типа дата."
    },
    {"Item","AST","НомерДняГода","GetDayOfYear",
"НомерДняГода(<?>)",
"GetDayOfYear(<?>)",
"@Синтаксис:
НомерДняГода(<Дата>)
@Назначение:
Возвращает порядковый номер дня в году для заданной даты.
@Параметры:
<Дата> - выражение со значением типа дата."
    },
    {"Item","AST","НомерДняНедели","GetDayOfWeek",
"НомерДняНедели(<?>)",
"GetDayOfWeek(<?>)",
"@Синтаксис:
НомерДняНедели(<Дата>)
@Назначение:
Возвращает порядковый номер дня недели для заданной даты.
@Параметры:
<Дата> - выражение со значением типа дата.
@Замечание:
Порядковые номера дней недели: 1 - понедельник, 2 - вторник, ..., 7 - воскресенье."
    },
    {"Item","AST","ПериодСтр","PeriodStr",
"ПериодСтр(<?>)",
"PeriodStr(<?>)",
"@Синтаксис:
ПериодСтр(<ДатаНачалаПериода>,<ДатаКонцаПериода>)
@Назначение:
Возвращает информацию о периоде бухгалтерских итогов в виде строки символов. Строка может использоваться для выдачи инфорации о периоде итогов в отчетах. 
@Параметры:
<ДатаНачалаПериода> - выражение со значением типа дата. Начальная дата периода
<ДатаКонцаПериода> - выражение со значением типа дата. Конечная  дата периода
@Пример:
Сообщить(ПериодСтр('01.01.97','31.03.97'));  //Выводит ''1 квартал 1997 г.''"
    },
    {"Item","AST","НачалоСтандартногоИнтервала","BegOfStandardRange",
"НачалоСтандартногоИнтервала(<?>)",
"BegOfStandardRange(<?>)",
"@Синтаксис:
НачалоСтандартногоИнтервала(<Вариант>)
@Назначение:
Устанавливает вариант задания стандартного начала интервала отображения журнала документов. Возвращает текущий установленный вариант.
@Параметры:
<Вариант> - необязательный параметр. Выражение со значением типа строка или дата. Возможные строковые значения параметра: ''День'', ''Месяц'', ''Квартал'', ''Год'', ''Day'', ''Month'', ''Quarter'', ''Year''. Значением типа дата задается конкретная дата начала интервала журнала документов. Если параметр не задан, то установка сделанная в параметрах системы не меняется, а только возвращается текущий вариант."
    },
    {"Item","AST","КонецСтандартногоИнтервала","EndOfStandardRange",
"КонецСтандартногоИнтервала(<?>)",
"EndOfStandardRange(<?>)",
"@Синтаксис:
КонецСтандартногоИнтервала(<Вариант>)
@Назначение:
Устанавливает вариант задания стандартного конца интервала отображения журнала документов. Возвращает текущий установленный вариант.
@Параметры:
<Вариант> - необязательный параметр. Выражение со значением типа строка или дата. Возможные строковые значения параметра: ''День'', ''Месяц'', ''Квартал'', ''Год'', ''Day'', ''Month'', ''Quarter'', ''Year''. Значением типа дата задается конкретная дата конца интервала журнала документов. Если параметр не задан, то установка сделанная в параметрах системы не меняется, а только возвращается текущий вариант."
    },
    },
 {"Folder","AST","Работа с временем","",
    {"Item","AST","ТекущееВремя","CurrentTime",
"ТекущееВремя(<?>,,);",
"CurrentTime(<?>,,);",
"@Синтаксис:
ТекущееВремя(<Час>,<Мин>,<Сек>)
@Назначение:
Возвращает текущее (системное) время в текстовом виде.
@Параметры:
<Час> - имя переменной для получения числа часов текущего времени (необязателен),
<Мин> - имя переменной для получения числа минут текущего времени (необязателен),
<Сек> - имя переменной для получения числа секунд текущего времени (необязателен)"
    },
    },
 {"Folder","AST","Работа с позицией документа","",
    {"Item","AST","СформироватьПозициюДокумента","MakeDocPosition",
"СформироватьПозициюДокумента(<?>,);",
"MakeDocPosition(<?>,);",
"@Синтаксис:
СформироватьПозициюДокумента(<Докум>,<ФлагСмещения>)
@Назначение:
Формирует и возвращает позицию документа согласно переданным параметрам.
@Параметры:
<Докум> - значение документа (или его позиция), позиция которого определяется.
<ФлагСмещения> - необязательный параметр. Число: -1 (минус единица) - предыдущая позиция. 1 - следующая позиция. 0 - текущая позиция. Значение по умолчанию - 0. Использование данного параметра позволяет получить предыдущую или последующую позицию от уже имеющейся позиции."
    },
    {"Item","AST","СформироватьПозициюДокумента","MakeDocPosition",
"СформироватьПозициюДокумента(<?>,,,,);",
"MakeDocPosition(<?>,,,,);",
"@Синтаксис:
СформироватьПозициюДокумента(<Дата>,<Час>,<Мин>,<Сек>,<ФлагКонцаСекунды>)
@Назначение:
Формирует и возвращает позицию документа согласно переданным параметрам.
@Параметры:
<Дата> - дата, на которую формируется позиция документа,
<Час> - час, на который формируется позиция документа,
<Мин> - минута, на которую формируется позиция документа,
<Сек> - секунда, на которую формируется позиция документа.
<ФлагКонцаСекунды> - необязательный параметр. Число: 1 - позиция будет браться от следующей секунды. 0 - позиция от указан-ной секунды. Значение по умолчанию - 0."
    },
    {"Item","AST","РазобратьПозициюДокумента","SplitDocPosition",
"РазобратьПозициюДокумента(<?>,,,,,);",
"SplitDocPosition(<?>,,,,,);",
"@Синтаксис:
РазобратьПозициюДокумента(<Позиция>,<Дата>,<Час>,<Мин>,<Сек>,<Документ>)
@Назначение:
Раскладывает позицию документа на составляющие и возвращает строковое представление позиции документа.
@Параметры:
<Позиция> - строковое значение позиции документа,
<Дата> - Необязательный параметр. Имя переменной, куда система вернет значение даты позиции документа,
<Час> - Необязательный параметр. Имя переменной, куда система вернет числовое значение часа позиции документа,
<Мин> - Необязательный параметр. Имя переменной, куда система вернет числовое значение минуты позиции документа,
<Сек> - Необязательный параметр. Имя переменной, куда система вернет числовое значение секунды позиции документа,
<Документ> - Необязательный параметр. Имя переменной, куда система вернет значение документа данной позиции документа"
    },
    },
 {"Folder","AST","Преобразование типов","",
    {"Item","AST","Дата","Date",
"Дата(<?>);",
"Date(<?>);",
"@Синтаксис:
Дата(<Параметр>)
@Назначение:
Возвращает результат преобразования параметра в дату по правилам преобразования типов.
@Параметры:
<Параметр> - выражение.
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    {"Item","AST","Дата","Date",
"Дата(<?>,,)",
"Date(<?>,,)",
"@Синтаксис:
Дата(<Год>,<Месяц>,<Число>)
@Назначение:
Преобразует переданные в качестве числовых параметров Год, Месяц, Число  
  в значение типа 'Дата'. Год указывается 4-х значным числом (вместе с веком).
Возвращает значение типа 'Дата'.
@Параметры:
<Год> - числовое выражение.
<Месяц> - числовое выражение.
<Число> - числовое выражение."
    },
    {"Item","AST","Строка","String",
"Строка(<?>)",
"String(<?>)",
"@Синтаксис:
Строка(<Параметр>)
@Назначение:
Возвращает результат преобразования параметра в строку по правилам преобразования типов.
@Параметры:
<Параметр> - выражение.
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    {"Item","AST","Число","Number",
"Число(<?>)",
"Number(<?>)",
"@Синтаксис:
Число(<Параметр>)
@Назначение:
Возвращает результат преобразования параметра в число по правилам преобразования типов.
@Параметры:
<Параметр> - выражение.
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    },
 {"Folder","AST","Форматирование","",
    {"Item","AST","Пропись","Spelling",
"Пропись(<?>);",
"Spelling(<?>);",
"@Синтаксис:
Пропись(<Параметр>)
@Назначение:
Задать образец вывода чисел прописью.
@Параметры:
<Параметр> - строка, содержащая имя файла с прописью (если в параметре передано '''' (пустая строка), то устанавливается пропись по умолчанию) или объект типа ''СписокЗначений'', в котором лежат строки, структура которых совпадает со структурой файла прописей - там тоже двухуровневая структура, порядок строк тоже такой же.
Подробнее см. в документации, глава ''Системные процедуры и функции''"
    },
    {"Item","AST","Формат","Format",
"Формат(<?>,)",
"Format(<?>,)",
"@Синтаксис:
Формат(<Параметр>,<Форматная_строка>)
@Назначение:
Возвращает строку с результатом форматирования выражения по заданной форматной строке.
@Параметры:
<Параметр> - форматируемое выражение,
<Форматная_строка> - форматная строка.
Форматная строка имеет вид:
для чисел - 'Nm.n<разделитель дробной><разделитель триад>' (в русском регистре вместо N - Ч);
для денежных величин - 'NSMH' (в русском регистре - 'ЧПДС');
для строк - 'Sn' (в русском регистре - 'Сn');
для дат - 'DПодстрокаФормата' (в русском регистре вместо D - Д), где
ПодстрокаФормата может быть вида:
DDMMYY (ДДММГГ), дата в виде - ДД.ММ.ГГ;
DDMMYYYY (ДДММГГГГ), дата в виде - ДД.ММ.ГГГГ;
DDMMMMYYYY (ДДММММГГГГ), дата в виде - ДД месяц прописью ГГГГ;
(0)DDMMMMYYYY ((0)ДДММММГГГГ) этот формат представляет собой вариант предыдущего формата с тем отличием, что число месяца всегда выводится двумя цифрами, т.е. для чисел меньших 10 спереди будет добавлен 0. Например: Формат('01.01.1999', ''Д (0)ДДММММГГГГ'') = 01 Января 1999 г.
MMMMYYYY (ММММГГГГ), дата в виде - месяц прописью ГГГГ;
MMMMYY (ММММГГ), дата в виде - месяц прописью ГГ;
QQQQYYYY (ККККГГГГ), дата в виде - N квартал ГГГГ;
QQQQYY (ККККГГ), дата в виде - N квартал ГГ;
YYYYMMDD (ГГГГММДД), дата в виде ГГГГММДД, то есть дата '10.11.1998' будет представлена как строка ''19981110'';
WWWW (НННН), выводит наименование дня недели, соответсвующее указанной дате. Наименования дней недели берутся из файла прописи.
@Замечание:
Для чисел: наличие ''0'' перед длиной поля подавляет отображение нулевых значений (выводится пустая строка). Пример: ''Ч015.2'';
Символ ''-'' перед длиной поля означает, что нулевые значения при выводе будут отображаться прочерком. Пример: ''Ч-17.2''.;
Если форматная строка заканчивается символами >X, происходит сдвиг отображаемых разрядов на X позиций.
Если в форматной строке указано ''(0)'', то данная последовательность символов  должна быть первой в формате и предшествовать всем прочим спецификациям. При задании такой спецификации все позиции в поле вывода числа, соответствующие незадействованным старшим разрядам, будут заполнены символами ''0''. Например: Формат(123.15, ''Ч (0)10.2'') = 0000123.15;
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    {"Item","AST","Шаблон","Template",
"Шаблон(<?>)",
"Template(<?>)",
"@Синтаксис:
Шаблон(<Строка_шаблон>)
@Назначение:
Возвращает строку, полученную по шаблону заменой встроенных выражений на значения и форматированием.
@Параметры:
<Строка_шаблон> - строка, содержащая шаблон формирования.
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    {"Item","AST","ФиксШаблон","FixTemplate",
"ФиксШаблон(<?>)",
"FixTemplate(<?>)",
"@Синтаксис:
ФиксШаблон(<Строка_шаблон>)
@Назначение:
Возвращает строку, полученную по шаблону заменой встроенных выражений на значения и форматированием, с сохранением длин содержащих их полей.
@Параметры:
<Строка_шаблон> - строка, содержащая шаблон формирования.
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    },
 {"Folder","AST","Диалог ввода","",
    {"Item","AST","ВвестиЗначение","InputValue",
"ВвестиЗначение(<?>,,,,)",
"InputValue(<?>,,,,)",
"@Синтаксис:
ВвестиЗначение(<Значение>,<Подсказка>,<Тип>,<Длина>,<Точность>)
@Назначение:
Вызов диалога для ввода значения заданного типа.
Возвращает: 1 - если в диалоге нажата кнопка 'ОК'; 0 - если нажата кнопка 'Отмена'.
@Параметры:
<Значение> - имя переменной, объявленной в модуле для приема вводимого значения;
<Подсказка> - текст заголовка окна диалога ввода;
<Тип> - строковое выражение - название типа данных, которое требутся ввести.
<Длина> - длина вводимого значения (для чисел и строк);
<Точность> - число знаков после десятичной точки (для чисел)"
    },
    {"Item","AST","ВвестиЧисло","InputNumeric",
"ВвестиЧисло(<?>,,,,)",
"InputNumeric(<?>,,,,)",
"@Синтаксис:
ВвестиЧисло(<Число>,<Подсказка>,<Длина>,<Точность>,<Таймаут>)
@Назначение:
Вызов диалога для ввода числа.
Возвращает:
1 - если в диалоге нажата кнопка 'ОК';
0 - если нажата кнопка 'Отмена';
-1  - если закончилось время ожидания ответа.
@Параметры:
<Число> - имя переменной, объявленной в модуле для приема вводимого значения;
<Подсказка> - текст заголовка окна диалога ввода;
<Длина> - длина вводимого числа;
<Точность> - число знаков после десятичной точки;
<Таймаут> - число секунд времени ожидания ответа (если опущен или 0, то без ограничения)."
    },
    {"Item","AST","ВвестиСтроку","InputString",
"ВвестиСтроку(<?>,,)",
"InputString(<?>,,)",
"@Синтаксис:
ВвестиСтроку(<Строка>,<Подсказка>,<ДлинаСтроки>,<Признак>,<Таймаут>)
@Назначение:
Вызов диалога для ввода строки.
Возвращает:
1 - если в диалоге нажата кнопка ОК;
0 - если нажата кнопка Отмена;
-1  - если закончилось время ожидания ответа.
@Параметры:
<Строка> - имя переменной, объявленной в модуле для приема вводимого значения;
<Подсказка> - текст заголовка окна диалога ввода;
<ДлинаСтроки> - длина вводимой строки;
<Признак> - если 0 или опущен - ввод одной строки, если 1 - ввод многострочного текста с разделителями строк;
<Таймаут> - число секунд времени ожидания ответа (если опущен или 0, то без ограничения)."
    },
    {"Item","AST","ВвестиДату","InputDate",
"ВвестиДату(<?>,)",
"InputDate(<?>,)",
"@Синтаксис:
ВвестиДату(<Дата>,<Подсказка>,<Таймаут>)
@Назначение:
Вызов диалога для ввода даты.
Возвращает:
1 - если в диалоге нажата кнопка ОК;
0 - если нажата кнопка Отмена;
-1  - если закончилось время ожидания ответа.
@Параметры:
<Дата> - имя переменной, объявленной в модуле для приема вводимого значения;
<Подсказка> - текст заголовка окна диалога ввода;
<Таймаут> - число секунд времени ожидания ответа (если опущен или 0, то без ограничения)."
    },
    {"Item","AST","ВвестиПериод","InputDate",
"ВвестиПериод(<?>,,)",
"InputPeriod(<?>,,)",
"@Синтаксис:
ВвестиПериод(<НачалоПериода>,<КонецПериода>,<Подсказка>)
@Назначение:
Вызов диалога специального вида, при помощи которого пользователь может выбрать период. Выбранный пользователем период записывается в переменные, передаваемые как параметры при вызове метода.
Возвращает:
1 - если в диалоге нажата кнопка ОК;
0 - если нажата кнопка Отмена, клавиша ''Esc'' или закрыто окно диалога;
@Параметры:
<НачалоПериода> - имя переменной, объявленной в модуле для приема вводимого значения даты начала периода;
<КонецПериода> - имя переменной, объявленной в модуле для приема вводимого значения даты конца периода;
<Подсказка> - текст заголовка окна диалога ввода;"
    },
    {"Item","AST","ВвестиПеречисление","InputEnum",
"ВвестиПеречисление(<?>,)",
"InputEnum(<?>,)",
"@Синтаксис:
ВвестиПеречисление(<Значение>,<Подсказка>,<Таймаут>)
@Назначение:
Вызов диалога для ввода перечисления.
Возвращает:
1 - если в диалоге нажата кнопка ОК;
0 - если нажата кнопка Отмена;
-1  - если закончилось время ожидания ответа.
@Параметры:
<Значение> - имя переменной, объявленной в модуле для приема вводимого значения;
На входе переменная должна содержать значение типа 'Перечисление' или строку с идентификатором требуемого вида перечисления.
<Подсказка> - текст заголовка окна диалога ввода;
<Таймаут> - число секунд времени ожидания ответа (если опущен или 0, то без ограничения).
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    },
 {"Folder","AST","Общего назначения","",
    {"Item","AST","Вопрос","DoQueryBox",
"Вопрос(<?>,)",
"DoQueryBox(<?>,)",
"@Синтаксис:
Вопрос(<Текст_вопроса>,<Режим>,<Таймаут>)
@Назначение:
Вывести окно вопроса и получить ответ.
Возвращает ответную реакцию в виде числа или строки, в соответствии с заданием параметра <Режим>:
-1 или 'Таймаут' ('Timeout'), если закончилось время ожидания ответа;
1 или 'ОК' ('ОК'), если если нажата кнопка OK;
2 или 'Отмена' ('Cancel'), если нажата кнопка Отмена;
3 или 'Стоп' ('Abort'), если нажата кнопка Стоп;
4 или 'Повтор' ('Retry'), если нажата кнопка Повтор;
5 или 'Пропустить' ('Ignore'), если нажата кнопка Пропустить;
6 или 'Да' ('Yes'), если нажата кнопка Да;
7 или 'Нет' ('No'), если нажата кнопка Нет.
@Параметры:
<Текст_вопроса> - cтрока текста вопроса;
<Режим> - определяет набор кнопок диалога в виде числа или строки (в скобках английское написание):
  0 или 'ОК' ('ОК') - кнопка OK;
  1 или 'ОК+Отмена' ('OK+Cancel') - кнопки OK и Отмена;
  2 или 'Стоп+Повтор+Пропустить' ('Abort+Retry+Ignore') - кнопки Стоп, Повтор, Пропустить;
  3 или 'Да+Нет+Отмена' ('Yes+No+Cancel') - кнопки Да, Нет, Отмена;
  4 или 'Да+Нет' ('Yes+No') - кнопки Да, Нет;
  5 или 'Повтор+Отмена' ('Retry+Cancel') - кнопки Повтор, Отмена;
  (любое другое значение или отсутствие параметра равносильно  0);
<Таймаут> - число секунд времени ожидания ответа (если опущен или 0, то без ограничения).
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    {"Item","AST","Предупреждение","DoMessageBox",
"Предупреждение(<?>);",
"DoMessageBox(<?>);",
"@Синтаксис:
Предупреждение(<Текст_сообщения>,<Таймаут>)
@Назначение:
Вывести окно предупреждения (модальное).
@Параметры:
<Текст_вопроса> - cтрока текста предупреждения;
<Таймаут> - число секунд времени показа окна предупреждения (если опущен или 0, то без ограничения).
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    {"Item","AST","Сообщить","Message",
"Сообщить(<?>,);",
"Message(<?>,);",
"@Синтаксис:
Сообщить(<Текст_сообщения>,<ИмиджМаркера>)
@Назначение:
Вывести строку в окно сообщений. Перед сообщениями можно отображать специальные пиктограммы, которыми можно помечать сообщения различной важности. 
@Параметры:
<Текст_сообщения> - cтрока текста сообщения.
<ИмиджМаркера> - необязательный параметр. Строковое выражение, которое задает тип пиктограммы выводимой перед сообщением. Возможные значения:
 I,
 !,
 !!,
 !!!,
''.'' - обычное сообщение,
 ' ' (символ пробел) - без маркера."
    },
    {"Item","AST","ОчиститьОкноСообщений","ClearMessageWindow",
"ОчиститьОкноСообщений();",
"ClearMessageWindow();",
"@Синтаксис:
ОчиститьОкноСообщений()
@Назначение:
Очистить окно сообщений."
    },
    {"Item","AST","Состояние","Status",
"Состояние(<?>)",
"Status(<?>)",
"@Синтаксис:
Состояние(Текст_сообщения)
@Назначение:
Вывести сообщение в строку состояния.
@Параметры:
<Текст_сообщения> - cтрока текста сообщения."
    },
    {"Item","AST","?","?",
"?(<?>,,)",
"?(<?>,,)",
"@Синтаксис:
?(<Логич_выраж>,<Выраж1>,<Выраж2>)
@Назначение:
Возвращает значение первого выражения, если условие истинно, иначе - значение второго выражения.
результат вычисления условного выражения.
@Параметры:
<Логич_выраж> - логическое выражение,
<Выраж1> - выражение,
<Выраж2> - выражение."
    },
    {"Item","AST","Сигнал","Beep",
"Сигнал();",
"Beep();",
"@Синтаксис:
Сигнал()
@Назначение:
Вывести звуковой сигнал."
    },
    {"Item","AST","Разм","Dim",
"Разм(<?>)",
"Dim(<?>)",
"@Синтаксис:
Разм(<Имя_массива>)
@Назначение:
Возвращает размерность массива.
@Параметры:
<Имя_массива> - идентификатор массива."
    },
    },
 {"Folder","AST","Среда исполнения","",
    {"Item","AST","ЗаголовокСистемы","SystemCaption",
"ЗаголовокСистемы(<?>)",
"SystemCaption(<?>)",
"@Синтаксис:
ЗаголовокСистемы(<Заголовок>)
@Назначение:
Позволяет получить/установить заголовок окна программы. Возвращает строковое значение - заголовок окна программы.
@Параметры:
<Заголовок> - строковое выражение - задаваемый заголовок окна программы."
    },
    {"Item","AST","ИмяКомпьютера","ComputerName",
"ИмяКомпьютера()",
"ComputerName()",
"@Синтаксис:
ИмяКомпьютера()
@Назначение:
Возвращает сетевое имя компьютера, работающего в данный момент с программой."
    },
    {"Item","AST","ИмяПользователя","UserName",
"ИмяПользователя()",
"UserName()",
"@Синтаксис:
ИмяПользователя()
@Назначение:
Возвращает имя пользователя.
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    {"Item","AST","ПолноеИмяПользователя","UserFullName",
"ПолноеИмяПользователя()",
"UserFullName()",
"@Синтаксис:
ПолноеИмяПользователя()
@Назначение:
Возвращает полное имя пользователя.
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    {"Item","AST","НазваниеНабораПрав","RightName",
"НазваниеНабораПрав(<?>)",
"RightName(<?>)",
"@Синтаксис:
НазваниеНабораПрав(<ВыдИспНабПрав>)
@Назначение:
Возвращает название набора прав пользователя.
@Параметры:
<ВыдИспНабПрав> - выдавать используемый набор прав или нет. Необязательный параметр. Число: 0 - выдает установленный пользователю набор прав;  1 - выдает пустую строку, если пользователю набор прав назначен, но установлен режим отключения контроля набора прав. Значение по умолчанию - 0."
    },
    {"Item","AST","ПравоДоступа","AccessRight",
"ПравоДоступа(<?>,)",
"AccessRight(<?>,)",
"@Синтаксис:
ПравоДоступа(<НазваниеПрава>,<Объект>)
@Назначение:
Проверяет для текущего пользователя наличие права доступа для заданного объекта. Возвращает: 1 - если право доступа есть, иначе 0.
@Параметры:
<НазваниеПрава> - строка с названием права доступа, как оно выводится в конфигурации (без пробелов).
<Объект> - строка с наименованием типа и вида объекта (записывается через точку). Для глобальных прав этот  параметр не указывается. Для объектов, у которых нет вида - записывается только тип объекта, например,  ''Операция''"
    },
    {"Item","AST","НазваниеИнтерфейса","UserInterfaceName",
"НазваниеИнтерфейса()",
"UserInterfaceName()",
"@Синтаксис:
НазваниеИнтерфейса()
@Назначение:
Возвращает название интерфейса пользователя.
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    {"Item","AST","КаталогПользователя","UserDir",
"КаталогПользователя()",
"UserDir()",
"@Синтаксис:
КаталогПользователя()
@Назначение:
Возвращает имя каталога пользователя."
    },
    {"Item","AST","КаталогИБ","IBDir",
"КаталогИБ()",
"IBDir()",
"@Синтаксис:
КаталогИБ()
@Назначение:
Возвращает имя каталога базы данных."
    },
    {"Item","AST","КаталогПрограммы","BinDir",
"КаталогПрограммы()",
"BinDir()",
"@Синтаксис:
КаталогПрограммы()
@Назначение:
Возвращает имя каталога с исполняемыми файлами системы 1С:Предприятие.
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    {"Item","AST","КаталогВременныхФайлов","TempFilesDir",
"КаталогВременныхФайлов()",
"TempFilesDir()",
"@Синтаксис:
КаталогВременныхФайлов()
@Назначение:
Возвращает имя каталога временных файлов."
    },
    {"Item","AST","МонопольныйРежим","ExclusiveMode",
"МонопольныйРежим()",
"ExclusiveMode()",
"@Синтаксис:
МонопольныйРежим()
@Назначение:
Возвращает значение режима работы программы: 1 - программа запущена в монопольном режиме; 0 -  программа запущена в сетевом режиме."
    },
    {"Item","AST","ОсновнойЯзык","GeneralLanguage",
"ОсновнойЯзык()",
"GeneralLanguage()",
"@Синтаксис:
ОсновнойЯзык()
@Назначение:
Возвращает: 1, если основной язык конфигурации - русский;  0, если основной язык конфигурации - английский.
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    },
 {"Folder","AST","Работа с транзакциями","",
    {"Item","AST","НачатьТранзакцию","BeginTransaction",
"НачатьТранзакцию();",
"BeginTransaction();",
"@Синтаксис:
НачатьТранзакцию()
@Назначение:
Открыть обработку транзакции."
    },
    {"Item","AST","ЗафиксироватьТранзакцию","CommitTransaсtion",
"ЗафиксироватьТранзакцию();",
"CommitTransaсtion();",
"@Синтаксис:
ЗафиксироватьТранзакцию()
@Назначение:
Завершить успешную транзакцию."
    },
    {"Item","AST","ОтменитьТранзакцию","RollBackTransaction",
"ОтменитьТранзакцию();",
"RollBackTransaction();",
"@Синтаксис:
ОтменитьТранзакцию()
@Назначение:
Завершить транзакцию без записи изменений."
    },
    },
 {"Folder","AST","Обработка значений","",
    {"Item","AST","ЗначениеВСтрокуВнутр","ValueToStringInternal",
"ЗначениеВСтрокуВнутр(<?>);",
"ValueToStringInternal(<?>);",
"@Синтаксис:
ЗначениеВСтрокуВнутр(<Объект>)
@Назначение:
Преобразование значения объекта агрегатного типа в строковое системное представление.
Возвращает: представление значения объекта в строковом системном виде.
@Параметры:
<Объект> - значение объекта агрегатного типа данных которое нужно преобразовать.
Подробнее см. в документации, глава ''Системные процедуры и функции''"
    },
    {"Item","AST","ЗначениеИзСтрокиВнутр","ValueFromStringInternal",
"ЗначениеИзСтрокиВнутр(<?>);",
"ValueFromStringInternal(<?>);",
"@Синтаксис:
ЗначениеИзСтрокиВнутр(<СистСтрока>)
@Назначение:
Преобразование значения объекта агрегатного типа из строкового системного представления во внутреннее.
Возвращает: объект агрегатного типа данных.
@Параметры:
<СистСтрока> - представление объекта агрегатного типа данных в системном строковом виде.
@Замечание:
При использовании метода ЗначениеИзСтрокиВнутр() для значения типа СписокЗначений, являющегося реквизитом формы, его следует передавать в качестве второго параметра. В данном случае метод следует использовать как процедуру.  Пример: ЗначениеИзСтрокиВнутр(ВнутрСтрока,ИдентМойСпис);
Подробнее см. в документации, глава ''Системные процедуры и функции''"
    },
    {"Item","AST","ЗначениеВСтроку","ValueToString",
"ЗначениеВСтроку(<?>);",
"ValueToString(<?>);",
"@Синтаксис:
ЗначениеВСтроку(<Объект>)
@Назначение:
Преобразование значения объекта в строковое системное представление. Возвращает: строковое представление значения объекта.
@Параметры:
<Объект> - значение, которое нужно преобразовать. В качестве параметра для данного метода допускается передавать объекты типа ''СписокЗначений'' и ''ТаблицаЗначений'' .
Подробнее см. в документации, глава ''Системные процедуры и функции''."
    },
    {"Item","AST","ЗначениеИзСтроки","ValueFromString",
"ЗначениеИзСтроки(<?>);",
"ValueFromString(<?>);",
"@Синтаксис:
ЗначениеИзСтроки(<СистСтрока>)
@Назначение:
Преобразование из строкового системного представления во внутреннее значение.
Возвращает: Значение, которое получено из строкового системного представления.
@Параметры:
<СистСтрока> - строковое представление объекта в системном виде.
Подробнее см. в документации, глава ''Системные процедуры и функции''"
    },
    {"Item","AST","ЗначениеВФайл","ValueToFile",
"ЗначениеВФайл(<?>,,);",
"ValueToFile(<?>,,);",
"@Синтаксис:
ЗначениеВФайл(<ИмяФайла>,<Объект>,<Формат>)
@Назначение:
Сохраняет значение объекта в файле.
Возвращает: 1 - функция выполнена успешно; 0 - функция не выполнена.
@Параметры:
<ИмяФайла> - имя файла.
<Объект> - значение, которое следует сохранить в файле.
<Формат> - необязательный параметр. Число: 1 - сохранение во внутреннем формате; иначе во внешнем. Значение по умолчанию: 1.
Подробнее см. в документации, глава ''Системные процедуры и функции''"
    },
    {"Item","AST","ЗначениеИзФайла","ValueFromFile",
"ЗначениеИзФайла(<?>,,);",
"ValueFromFile(<?>,,);",
"@Синтаксис:
ЗначениеИзФайла(<ИмяФайла>,<Объект>,<Формат>)
@Назначение:
Востанавливает и возвращает значение из файла.
@Параметры:
<ИмяФайла> - имя файла.
<Объект> - необязательный параметр. Идентификатор переменной, куда система вернет значение, которое получено из файла.
<Формат> - необязательный параметр. Число: 1 - сохранение во внутреннем формате; иначе - во внешнем. Значение по умолчанию: 1.
Подробнее см. в документации, глава ''Системные процедуры и функции''"
    },
    {"Item","AST","СохранитьЗначение","SaveValue",
"СохранитьЗначение(<?>,);",
"SaveValue(<?>,);",
"@Синтаксис:
СохранитьЗначение(<Идентификатор>,<Значение>)
@Назначение:
Сохранить некоторое значение для пользователя между сеансами.
@Параметры:
<Идентификатор> - строка, содержащая наименование сохраняемого значения; 
<Значение> - выражение любого типа.
Подробнее см. в документации, глава ''Системные процедуры и функции''"
    },
    {"Item","AST","ВосстановитьЗначение","RestoreValue",
"ВосстановитьЗначение(<?>)",
"RestoreValue(<?>)",
"@Синтаксис:
ВосстановитьЗначение(<Идентификатор>)
@Назначение:
Возвращает сохраненное для пользователя значение.
@Параметры:
<Идентификатор> - строка, содержащая наименование сохраненного значения. 
@Замечание:
При использовании метода ВосстановитьЗначение() для значения типа СписокЗначений, являющегося реквизитом формы, его следует передавать в качестве второго параметра. В данном случае метод следует использовать как процедуру.  Пример: ВосстановитьЗначение(''ИдентифМоегоСписка'',МойСписок).
Подробнее см. в документации, глава ''Системные процедуры и функции''"
    },
    },
 {"Folder","T","Оперативный учет","",
    {"Item","T","ПолучитьТА","GetAP",
"ПолучитьТА()",
"GetAP()",
"@Синтаксис:
ПолучитьТА()
@Назначение:
Возвращает:
строку, содержащую дату и время ТА."
    },
    {"Item","T","ПолучитьДатуТА","GetDateOfAP",
"ПолучитьДатуТА()",
"GetDateOfAP()",
"@Синтаксис:
ПолучитьДатуТА()
@Назначение:
Возвращает: дату Точки Актуальности итогов."
    },
    {"Item","T","ПолучитьВремяТА","GetTimeOfAP",
"ПолучитьВремяТА(<?>,,)",
"GetTimeOfAP(<?>,,)",
"@Синтаксис:
ПолучитьВремяТА(<Часы>,<Минуты>,<Секунды>)
@Назначение:
Получить значение времени Точки Актуальности итогов. Записывает значение времени Точки Актуальности итогов в передаваемые при вызове параметры.
Возвращает: Строковое значение времени ТА в виде 'ЧЧ.ММ.СС'.
@Параметры:
<Часы> - идентификатор переменной для значения часов,
<Минуты> - идентификатор переменной для значения минут,
<Секунды> - идентификатор переменной для значения секунд"
    },
    {"Item","T","ПолучитьДокументТА","GetDocOfAP",
"ПолучитьДокументТА()",
"GetDocOfAP()",
"@Синтаксис:
ПолучитьДокументТА()
@Назначение:
Возвращает значение типа документ, который стоит на ТА."
    },
    {"Item","T","ПолучитьПозициюТА","GetAPPosition",
"ПолучитьПозициюТА()",
"GetAPPosition()",
"@Синтаксис:
ПолучитьПозициюТА()
@Назначение:
Возвращает 32-х символьное строковое значение позиции ТА."
    },
    {"Item","T","УстановитьТАна","SetAPToBeg",
"УстановитьТАна(<?>)",
"SetAPToBeg(<?>)",
"@Синтаксис:
УстановитьТАна(<ПоложениеТА>)
@Назначение:
Изменить положение Точки Актуальности итогов.
@Параметры:
<ПоложениеТА> - выражение типа дата, документ или позиция документа, на начало которого устанавливается ТА."
    },
    {"Item","T","УстановитьТАпо","SetAPToEnd",
"УстановитьТАпо(<?>)",
"SetAPToEnd(<?>)",
"@Синтаксис:
УстановитьТАпо(<ПоложениеТА>)
@Назначение:
Изменить положение Точки Актуальности итогов.
@Параметры:
<ПоложениеТА> - выражение типа дата, документ или позиция документа, на конец которого устанавливается ТА."
    },
    {"Item","T","РассчитатьРегистрыНа","CalcRegsOnBeg",
"РассчитатьРегистрыНа(<?>,);",
"CalcRegsOnBeg(<?>,);",
"@Синтаксис:
РассчитатьРегистрыНа(<ГраницаРасчета>,<ГрафаОтбора>)
@Назначение:
Рассчитать все регистры с установленным флагом временного расчета  на начало события.
@Параметры: 
<ГраницаРасчета> - значение типа дата, документ или позиция.
<ГрафаОтбора> - необязательный. Строковое выражение. Установка использования графы отбора. Если не указан, то автоматический выбор графы отбора. Идентификатор графы отбора - использование определенной графы отбора.
''*'' - автоматический выбор графы отбора. Пустая строка - не использовать графу отбора."
    },
    {"Item","T","РассчитатьРегистрыПо","CalcRegsOnEnd",
"РассчитатьРегистрыПо(<?>,);",
"CalcRegsOnEnd(<?>,);",
"@Синтаксис:
РассчитатьРегистрыПо(<ГраницаРасчета>,<ГрафаОтбора>)
@Назначение:
Рассчитать все регистры с установленным флагом временного расчета на конец события.
@Параметры: 
<ГраницаРасчета> - значение типа дата, документ или позиция.
<ГрафаОтбора> - необязательный. Строковое выражение. Установка использования графы отбора. Если не указан, то автоматический выбор графы отбора. Идентификатор графы отбора - использование определенной графы отбора.
''*'' - автоматический выбор графы отбора. Пустая строка - не использовать графу отбора."
    },
    },
 {"Folder","A","Бухгалтерский учет","",
    {"Item","A","ВыбранныйПланСчетов","DefaultChartOfAccounts",
"ВыбранныйПланСчетов()",
"DefaultChartOfAccounts()",
"@Синтаксис:
ВыбранныйПланСчетов()
@Назначение: 
позволяет определить текущее значение параметра ''Основной план счетов'',  выбранное пользователем при работе с системой.
Возвращает значение типа ''ПланСчетов''."
    },
    {"Item","A","ОсновнойПланСчетов","MainChartOfAccounts",
"ОсновнойПланСчетов()",
"MainChartOfAccounts()",
"@Синтаксис:
ОсновнойПланСчетов()
@Назначение: 
Выдает план счетов, установленный в конфигурации в качестве основного. Возвращает значение типа ''ПланСчетов''."
    },
    {"Item","A","СчетПоКоду","AccountByCode",
"СчетПоКоду(<?>,)",
"AccountByCode(<?>,)",
"@Синтаксис:
СчетПоКоду(<КодСчета>,<ПланСчетов>)
@Назначение: 
Поиск бухгалтерского счета по коду. 
Возвращает значение типа ''Счет''.
@Параметры:
<КодСчета> - строковое выражение, содержащее код счета.
<ПланСчетов> - значение типа ''План Счетов'' - план счетов, в котором выполняется поиск. Если параметр не указан, поиск выполняется в основном плане счетов, заданном в метаданных."
    },
    {"Item","A","НачалоПериодаБИ","BeginOfPeriodBT",
"НачалоПериодаБИ()",
"BeginOfPeriodBT()",
"@Синтаксис:
НачалоПериодаБИ()
@Назначение: 
Возвращает дату начала периода бухгалтерских итогов, заданную в режиме ''Настройка параметров системы''."
    },
    {"Item","A","КонецПериодаБИ","EndOfPeriodBT",
"КонецПериодаБИ()",
"EndOfPeriodBT()",
"@Синтаксис:
КонецПериодаБИ()
@Назначение: 
Возвращает дату конца периода бухгалтерских итогов, заданную в режиме ''Настройка параметров системы''."
    },
    {"Item","A","КонецРассчитанногоПериодаБИ","EndOfCalculatedPeriodBT",
"КонецРассчитанногоПериодаБИ()",
"EndOfCalculatedPeriodBT()",
"@Синтаксис:
КонецРассчитанногоПериодаБИ()
@Назначение: 
Возвращает последнюю дату рассчитанных бухгалтерских итогов, заданную в режиме ''Управление бухгалтерских итогов'' при работе в режиме ''1С:Предприятие''.	Данная функция позволяет определить, до какой даты может быть выполнено обращение к бухгалтерским итогам."
    },
    {"Item","A","МаксимальноеКоличествоСубконто","MaxSubcontoCount",
"МаксимальноеКоличествоСубконто()",
"MaxSubcontoCount()",
"@Синтаксис:
МаксимальноеКоличествоСубконто()
@Назначение: 
Возвращает значение параметра ''Максимальное количество субконто'', указанное в метаданных в настройке планов счетов. Фактически она позволяет определить, сколько видов субконто может быть задано для счета."
    },
    {"Item","A","НазначитьСчет","SetAccount",
"НазначитьСчет(<?>,,)",
"SetAccount(<?>,,)",
"@Синтаксис:
НазначитьСчет(<ВидСубконто>,<Счет>,<НомерСубконто>)
@Назначение:
данная процедура используется для организации выбора значения типа ''ВидCубконто'' в диалоге формы применительно к конкретному счету, то есть организовать выбор видов субконто конкретного счета. 
@Параметры:
<ВидСубконто> - значение типа ''ВидСубконто'', переданное по ссылке - обычно реквизит диалога формы.
<Счет> - значение типа ''Счет''.
<НомерСубконто> - необязательный параметр. Число - номер субконто для данного счета."
    },
    {"Item","A","ВвестиПланСчетов","InputChartOfAccounts",
"ВвестиПланСчетов(<?>,,)",
"InputChartOfAccounts (<?>,,)",
"@Синтаксис:
ВвестиПланСчетов(<ПланСчетов>,<Подсказка>,<Таймаут>) 
@Назначение: 
Выбрать план счетов из существующих планов счетов в диалоге.
Возвращает:
1 - если в диалоге нажата кнопка ОК;
0 - если нажата кнопка Отмена;
-1  - если закончилось время ожидания ответа.
@Параметры:
<ПланСчетов> - Значение типа ''План счетов'', переданное по ссылке (идентификатор переменной) - в данное значение будет осуществлен возврат выбранного значения.
<Подсказка> - текст заголовка окна диалога ввода;
<Таймаут> - число секунд времени ожидания ответа (если опущен или 0, то без ограничения)."
    },
    {"Item","A","ВвестиВидСубконто","InputSubcontoKind",
"ВвестиВидСубконто(<?>,,)",
"InputSubcontoKind(<?>,,)",
"@Синтаксис:
ВвестиВидСубконто(<ВидСубконто>,<Подсказка>,<Счет>,<Таймаут>) 
@Назначение: 
Выбрать вид субконто из существующих видов субконто в диалоге. 
Возвращает:
1 - если в диалоге нажата кнопка ОК;
0 - если нажата кнопка Отмена;
-1  - если закончилось время ожидания ответа.
@Параметры:
<ВидСубконто> - значение типа ''План счетов'', переданное по ссылке (идентификатор переменной) - в данное значение будет осуществлен возврат выбранного значения.
<Подсказка> - текст заголовка окна диалога ввода;
<Счет> - значение типа ''Счет'' . Если данное значение указано, то выбор будет ограничен видами субконто, заданными для указанного счета. Необязательный параметр.
<Таймаут> - число секунд времени ожидания ответа (если опущен или 0, то без ограничения)."
    },
    },
 {"Folder","S","Расчет","",
    {"Item","S","ОсновнойЖурналРасчетов","BasicCalcJournal",
"ОсновнойЖурналРасчетов(<?>)",
"BasicCalcJournal(<?>)",
"@Синтаксис:
ОсновнойЖурналРасчетов(<ЖР>)
@Назначение: 
Устанавливает основной журнал расчетов . По умолчанию основной ЖР - первый в списке ЖР. Возвращает значение текущего журнала расчетов.
@Параметры: 
<ЖР> -строковое значение - идентификатор ЖР как он задан при конфигурировании."
    },
    },
 {"Folder","AST","Специальные","",
    {"Item","AST","СоздатьОбъект","CreateObject",
"СоздатьОбъект(<?>);",
"CreateObject(<?>);",
"@Синтаксис:
СоздатьОбъект(<ИмяАгрегатногоТипа>)
@Назначение:
Создает объект агрегатного типа данных.
Возвращает: 
ссылку на созданный объект агрегатного типа данных.
@Параметры:
<ИмяАгрегатногоТипа> - строковое выражение, содержащее имя агрегатного типа данных объявленного в конфигураторе
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    {"Item","AST","СтатусВозврата","ReturnStatus",
"СтатусВозврата(<?>)",
"ReturnStatus(<?>)",
"@Синтаксис:
СтатусВозврата(<Статус>)
@Назначение:
Определение или установка статуса возврата предопределенной процедуры.
Возвращает:
1, если статус возврата - Выполнить Действие;
0, если статус возврата - Отменить Действие.
Параметры:
<Статус> - необязательный параметр:
если опущен, то установка статуса возврата предопределенной процедуры не меняется;
если задано 1, то устанавливается статус возврата - Выполнить Действие;
если задано 0, то устанавливается статус возврата - Отменить Действие. 
@Замечание:
Функция/процедура СтатусВозврата применяется в теле предопределенных процедур.
Начальное значение статуса возврата предопределенной процедуры равно 1 - Выполнить Действие, устанавливается системой при вызове предопределенной процедуры.
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    {"Item","AST","ТипЗначения","ValueType",
"ТипЗначения(<?>)",
"ValueType(<?>)",
"@Синтаксис:
ТипЗначения(<Значение>)
@Назначение:
Возвращает:
тип данных значения в виде числа.
@Параметры:
<Значение> - выражение, тип данных значения которого надо определить.
Возвращаемые значения типов данных:
0 - неопределенный тип данных;
1 - числовой тип данных;
2 - строковый тип данных;
3 - тип данных Дата;
10 - агрегатный тип данных 'Перечисление';
11 - агрегатный тип данных 'Справочник';
12 - агрегатный тип данных 'Документ';
13 - агрегатный тип данных 'Календарь';
14 - агрегатный тип данных 'ВидРасчета';	
100 - внешний объект ('Текст', 'Таблица', 'Запрос', 'ЖурналРасчетов' и т.п.).
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    {"Item","AST","ТипЗначенияСтр","ValueTypeStr",
"ТипЗначенияСтр(<?>)",
"ValueTypeStr(<?>)",
"@Синтаксис:
ТипЗначенияСтр(<Значение>)
@Назначение:
Возвращает строковое обозначение типа данных.
@Параметры:
<Значение> - выражение, тип данных значения которого надо определить.
Возвращаемые значения типов данных:
''Число'' (''Number'') - числовой тип данных;
''Строка'' (''String'') - строковый тип данных;
''Дата'' (''Date'') - тип данных Дата;
''Перечисление'' (''Enum'') - агрегатный тип данных ''Перечисление'';
''Справочник'' (''Reference'') - агрегатный тип данных ''Справочник'';
''Документ'' (''Document'') - агрегатный тип данных ''Документ'';
''Регистр'' (''Register'') - агрегатный тип данных ''Регистр'';
''Календарь'' (''Calendar'') - агрегатный тип данных ''Календарь'';
''ВидРасчета'' (''Calculation'') - агрегатный тип данных ''ВидРасчета'';	
''ЖурналРасчетов'' (''CalcJournal'') - агрегатный тип данных ''ЖурналРасчетов'';
''ПланСчетов'' (''ChartOfAccounts'') - агрегатный тип данных ''ПланСчетов'';
''Счет'' (''Account'') - агрегатный тип данных ''Счет'';
''Операция'' (''Operation'') - агрегатный тип данных ''Операция'';
''КорректныеПроводки'' (''CorrectEntries'') - агрегатный тип данных ''КорректныеПроводки'';
''БухгалтерскиеИтоги'' (''BookkeepingTotals'') - агрегатный тип данных ''БухгалтерскиеИтоги'';
''Таблица'' (''Table'') - агрегатный тип данных ''Таблица'';
''Текст'' (''Text'') - агрегатный тип данных ''Текст'';
''Запрос'' (''Query'') - агрегатный тип данных ''Запрос'';
''СписокЗначений'' (''ValueList'') - агрегатный тип данных ''СписокЗначений'';
''ТаблицаЗначений'' (''ValueTable'') - агрегатный тип данных ''ТаблицаЗначений'';
''Периодический'' (''Periodic'') - агрегатный тип данных ''Периодический'';
''Картинка'' (''Picture'') - агрегатный тип данных ''Картинка'';
''ГрупповойКонтекст'' (''GroupContext'') - контекст программного модуля или Формы;
''OLE'' (''OLE'') - OLE-объект.
''НеизвестныйОбьект'' (''UnknownObject'') - для типов, для которых в системе не предусмотрено специальное строковое обозначение;
'''' (пустая строка)  - неопределенный тип данных.
@Замечание:
Название типа данных передается в русском или английском написании - в зависимости от текущей установки основного языка конфигурации."
    },
    {"Item","AST","ПустоеЗначение","EmptyValue",
"ПустоеЗначение(<?>);",
"EmptyValue(<?>);",
"@Синтаксис:
ПустоеЗначение(<Значение>)
@Назначение:
Функция определяет, является ли пустым переданное в параметре значение. Возвращает число: 1- если значение пустое и 0 - если нет. При этом применяется следующее правило:
- значение неопределенного типа - всегда пустое;
- значение типа ''строка'' проверяется как в методе ПустаяСтрока;
- значение типа ''число'' проверяется на равенство нулю;
- значение типа ''дата'' проверяется на пустое значение;
- значения следующих типов: ''справочник'', ''перечисление'', ''документ'', ''счет'', ''вид субконто'', ''план счетов'', ''календарь'' проверяются как в методах Выбран  для соответствующего типа объекта.;
- значение типа ''СписокЗначений'' считается пустым, если в нем нет значений;
- значение типа ''ТаблицаЗначений'' считается пустым, если нет ни одной строки таблицы.
@Параметры:
<Значение> - выражение любого типа данных, значение которого проверяется."
    },
    {"Item","AST","ПолучитьПустоеЗначение","GetEmptyValue",
"ПолучитьПустоеЗначение(<?>);",
"GetEmptyValue(<?>);",
"@Синтаксис:
ПолучитьПустоеЗначение(<Тип>)
@Назначение:
Возвращает пустое значение заданного типа.
@Параметры:
<Тип> - необязательный параметр. Строка или вид субконто или объект метаданных, задающий тип данных. Если параметр не задан, то функция возвращает пустое значение неопределенного типа."
    },
    {"Item","AST","НазначитьВид","SetKind",
"НазначитьВид(<?>,);",
"SetKind(<?>,);",
"@Синтаксис:
НазначитьВид(<Значение>,<Вид>)
@Назначение:
Процедура НазначитьВид используется для установки значениям типа ''Документ неопределенного вида'', ''Справочник неопределенного вида'', ''Счет неопределенного вида'' конкретного вида. При этом, если существующее значение не соответсвует вновь установленному виду - то оно очищается.
Данная процедура может использоваться в сочетании с методом элемента формы НеИзменятьВид. Это возволяет регулировать программно собственно вид, а само значение предоставить выбирать пользователю интерактивно.
@Параметры:
<Значение> - Значение типа документ/справочник/счет неопределенного вида - обычно реквизит документа, справочника или диалога формы.
<Вид> - строковое выражение - вид значения. Может быть задан строкой, содержащей идентификатор конкретного справочника, документа, плана счетов.
Вид субконто - вид значения может быть задан видом субконто, который имеет тип соответственно конкретного справочника, документа, счета."
    },
    {"Item","AST","ПрефиксАвтоНумерации","AutoNumPrefix",
"ПрефиксАвтоНумерации(<?>,);",
"AutoNumPrefix(<?>,);",
"@Синтаксис:
ПрефиксАвтоНумерации(<ИмяВида>,<Префикс>)
@Назначение:
Установить префикс для автоматического создания новых номеров.
Параметры:
<ИмяВида> - строковое выражение с полным названием справочника или документа конфигурации. Для установки префикса сразу всем документам или справочникам используется символ ''*'' вместо идентификатора вида документа/справочника;
<Префикс> - строковое выражение задающее префикс номеров документов или кодов элементов справочника."
    },
    {"Item","AST","ПолучитьЗначенияОтбора","GetSelectionValues",
"ПолучитьЗначенияОтбора(<?>,,,)",
"GetSelectionValues(<?>,,,)",
"@Синтаксис:
ПолучитьЗначенияОтбора(<ИмяОтбора>,<СписокЗначений>,<ДатаНач>,<ДатаКон>)
@Назначение:
Выбирать все существующие значения отбора.
Возвращает: 1, если операция выполнена успешно; 0, если операция не выполнена.
@Параметры:
<ИмяОтбора> - строковое выражение с полным названием общего реквизита документа или графы отбора из конфигурации;
<СписокЗначений> - имя переменной, в которой возвращается объект типа ''СписокЗначений'';
<ДатаНач> - дата начала интервала, в котором проводится отбор (если не задан, то отбор производится по всем данным); 
<ДатаКон> - дата конца интервала, в котором проводится отбор (если не задан или равен 0, то отбор производится до ТА).
Подробнее см. в документации, глава 'Системные процедуры и функции'"
    },
    {"Item","AST","ЗаписьЖурналаРегистрации","LogMessageWrite",
"ЗаписьЖурналаРегистрации(<?>,,,,);",
"LogMessageWrite(<?>,,,,);",
"@Синтаксис:
ЗаписьЖурналаРегистрации(<Коммент>,<ТипСобытия>,<Событие>,<Объект>,<Категория>)
@Назначение:
Выводит строку текста в системный журнал регистрации.
@Параметры:
<Коммент> - строковое выражение, комментарий к событию. Если этот параметр - единственный переданный при вызове метода, то тогда в журнал записывается стандартное дополнительное событие с указанным комментарием.
<ТипСобытия> - необязательный параметр. Строковое выражение -  тип события. По умолчанию или при пустой строке ''Дополнительные события''.
<Событие> - необязательный параметр. Строковое выражение -  событие. По умолчанию ''Дополнительное событие''.
<Объект> - необязательный параметр. Объект события, по умолчанию отсутствует. Для переданных в функцию объектов типа Документ/ Справочник/ Счет представление объекта будет записано автоматически (это не зависит от типа события и самого события).
<Категория> - необязательный параметр. Число - категория события: 1 - администрирование; 2 - изменение данных; 3 - информация; 4 - предупреждение; 5 - ошибка. Значение по умолчанию 3.
@Замечание:
Системой зарезервирован большой перечень типов событий/события. Незарезервированные имена позволяют пользователю фактически указывать свои собственные типы событий и события. Подробнее см. в документации гл. ''Системные процедуры и функции''."
    },
    {"Item","AST","КомандаСистемы","System",
"КомандаСистемы(<?>);",
"System(<?>);",
"@Синтаксис:
КомандаСистемы(<СтрокаКоманды>)
@Назначение:
Вызывает на исполнение команду DOS.
@Параметры:
<СтрокаКоманды> - строка, содержащая команду. 
Последовательность поиска программы (если не задан путь):
  текущий системный каталог;
  каталог Windows;
  системный каталог Windows;
  все каталоги, указанные в переменной PATH."
    },
    {"Item","AST","ЗапуститьПриложение","RunApp",
"ЗапуститьПриложение(<?>);",
"RunApp(<?>);",
"@Синтаксис:
ЗапуститьПриложение(<СтрокаКоманды>)
@Назначение:
Выполняет запуск любого приложения. В отличие от функции 'КомандаСистемы' запуск приложения выполняется непосредственно, минуя командный интерпретатор. Процедура, кроме того, может открыть файл с помощью ассоциированного для данного вида файлов приложения. (При условии, что таковое установлено на данном компьютере).
@Параметры:
<СтрокаКоманды> - командная строка запуска приложения или имя файла, чтобы открыть его с помощью ассоциированного для данного вида файлов приложения.
Последовательность поиска программы (если не задан путь):
  текущий системный каталог;
  каталог Windows;
  системный каталог Windows;
  все каталоги, указанные в переменной PATH."
    },
    {"Item","AST","ЗавершитьРаботуСистемы","ExitSystem",
"ЗавершитьРаботуСистемы(<?>);",
"ExitSystem(<?>);",
"@Синтаксис:
ЗавершитьРаботуСистемы(<ФлагСохранения>)
@Назначение:
вызывает завершение рабоы системы.
@Параметры:
<ФлагСохранения> - необязательный параметр. Флаг запроса сохранения открытых объектов. Если равен 0, то не запрашивается сохранение незаписанных документов, элементов справочников и т.п. Если 1, то сохранение запрашивается. Значение по умолчанию  1."
    },
    {"Item","AST","НайтиПомеченныеНаУдаление","FindMarkedForDelete",
"НайтиПомеченныеНаУдаление(<?>);",
"FindMarkedForDelete(<?>);",
"@Синтаксис:
НайтиПомеченныеНаУдаление(<Объекты>)
@Назначение:
Находит все помеченные на удаление объекты.
@Параметры:
<Объекты> - идентификатор объекта типа ''СписокЗначений'', в который данная процедура помещает найденные объекты."
    },
    {"Item","AST","НайтиСсылки","FindReferences",
"НайтиСсылки(<?>,);",
"FindReferences(<?>,);",
"@Синтаксис:
НайтиСсылки(<Объекты>,<Ссылки>)
@Назначение:
Находит ссылки на объекты, переданные в списке значений.
@Параметры:
<Объекты> - конкретное значение искомого объекта или значение типа ''СписокЗначений'', в котором данной процедуре передаются объекты, по которым надо найти ссылки.
<Ссылки> - идентификатор объекта типа ''ТаблицаЗначений'', в который данная процедура помещает найденные ссылки на объекты. Таблица значений состоит из 3 колонок: 1. объект на который ссылаются; 2. объект, который содержит ссылку; 3. комментарий к ссылке."
    },
    {"Item","AST","УдалитьОбъекты","DeleteObjects",
"УдалитьОбъекты(<?>,,);",
"DeleteObjects(<?>,,);",
"@Синтаксис:
УдалитьОбъекты(<Объекты>,<Проверять>,<Ссылки>)
@Назначение:
Удаляет объекты, переданные в списке значений.
@Параметры:
<Объекты> - конкретное значение объекта или значение типа ''СписокЗначений'', в котором данной процедуре передаются объекты, которые надо удалить.
<Проверять> - необязательный параметр. Число: 1 - перед удалением проверяется, нет ли ссылок на удаляемый объект. Если есть, то объект не удаляется, а ссылки помещаются в таблицу значений <Ссылки>. Любое другое число - проверку не выполнять. Значение по умолчанию: 0.
<Ссылки> - Необязательный параметр. Идентификатор объекта типа ''ТаблицаЗначений'', в который данная процедура помещает найденные ссылки на объекты. Таблица значений состоит из 3 колонок: 1. объект на который ссылаются; 2. объект, который содержит ссылку; 3. комментарий к ссылке."
    },
    {"Item","AST","ОбработкаОжидания","IdleProcessing",
"ОбработкаОжидания(<?>,)",
"IdleProcessing(<?>,)",
"@Синтаксис:
ОбработкаОжидания(<ИмяПроцедуры>,<ИнтервалВызова>)
@Назначение:
Инициирует периодический вызов процедуры глобального модуля с заданным интервалом времени.
Возвращает имя процедуры глобального модуля, которая назначена для периодического запуска (на момент до исполнения процедуры).
@Параметры:
<ИмяПроцедуры> - необязательный параметр. Строковое выражение - имя процедуры глобального модуля, которая будет вызываться периодически с временным интервалом <ИнтервалВызова>. Тело процедуры <ИмяПроцедуры> должно быть написано разработчиком конфигурации в глобальном программном модуле. Если в качестве параметра передается 'пустая строка', то ранее запущенный процесс прекращается. 
<ИнтервалВызова> - необязательный параметр. Числовое выражение - интервал времени в секундах, с которым периодически будет вызываться процедура глобального модуля <ИмяПроцедуры>. Если в качестве параметра передается 0 (ноль), то ранее запущенный процесс прекращается."
    },
 {"Folder","AST","ОткрытьФорму","",
    {"Item","AST","ОткрытьФорму существующего документа","OpenForm document",
"ОткрытьФорму(<?>,,)",
"OpenForm(<?>,,)",
"@Синтаксис:
ОткрытьФорму(<Документ>,<КонтекстФормы>,<РежимПросмотра>)
@Назначение:
Открывает визуальную форму существующего документа или элемента/группы справочника.
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<Документ> - выражение со значением типа 'документ';
<КонтекстФормы> - имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст открытой формы (необязателен);
<РежимПросмотра> - необязательный параметр. Числовое выражение: 1 - открыть форму в режиме только просмотра; 0 - открыть форму в режиме редактирования; -1 (минус единица) - в этом случае используется вариант, предусмотренный текущим значением параметра ''Режим открытия объектов'', установленным пользователем интерактивно.
@Замечание:
Пока форма открыта, тип значения параметра <КонтекстФормы> равен 100, когда закрыта - 0."
    },
    {"Item","AST","ОткрытьФорму нового документа","OpenForm new document",
"ОткрытьФорму(<?>,,)",
"OpenForm(<?>,,)",
"@Синтаксис:
ОткрытьФорму(<ОписательОбъекта>,<КонтекстФормы>,<ДокументОснование>)
@Назначение:
Открывает визуальную форму ввода нового документа (в т.ч. в режиме ввода на основании).
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<ОписательОбъекта> - строка-описатель документа вида:
  'Документ.ХХХХХ', где ХХХХХХ - вид документа;
<КонтекстФормы> - имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст открытой формы (необязателен);
<ДокументОснование> - документ-основание для открытия формы ввода нового документа в режиме ввода на основании (необязателен).
@Замечание:
Пока форма открыта, тип значения параметра <КонтекстФормы> равен 100, когда закрыта - 0."
    },
    {"Item","AST","ОткрытьФорму сущ. элемента справочника","OpenForm reference unit",
"ОткрытьФорму(<?>,,)",
"OpenForm(<?>,,)",
"@Синтаксис:
ОткрытьФорму(<Элемент>,<КонтекстФормы>,<РежимПросмотра>)
@Назначение:
Открывает визуальную форму сущ. элемента/группы справочника.
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<Элемент> - выражение со значением типа 'Справочник';
<КонтекстФормы> - имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст открытой формы (необязателен);
<РежимПросмотра> - необязательный параметр. Числовое выражение: 1 - открыть форму в режиме только просмотра; 0 - открыть форму в режиме редактирования; -1 (минус единица) - в этом случае используется вариант, предусмотренный текущим значением параметра ''Режим открытия объектов'', установленным пользователем интерактивно.
@Замечание:
Пока форма открыта, тип значения параметра <КонтекстФормы> равен 100, когда закрыта - 0."
    },
    {"Item","AST","ОткрытьФорму нового элемента справочника","OpenForm new reference unit",
"ОткрытьФорму(<?>,,,,)",
"OpenForm(<?>,,,,)",
"@Синтаксис:
ОткрытьФорму(<ОписательОбъекта>,<КонтекстФормы>,<ГруппаРодитель>,<ФлагГруппы>,<ЭлементВладелец>)
@Назначение:
Открывает визуальную форму ввода нового элемента справочника
Возвращает: 
1 - если действие выполнено, 0 - иначе.
@Параметры:
<ОписательОбъекта> - Строковое выражение. ''Элемент.ХХХХХ'', где ХХХХХ - вид справочника; 
<КонтекстФормы> - имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст открытой формы (необязателен);
<ГруппаРодитель> - необязательный параметр. Выражение типа ''справочник'', задающее родительскую группу для открытия формы ввода нового элемента (группы) справочника.
<ФлагГруппы> - необязательный параметр. Числовое выражение, задающее форму ввода нового элемента (группы) справочника: 1 - ввод новой группы, 0 - ввод нового элемента. По умолчанию - 0.
<ЭлементВладелец> - необязательный параметр. Выражение типа ''справочник'', задающее элемент справочника-владельца для открытия формы ввода нового элемента (группы) подчиненного справочника.
@Замечание:
Пока форма открыта, тип значения параметра <КонтекстФормы> равен 100, когда закрыта - 0."
    },
    {"Item","AST","ОткрытьФорму списка справочника","OpenForm  reference",
"ОткрытьФорму(<?>,)",
"OpenForm(<?>,)",
"@Синтаксис:
ОткрытьФорму(<ОписательОбъекта>,<КонтекстФормы>)
@Назначение:
Открывает визуальную форму списка справочника.
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<ОписательОбъекта> - строковое выражение. ''Справочник.ХХХХХ.YYYYY'', где ХХХХХ - вид справочника, YYYYY - имя выбранной формы списка справочника;
<КонтекстФормы> - имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст открытой формы (необязателен).
@Замечание:
Пока форма открыта, тип значения параметра <КонтекстФормы> равен 100, когда закрыта - 0."
    },
    {"Item","AST","ОткрытьФорму журнала документов","OpenForm documents journal",
"ОткрытьФорму(<?>,)",
"OpenForm(<?>,)",
"@Синтаксис:
ОткрытьФорму(<ОписательОбъекта>,<КонтекстФормы>)
@Назначение:
Открывает визуальную форму журнала документов.
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<ОписательОбъекта> - строковое выражение. ''Журнал.ХХХХХ.YYYYY'', где ХХХХХ - идентификатор журнала документов, YYYYY - идентификатор формы журнала документов. Кроме того, в качестве идентификатора журнала можно указывать идентификатор конкретного вида документа, тогда откроется журнал просмотра документов именно указанного вида;
<КонтекстФормы> - имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст открытой формы (необязателен).
@Замечание:
Пока форма открыта, тип значения параметра <КонтекстФормы> равен 100, когда закрыта - 0."
    },
    {"Item","AST","ОткрытьФорму журнала подчиненных документов","OpenForm sub-documents journal",
"ОткрытьФорму(<?>,,)",
"OpenForm(<?>,,)",
"@Синтаксис:
ОткрытьФорму(<ОписательОбъекта>,<КонтекстФормы>,<Документ>)
@Назначение:
Открывает визуальную форму журнала подчиненных документов.
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<ОписательОбъекта> - строковое выражение ''Журнал.Подчиненные''
<КонтекстФормы> - имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст открытой формы (необязателен);
<Документ> - значение типа ''документ'', задающее документ - для которого будут выводиться подчиненные документы.
@Замечание:
Пока форма открыта, тип значения параметра <КонтекстФормы> равен 100, когда закрыта - 0."
    },
    {"Item","AST","ОткрытьФорму отчета","OpenForm  report",
"ОткрытьФорму(<?>,)",
"OpenForm(<?>,)",
"@Синтаксис:
ОткрытьФорму(<ОписательОбъекта>,<КонтекстФормы>)
@Назначение:
Открывает визуальную форму отчета.
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<ОписательОбъекта> - строковое выражение. ''Отчет.ХХХХХ'' , где ХХХХХ - вид отчета;
<КонтекстФормы> - имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст открытой формы (необязателен).
@Замечание:
Пока форма открыта, тип значения параметра <КонтекстФормы> равен 100, когда закрыта - 0."
    },
    {"Item","AST","ОткрытьФорму обработки","OpenForm  processing",
"ОткрытьФорму(<?>,)",
"OpenForm(<?>,)",
"@Синтаксис:
ОткрытьФорму(<ОписательОбъекта>,<КонтекстФормы>)
@Назначение:
Открывает визуальную форму обработки.
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<ОписательОбъекта> - строковое выражение. ''Обработка.ХХХХХ'' , где ХХХХХ - вид обработки;
<КонтекстФормы> - имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст открытой формы (необязателен).
@Замечание:
Пока форма открыта, тип значения параметра <КонтекстФормы> равен 100, когда закрыта - 0."
    },
    {"Item","AST","ОткрытьФорму внешнего отчета","OpenForm  ext. report",
"ОткрытьФорму(<?>,,)",
"OpenForm(<?>,,)",
"@Синтаксис:
ОткрытьФорму(<ОписательОбъекта>,<КонтекстФормы>,<ИмяФайла>)
@Назначение:
Открывает визуальную форму внешнего отчета.
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<ОписательОбъекта> - строковое выражение. ''Отчет'';
<КонтекстФормы> - имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст открытой формы (необязателен).
<ИмяФайла> - cтроковое выражение - полное имя файла внешнего отчета.
@Замечание:
Пока форма открыта, тип значения параметра <КонтекстФормы> равен 100, когда закрыта - 0."
    },
    {"Item","S","ОткрытьФорму журнала расчетов","OpenForm calculation journal",
"ОткрытьФорму(<?>,)",
"OpenForm(<?>,)",
"@Синтаксис:
ОткрытьФорму(<ОписательОбъекта>,<КонтекстФормы>)
@Назначение:
Открывает визуальную форму журнала расчетов.
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<ОписательОбъекта> - строковое выражение. ''ЖурналРасчетов.ХХХХХ'', где ХХХХХ - вид журнала расчетов;
<КонтекстФормы> - имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст открытой формы (необязателен).
@Замечание:
Пока форма открыта, тип значения параметра <КонтекстФормы> равен 100, когда закрыта - 0."
    },
    {"Item","A","ОткрытьФорму существующего счета","OpenForm account unit",
"ОткрытьФорму(<?>,,)",
"OpenForm(<?>,,)",
"@Синтаксис:
ОткрытьФорму(<Cчет>,<КонтекстФормы>,<РежимПросмотра>)
@Назначение:
Открывает визуальную форму существующего счета.
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<Cчет> - выражение со значением типа 'Cчет';
<КонтекстФормы> - имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст открытой формы (необязателен);
<РежимПросмотра> - необязательный параметр. Числовое выражение: 1 - открыть форму в режиме только просмотра; 0 - открыть форму в режиме редактирования; -1 (минус единица) - в этом случае используется вариант, предусмотренный текущим значением параметра ''Режим открытия объектов'', установленным пользователем интерактивно.
@Замечание:
Пока форма открыта, тип значения параметра <КонтекстФормы> равен 100, когда закрыта - 0."
    },
    {"Item","A","ОткрытьФорму нового счета","OpenForm new account unit",
"ОткрытьФорму(<?>,)",
"OpenForm(<?>,)",
"@Синтаксис:
ОткрытьФорму(<ОписательОбъекта>,<КонтекстФормы>)
@Назначение:
Открывает визуальную форму ввода нового счета.
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<ОписательОбъекта> - Строковое выражение. ''Счет.ХХХХХ'', где ХХХХХ - идентификатор плана счетов;
<КонтекстФормы> - имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст открытой формы (необязателен).
@Замечание:
Пока форма открыта, тип значения параметра <КонтекстФормы> равен 100, когда закрыта - 0."
    },
    {"Item","A","ОткрытьФорму плана счетов","OpenForm chart of accounts",
"ОткрытьФорму(<?>,)",
"OpenForm(<?>,)",
"@Синтаксис:
ОткрытьФорму(<ОписательОбъекта>,<КонтекстФормы>)
@Назначение:
Открывает визуальную форму плана счетов.
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<ОписательОбъекта> - Строковое выражение. ''ПланСчетов.ХХХХ.YYYY'', где ХХХХХ - идентификатор плана счетов; YYYYY - идентификатор формы плана счетов.
<КонтекстФормы> - имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст открытой формы (необязателен).
@Замечание:
Пока форма открыта, тип значения параметра <КонтекстФормы> равен 100, когда закрыта - 0."
    },
    {"Item","A","ОткрытьФорму существующей операции","OpenForm operation unit",
"ОткрытьФорму(<?>,,,,,)",
"OpenForm(<?>,,,,,)",
"@Синтаксис:
ОткрытьФорму(<ОписательОбъекта>,<КонтекстФормы>,<Документ>,<Проводка>,<Корреспонденция>,<РежимПросмотра>)
@Назначение:
Открывает визуальную форму существующей операции.
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<ОписательОбъекта> - Строковое выражение. ''Операция''.
<КонтекстФормы> - имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст открытой формы (необязателен);
<Документ> - значение типа ''документ'', операция которого будет открываться;
<Проводка> - необязательный параметр. Числовое выражение - номер проводки на которую нужно позиционировать курсор при открытии операции.
<Корреспонденция> - необязательный параметр. Числовое выражение - номер корреспонденции указанной проводки, на которую нужно позиционировать курсор при открытии операции.
<РежимПросмотра> - необязательный параметр. Числовое выражение: 1 - открыть форму в режиме только просмотра; 0 - открыть форму в режиме редактирования; -1 (минус единица) - в этом случае используется вариант, предусмотренный текущим значением параметра ''Режим открытия объектов'', установленным пользователем интерактивно.
@Замечание:
Пока форма открыта, тип значения параметра <КонтекстФормы> равен 100, когда закрыта - 0."
    },
    {"Item","A","ОткрытьФорму ввода новой операции","OpenForm new operation unit",
"ОткрытьФорму(<?>,,)",
"OpenForm(<?>,,)",
"@Синтаксис:
ОткрытьФорму(<ОписательОбъекта>,<КонтекстФормы>,<ТиповаяОперация>)
@Назначение:
Открывает визуальную форму ввода новой операции.
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<ОписательОбъекта> - Строковое выражение. ''Операция''.
<КонтекстФормы> - имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст открытой формы (необязателен);
<ТиповаяОперация> - необязательный параметр. Строковое выражение - наименование типовой операции, которую следует использовать при вводе новой операции. Если значение не задано или пустое, то ввод операции выполняется без использования типовой.
@Замечание:
Пока форма открыта, тип значения параметра <КонтекстФормы> равен 100, когда закрыта - 0."
    },
    {"Item","A","ОткрытьФорму журнала операций","OpenForm operations journal",
"ОткрытьФорму(<?>,,,,)",
"OpenForm(<?>,,,,)",
"@Синтаксис:
ОткрытьФорму(<ОписательОбъекта>,<КонтекстФормы>,<Документ>,<Пров>,<Корр>)
@Назначение:
Открывает визуальную форму журнала операций и позволяет указать номер проводки и номер корреспонденции, на которые будет автоматически установлен курсор, если в журнале операций используется режим показа проводок.
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<ОписательОбъекта> - строковое выражение. ''ЖурналОпераций.YYYYY'', где YYYYY - идентификатор формы журнала операций;
<КонтекстФормы> - имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст открытой формы (необязателен);
<Документ> - значение типа ''документ'', операция которого будет использована для первоначального позиционирования курсора.
<Пров> - номер проводки, которая будет использована для первоначального позиционирования курсора.
<Корр> - номер корреспонденции, которая будет использована для первоначального позиционирования курсора.
@Замечание:
Пока форма открыта, тип значения параметра <КонтекстФормы> равен 100, когда закрыта - 0."
    },
    {"Item","A","ОткрытьФорму журнала проводок","OpenForm proc. journal",
"ОткрытьФорму(<?>,,,,)",
"OpenForm(<?>,,,,)",
"@Синтаксис:
ОткрытьФорму(<ОписательОбъекта>,<КонтекстФормы>,<Документ>,<Проводка>,<Корреспонденция>)
@Назначение:
Открывает визуальную форму журнала проводок.
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<ОписательОбъекта> - строковое выражение. ''ЖурналПроводок.YYYYY'', где YYYYY - идентификатор формы журнала проводок;
<КонтекстФормы> - имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст открытой формы (необязателен);
<Документ> - значение типа ''документ'', операция которого будет использована для первоначального позиционирования курсора.
<Проводка> - необязательный параметр. Числовое выражение - номер корреспонденции указанной проводки на которую нужно вначале позиционировать курсор.
<Корреспонденция> - необязательный параметр. Числовое выражение - номер проводки операции на которую нужно вначале позиционировать курсор.
@Замечание:
Пока форма открыта, тип значения параметра <КонтекстФормы> равен 100, когда закрыта - 0."
    },
    {"Item","AST","ОткрытьФорму окна истории констант","OpenForm  history const.",
"ОткрытьФорму(<?>,,,)",
"OpenForm(<?>,,,)",
"@Синтаксис:
ОткрытьФорму(<ОписательОбъекта>,,,<УстНаДату>)
@Назначение:
Открывает визуальную форму списка периодических значений.
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<ОписательОбъекта> - строковое выражение. ''История.Константа.ХХХХХ''', где ХХХХХ - идентификатор периодической константы, как он задан в конфигураторе.
<УстНаДату> - необязательный параметр. Дата, на которую нужно установить курсор при открытии окна."
    },
    {"Item","AST","ОткрытьФорму окна истории справочника","OpenForm  history",
"ОткрытьФорму(<?>,,,)",
"OpenForm(<?>,,,)",
"@Синтаксис:
ОткрытьФорму(<ОписательОбъекта>,,<Элемент>,<УстНаДату>)
@Назначение:
Открывает визуальную форму списка периодических значений.
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<ОписательОбъекта> - строковое выражение. ''История.Справочник.ХХХХХ.УУУУУ''', где ХХХХХ - идентификатор справочника, как он задан в конфигураторе, УУУУУ - идентификатор периодического реквизита справочника, как он задан в конфигураторе.
<Элемент> - Элемент справочника, для периодического реквизита которого открывается окно истории значений.
<УстНаДату> - необязательный параметр. Дата, на которую нужно установить курсор при открытии окна."
    },
    {"Item","AST","ОткрытьФорму окна истории счета","OpenForm  history",
"ОткрытьФорму(<?>,,,)",
"OpenForm(<?>,,,)",
"@Синтаксис:
ОткрытьФорму(<ОписательОбъекта>,,<Счет>,<УстНаДату>)
@Назначение:
Открывает визуальную форму списка периодических значений.
Возвращает: 1 - если действие выполнено, 0 - иначе.
@Параметры:
<ОписательОбъекта> - строковое выражение. ''История.Счет''.
<Счет> - счет, для которого открывается окно истории значений.
<УстНаДату> - необязательный параметр. Дата, на которую нужно установить курсор при открытии окна."
    },
    },
 {"Folder","AST","ОткрытьФормуМодально","OpenFormModal",
    {"Item","AST","ОткрытьФормуМодально","OpenFormModal",
"ОткрытьФормуМодально(<?>,,)",
"OpenFormModal(<?>,,)",
"@Синтаксис:
ОткрытьФормуМодально(<Документ>,<КонтекстФормы>,<РежимПросмотра>)
@Назначение:
Функция ОткрытьФормуМодально позволяет открыть модальную форму документа, справочника, журнала документов и других форм, используемых в системе 1С:Предприятие. Синтаксис и описание см. метод ОткрытьФорму."
    },
    },
    {"Item","AST","ОписаниеОшибки","GetErrorDescription",
"ОписаниеОшибки()",
"GetErrorDescription()",
"@Синтаксис:
ОписаниеОшибки()
@Назначение:
Применять данную функцию имеет смысл только в конструкции <Попытка - Исключение - КонецПопытки>, так как в иных случаях она возвращает пустую строку.
См. также:Попытка Исключение; ВызватьИсключение.
Возвращает описание ошибки времени выполнения модуля, такое же, как то, которое выдается в окне сообщений.
@Параметры: нет"
    },
    },
    },
    },
 {"Folder","AST","Глоб. модуль, предопределенные проц.","",
    {"Item","AST","ПриНачалеРаботыСистемы","OnStartSystem",
"Процедура ПриНачалеРаботыСистемы()
КонецПроцедуры",
"Procedure OnStartSystem()
EndProcedure",
"@Синтаксис:
ПриНачалеРаботыСистемы()
@Назначение:
Предопределенная процедура при начале работы пользователя.
@Замечание:
Данная процедура может располагаться только в глобальном программном модуле.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    {"Item","AST","ПриЗавершенииРаботыСистемы","OnFinishSystem",
"Процедура ПриЗавершенииРаботыСистемы()
КонецПроцедуры",
"Procedure OnFinishSystem()
EndProcedure",
"@Синтаксис:
ПриЗавершенииРаботыСистемы()
@Назначение:
Предопределенная процедура при завершении работы пользователя.
@Замечание:
Данная процедура может располагаться только в глобальном программном модуле.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    {"Item","AST","ПриУдаленииЭлемента","OnDeleteItem",
"Процедура ПриУдаленииЭлемента(<?>,)
КонецПроцедуры",
"Procedure OnDeleteItem(<?>,)
EndProcedure",
"@Синтаксис:
ПриУдаленииЭлемента(<УдалЭлем>,<Режим>)
@Назначение:
Предопределенная процедура при интерактивном удалении элемента справочника.
@Параметры:
<УдалЭлем> - удаляемый элемент;
<Режим> - режим удаления: 1 - непосредственное удаление, 0 - пометка на удаление.
@Замечание:
Данная процедура может располагаться только в глобальном программном модуле.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    {"Item","AST","ПриОткрытииИстории","OnOpenHistory",
"Процедура ПриОткрытииИстории(<?>,,)
КонецПроцедуры",
"Procedure OnOpenHistory(<?>,,)
EndProcedure",
"@Синтаксис:
ПриОткрытииИстории(<ТипОбъекта>,<Объект>,<ТолькоПросмотр>)
@Назначение:
Предопределенная процедура при открытии окна истории значения периодического реквизита элемента справочника или периодической константы.
@Параметры:
<ТипОбъекта> - строка с названием периодического объекта конфигурации (периодического реквизита справочника или периодической константы);
<Объект> - элемент справочника, для которого выполняется  открытие окна истории  периодического реквизита (для константы не используется);
<ТолькоПросмотр> - флаг установки режима ''только просмотр'' для окна истории значения. Если значение этого параметра установить в 1 (в предопределенной процедуре), то окно истории будет открыто только для чтения. Установка значения в 0 - введет режим по умолчанию (определенный правами). Уже открытое окно истории соответствующим образом изменит режим (если это случай, когда процедура обрабатывает не открытие окна, а смену отображаемого объекта). Значение по умолчанию - 0.
@Замечание:
Данная предопределенная  процедура может располагаться только в глобальном программном модуле."
    },
    {"Item","AST","ПриЗаписиИстории","OnWriteHistory",
"Процедура ПриЗаписиИстории(<?>,,,)
КонецПроцедуры",
"Procedure OnWriteHistory(<?>,,,)
EndProcedure",
"@Синтаксис:
ПриЗаписиИстории(<ТипОбъекта>,<Объект>,<Значение>,<ДатаИстории>)
@Назначение:
Предопределенная процедура при записи в окне истории значения периодического реквизита элемента справочника или периодической константы.
@Параметры:
<ТипОбъекта> - строка с названием периодического объекта конфигурации (периодического реквизита справочника или периодической константы);
<Объект> - элемент справочника, у которого выполняется изменение значения периодического реквизита (для константы не используется);
<Значение> - введенное значение;
<ДатаИстории> - дата, на которую введено значение.
@Замечание:
Данная процедура может располагаться только в глобальном программном модуле."
    },
    {"Item","AST","ПриУдаленииИстории","OnDeleteHistory",
"Процедура ПриУдаленииИстории(<?>,,,)
КонецПроцедуры",
"Procedure OnDeleteHistory(<?>,,,)
EndProcedure",
"@Синтаксис:
ПриУдаленииИстории(<ТипОбъекта>,<Объект>,<Значение>,<ДатаИстории>)
@Назначение:
Предопределенная процедура при удалении в окне истории значения периодического реквизита элемента справочника или периодической константы.
@Параметры:
<ТипОбъекта> - строка с названием периодического объекта конфигурации (периодического реквизита справочника или периодической константы);
<Объект> - элемент справочника, у которого выполняется удаление значения периодического реквизита (для константы не используется);
<Значение> - удаляемое значение;
<ДатаИстории> - дата, на которую было записано значение.
@Замечание:
Данная процедура может располагаться только в глобальном программном модуле."
    },
    {"Item","AST","ПриЗаписиКонстанты","OnWriteConst",
"Процедура ПриЗаписиКонстанты(<?>,)
КонецПроцедуры",
"Procedure OnWriteConst(<?>,)
EndProcedure",
"@Синтаксис:
ПриЗаписиКонстанты(<ИмяКонстанты>,<Значение>)
@Назначение:
Предопределенная процедура при интерактивном вводе значения константы.
@Параметры:
<ИмяКонстанты> - строка с названием константы;
<Значение> - введенное значение.
@Замечание:
Данная процедура может располагаться только в глобальном программном модуле.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    {"Item","AST","ПриУдаленииДокумента","OnDeleteDoc",
"Процедура ПриУдаленииДокумента(<?>,)
КонецПроцедуры",
"Procedure OnDeleteDoc(<?>,)
EndProcedure",
"@Синтаксис:
ПриУдаленииДокумента(<УдалДокум>,<Режим>)
@Назначение:
Предопределенная процедура при интерактивном удалении документа.
@Параметры:
<УдалДокум> - удаляемый документ;
<Режим> - режим удаления: 1 - непосредственное удаление, 0 - пометка на удаление.
@Замечание:
Данная процедура может располагаться только в глобальном программном модуле.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    {"Item","AST","ПриИзмененииВремениДокумента","OnChangeTimeDoc",
"Процедура ПриИзмененииВремениДокумента(<?>)
КонецПроцедуры",
"Procedure OnChangeTimeDoc(<?>)
EndProcedure",
"@Синтаксис:
ПриИзмененииВремениДокумента(<Докум>)
@Назначение:
Предопределенная процедура при интерактивном изменении времени документа.
@Параметры:
<Докум> - обрабатываемый документ.
@Замечание:
Данная процедура может располагаться только в глобальном программном модуле.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    {"Item","AST","ПриОтменеПроведенияДокумента","OnUnPosting",
"Процедура ПриОтменеПроведенияДокумента(<?>)
КонецПроцедуры",
"Procedure OnUnPosting(<?>)
EndProcedure",
"@Синтаксис:
ПриОтменеПроведенияДокумента(<Докум>)
@Назначение:
Предопределенная процедура при интерактивной отмене проведения документа.
@Параметры:
<Докум> - обрабатываемый документ.
@Замечание:
Данная процедура может располагаться только в глобальном программном модуле.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    {"Item","AST","ПриУстановкеОтбора","OnSetSelectInJournal",
"Процедура ПриУстановкеОтбора(<?>,)
КонецПроцедуры",
"Procedure OnSetSelectInJournal(<?>,)
EndProcedure",
"@Синтаксис:
ПриУстановкеОтбора(<ИмяРеквизОтбора>,<Значение>)
@Назначение:
Предопределенная процедура при интерактивной установке отбора документов в журнале.
@Параметры:
<ИмяРеквизОтбора> - строка с названием общего реквизита документа, по которому производится отбор;
<Значение> - значение реквизита отбора.
@Замечание:
Данная процедура может располагаться в глобальном программном модуле и в модуле формы журнала.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    {"Item","A","ПриУдаленииСчета","OnDeleteAccount",
"Процедура ПриУдаленииСчета(<?>,)
КонецПроцедуры",
"Procedure OnDeleteAccount(<?>,)
EndProcedure",
"@Синтаксис:
ПриУдаленииСчета(<УдалСчет>,<Режим>)
@Назначение:
Предопределенная процедура, выполняемая при удалении бухгалтерского счета.
@Параметры:
<УдалСчет> - значение типа ''Счет'' - удаляемый бухгалтерский счет.
<Режим> - режим удаления. Может принимать значения: 1 - счет будет удален; 0 - счет будет помечен на удаление.
@Замечание:
Данная процедура может располагаться в глобальном программном модуле.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    {"Item","A","ПриВыклВклПроводокОперации","OnOperEntryOffOn",
"Процедура ПриВыклВклПроводокОперации(<?>,)
КонецПроцедуры",
"Procedure OnOperEntryOffOn(<?>,)
EndProcedure",
"@Синтаксис:
ПриВыклВклПроводокОперации(<Документ>)
@Назначение:
Предопределенная процедура, выполняемая при выключении или включении бухгалтерских проводок.
@Параметры:
<Документ> - значение типа ''Документ'' - документ, которому принадлежит операция.
@Замечание:
Данная процедура может располагаться в глобальном программном модуле.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    {"Item","S","ПриСменеРасчетногоПериода","OnPeriodChange",
"Процедура ПриСменеРасчетногоПериода(<?>,)
КонецПроцедуры",
"Procedure OnPeriodChange(<?>,)
EndProcedure",
"@Синтаксис:
ПриСменеРасчетногоПериода(<ЖурналРасчетов>,<Период>)
@Назначение:
Предопределенная процедура, вызываемая при смене текущего расчетного периода журнала расчетов.
@Параметры:
<ЖурналРасчетов> - журнал расчетов, период которого изменяется (агрегатный объект типа ''ЖурналРасчетов'').
<Период> - устанавливаемый расчетный период (значение типа ''ПериодРасчета'').
@Замечание:
Данная процедура может располагаться в глобальном программном модуле.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    {"Item","AST","ОбработкаЯчейкиТаблицы","SheetCellProcessing",
"Процедура ОбработкаЯчейкиТаблицы(<?>,,,)
КонецПроцедуры",
"Procedure SheetCellProcessing(<?>,,,)
EndProcedure",
"@Синтаксис:
ОбработкаЯчейкиТаблицы(<Значение>,<ФлагСтандОбраб>,<Таблица>,<Адрес>)
@Назначение:
Предопределенная процедура обработки ячейки таблицы (по двойному щелчку мыши или по нажатию клавиши ''Enter'' в табличном документе на выбранной ячейке).
@Параметры:
<Значение> - здесь в процедуру передается вычисленное значение ячейки (задается в конфигураторе: ''Свойства'' ячейки, ''Текст'', ''Значение'').
<ФлагСтандОбраб> - флаг обработки ячейки: установка в 1 приведет к выполнению стандартной обработки значения ячейки по завершении процедуры (открытию документа, элемента справочника и т.п.).
<Таблица> - необязательный параметр. Имя переменной, куда система передаст объект типа ''Таблица''. С помощью значения этого контекста можно произвольно манипулировать данной таблицей, пока она открыта. Пока данный объект ''Таблица'' существует,  тип значения данного параметра равен 100, если закрыт - 0.
<Адрес> - необязательный параметр. Имя переменной, куда система передаст адрес ячейки/объекта в формате ''R1C1:R2C2''.
@Замечание:
Объект типа ''СписокЗначений'' может записываться в поле ''значение'' ячейки таблицы и использоваться затем процедурой ОбработкаЯчейкиТаблицы. 
@Важно! 
Если данная процедура описана в модуле формы, то вызывается она, иначе система запускает одноименную процедуру из глобального модуля.
@Внимание! 
Данная предопределенная процедура НЕ вызывается при выборе ячейки таблицы в режиме ввода данных. Для этого случая вызывается предопределенная процедура ПриВыбореЯчейкиТаблицы."
    },
    },
 {"Folder","AST","Контекст формы","",
 {"Folder","AST","Атрибуты","",
    {"Item","AST","СтрокаДействийФормы","StringFormActions",
"СтрокаДействийФормы",
"StringFormActions",
"@Синтаксис:
СтрокаДействийФормы
@Назначение:
Доступ к командной строке системных действий в кнопке.
@Замечание:
Доступ к атрибуту возможен только в контексте Модуля формы.
Подробнее см. в документации, глава 'Атрибуты и методы контекста Модуля формы'"
    },
    {"Item","AST","Форма","Form",
"Форма",
"Form",
"@Синтаксис:
Форма
@Назначение:
Атрибут представляет собой ссылку на объект типа ''Форма''. Атрибуты и методы объекта ''Форма'' позволяют в программном модуле изменять свойства визуального отображения диалога в целом (такие как Заголовок, Закладки и т.п.), а также свойства визуального отображения отдельных элементов диалога.
@Замечание:
Доступ к атрибуту возможен только в контексте Модуля формы."
    },
    },
 {"Folder","AST","Объект ''Форма''","Form",
 {"Folder","AST","Атрибуты","",
    {"Item","AST","Закладки","TabCtrl",
"Форма.Закладки",
"Form.TabCtrl",
"@Синтаксис:
Форма.Закладки
@Назначение:
Объект типа 'СписокЗначений', содержащий описания закладок текущей формы.
@Замечание:
Закладки - атрибут объекта 'Форма'. Доступ к атрибуту возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","<ЭлементДиалога>","<Attribute>",
"Форма.<?>",
"Form.<?>",
"@Синтаксис:
Форма.<ЭлементДиалога>
@Назначение:
Доступ к значению '<ЭлементДиалога>' выбранного элемента диалога, где
<ЭлементДиалога> - идентификатор элемента диалога, как он задан в конфигураторе."
    },
    {"Item","AST","Параметр","Parameter",
"Форма.Параметр",
"Form.Parameter",
"@Синтаксис:
Форма.Параметр
@Назначение:
Параметр, переданный при программном открытии формы.
@Замечание:
Атрибут представляет собой значение, переданное данной форме при ее открытии программно с помощью методов ОткрытьФорму, ОткрытьФормуМодально, ОткрытьПодбор. Если форма открыта интерактивно или если параметр при программном открытии не передавался, то данный атрибут содержит значение неопределенного типа. Доступ к атрибуту возможен только в контексте Модуля формы через атрибут Форма."
    },
    },
 {"Folder","AST","Методы","",
    {"Item","AST","ТолькоПросмотр","ReadOnly",
"Форма.ТолькоПросмотр(<?>)",
"Form.ReadOnly(<?>)",
"@Синтаксис:
Форма.ТолькоПросмотр(<Режим>)
@Назначение:
Установка режима редактирования формы.
Возвращает:
Текущее числовое значение режима редактирования формы (на момент до исполнения метода).
@Параметры:
<Режим> -: 0 - разрешено редактирование полей формы, 1 - запрещено (необязателен, по умолчанию - 0).
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","Обновить","Refresh",
"Форма.Обновить(<?>);",
"Form.Refresh(<?>);",
"@Синтаксис:
Форма.Обновить(<Флаг>)
@Назначение:
Обновить форму.
@Параметры:
<Флаг> - число: 1 - установить флаг модифицированности (признак изменения реквизитов текущей формы справочника или документа); 0 - не устанавливать флаг модифицированности.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","ИспользоватьЗакладки","TabCtrlState",
"Форма.ИспользоватьЗакладки(<?>)",
"Form.TabCtrlState(<?>)",
"@Синтаксис:
Форма.ИспользоватьЗакладки(<Флаг>)
@Назначение:
Установить режим использования закладок в форме.
@Параметры:
<Флаг> -: 1 - включает закладки в форме, 0 - выключает закладки в форме.
Возвращает:
Текущее числовое значение режима использования закладок формы (на момент до исполнения метода).
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","ИспользоватьСлой","UseLayer",
"Форма.ИспользоватьСлой(<?>,);",
"Form.UseLayer(<?>,);",
"@Синтаксис:
Форма.ИспользоватьСлой(<ИмяСлоя>,<Режим>)
@Назначение:
Установить режим отображения слоя в форме.
@Параметры:
<ИмяСлоя> - строковое выражение - название слоя формы, как оно задано в конфигураторе. Параметр может быть составным (указывать несколько слоев). В этом случае имена слоев перечисляются в строке через запятую.
<Режим> - необязательный параметр. Числовое выражение: 
0 - скрыть слой <ИмяСлоя> в форме; 
1 - показать слой <ИмяСлоя> в форме;
2 - показать слой <ИмяСлоя> и скрыть все остальные.
Значение по умолчанию - 2.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","Заголовок","Caption",
"Форма.Заголовок(<?>,)",
"Form.Caption(<?>,)",
"@Синтаксис:
Форма.Заголовок(<Название>,<Режим>)
@Назначение:
Установить заголовок окна формы.
Возвращает:
Текущий заголовок окна формы, установленный этой функцией.
@Параметры:
<Название> - cтроковое выражение - новый заголовок окна формы.
<Режим> - числовое выражение: 0 - выводит заданный заголовок вместо стандартного заголовка окна; 1 - выводит заданный заголовок вместе со стандартным заголовком окна.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","ПанельИнструментов","ToolBar",
"Форма.ПанельИнструментов(<?>);",
"Form.ToolBar(<?>);",
"@Синтаксис:
Форма.ПанельИнструментов(<Режим>)
@Назначение:
Управление видимостью панели инструментов окна формы.
Возвращает текущее состояние видимости панели инструментов окна формы.
@Параметры:
<Режим> - необязательный параметр. Число: 1 - показать панель инструментов; 0 - не показывать панель инструментов. Если парамерт не задан, то метод просто возвращает текущее состояние видимости панели инструментов.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","КнопкаПоУмолчанию","DefButton",
"Форма.КнопкаПоУмолчанию(<?>);",
"Form.DefButton(<?>);",
"@Синтаксис:
Форма.КнопкаПоУмолчанию(<ИдентификаторКнопки>)
@Назначение:
Задает кнопку в форме, которая будет ''срабатывать'' при нажатии комбинации клавиш Ctrl+Enter.
@Параметры:
<ИдентификаторКнопки> - cтроковое выражение - идентификатор одной из кнопок формы.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","ОбработкаВыбораСтроки","ProcessSelectLine",
"Форма.ОбработкаВыбораСтроки(<?>);",
"Form.ProcessSelectLine(<?>);",
"@Синтаксис:
Форма.ОбработкаВыбораСтроки(<Флаг>)
@Назначение:
Включает в форме списка (справочника, журнала, счетов, журнала операций, журнала проводок) обработку выбора строки предопределенной процедурой ПриВыбореСтроки.
@Параметры:
<Флаг> - число: 1 - включает обработку выбора предопределенной процедурой; 0 - выключает обработку выбора предопределенной процедурой.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","ВыполнитьВыбор","MakeChoice",
"Форма.ВыполнитьВыбор(<?>);",
"Form.MakeChoice(<?>);",
"@Синтаксис:
Форма.ВыполнитьВыбор(<Знач>)
@Назначение:
Осуществляет выбор в форме, открытой для подбора или выбора значения (аналогично интерактивному двойному клику в подборе).
@Параметры:
<Знач> - значение, которое выбирается в форме, открытой для подбора или выбора значения.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","РежимВыбора","ChoiceMode",
"Форма.РежимВыбора();",
"Form.ChoiceMode();",
"@Синтаксис:
Форма.РежимВыбора()
@Назначение:
Возвращает режим работы формы. Число: 0 - форма открыта не для выбора; 1 - форма открыта для выбора одного значения; 2 - форма открыта для выбора нескольких значений.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","МодальныйРежим","ModalMode",
"Форма.МодальныйРежим();",
"Form.ModalMode();",
"@Синтаксис:
Форма.МодальныйРежим()
@Назначение:
Возвращает режим работы формы. Число: 0 - немодальный режим; 1 - модальный режим.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","ПолучитьАтрибут","GetAttrib",
"ПолучитьАтрибут(<?>);",
"GetAttrib(<?>);",
"@Синтаксис:
Форма.ПолучитьАтрибут(ИмяРеквизита)
@Назначение:
Возвращает ссылку на элемент формы.
@Параметры:
ИмяРеквизита - строковое выражение, содержащее идентифика-тор элемента формы, как он задан в Конфигураторе.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","АктивныйЭлемент","ActiveControl",
"Форма.АктивныйЭлемент();",
"Form.ActiveControl();",
"@Синтаксис:
Форма.АктивныйЭлемент()
@Назначение:
Возвращает строковое значение -  идентификатор активного элемента диалога.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","ТекущаяКолонка","CurrentColumn",
"Форма.ТекущаяКолонка();",
"Form.CurrentColumn();",
"@Синтаксис:
Форма.ТекущаяКолонка()
@Назначение:
Возвращает строковое значение -  идентификатор текущей колонки многострочной части.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","Закрыть","Close",
"Форма.Закрыть(<?>);",
"Form.Close(<?>);",
"@Синтаксис:
Форма.Закрыть(<ЗапрСохр>)
@Назначение:
Закрыть форму.
@Параметры:
<ЗапрСохр> - необязательный параметр. Число: 0 - закрыть форму без вопросов; 1 - если документ, счет, элемент справочника изменен, то будет запрос о сохранении изменений. Значение по  умолчанию - 1.
@Замечание:
Действие данного метода не прерывает выполнения текущей процедуры программы, т.е. процедура доработает до конца. Данный метод  лишь устанавливает признак, который отрабатывает после окончания выполнения процедуры. Доступ к методу возможен только в контексте Модуля формы через атрибут Форма"
    },
    },
 {"Folder","AST","Методы элементов диалога","",
    {"Item","AST","Видимость","Visible",
"Видимость(<?>)",
"Visible(<?>)",
"@Синтаксис:
Видимость(<Режим>)
@Назначение:
Установка режима отображения элемента диалога. Возвращает: текущее числовое значение режима отображения элемента диалога (на момент до исполнения метода).
@Параметры:
<Режим> - число: 1 - поле диалога отображается, 0 - поле диалога скрыто.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма. 
Использование данного метода для колонки табличной части формы не может изменять видимость отдельно для совмещенных и многострочных колонок."
    },
    {"Item","AST","Доступность","ReadOnly",
"Доступность(<?>)",
"ReadOnly(<?>)",
"@Синтаксис:
Доступность(<Режим>)
@Назначение:
Установка режима редактирования элемента диалога. Возвращает: текущее числовое значение режима редактирования элемента диалога (на момент до исполнения метода).
@Параметры:
<Режим> - число: 1 - разрешено редактирование элемента диалога, 0 - запрещено (необязателен).
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","Редактирование","EnableEdit",
"Редактирование(<?>)",
"EnableEdit(<?>)",
"@Синтаксис:
Редактирование(<Флаг>)
@Назначение:
Определяет возможность редактирования значения непосредственно в элементе диалога для полей ввода типа Число, Строка, Дата, Счет. 
@Параметры:
<Флаг> - число: 1 - значение элемента редактируется как обычно ; 0 - значение не редактируется, но может выбираться кнопкой выбора. Отличие от метода ''Доступность '' в том, что ''Доступность'' отключает и кнопку выбора.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","Цвет","Color",
"Цвет(<?>)",
"Color(<?>)",
"@Синтаксис:
Цвет(<Цвет>)
@Назначение:
Установка режима отображения цвета элемента диалога. Возвращает: текущее числовое значение RGB цвета элемента диалога (на момент до исполнения метода).
@Параметры:
<Цвет> - число, задающее цвет (-1 определяет цвет, заданный для формы).
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","Цвет","Color",
"Цвет(<?>,,)",
"Color(<?>,,)",
"@Синтаксис:
Цвет(<R>,<G>,<B>)
@Назначение:
Установка режима отображения цвета элемента диалога. Возвращает: текущее числовое значение RGB цвета элемента диалога (на момент до исполнения метода).
@Параметры:
<R> - число, задающее цвет красной компоненты;
<G> - число, задающее цвет зеленой компоненты;
<B> - число, задающее цвет синей компоненты.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","Маска","Mask",
"Маска(<?>)",
"Mask(<?>)",
"@Синтаксис:
Маска(<СтрокаМаски>)
@Назначение:
Устанавливает/возвращает маску интерактивного ввода для строкового реквизита. Возвращает: строковое значение - текущая маска интерактивного ввода для строковых реквизитов (на момент до исполнения метода).
@Параметры:
<СтрокаМаски> - строка с маской интерактивного ввода (необязателен).
@Замечание:
Допустимые обозначения масок:
  ! - символ преобразуется в верхний регистр;
  9 - цифра;
  # - цифра, или минус, или плюс, или пробел;
  N - алфавитно-цифровой символ;
  X - любой символ;
  @ - алфавитно-цифровой символ в верхнем регистре. 
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма.
Подробнее см. в документации, глава 'Атрибуты и методы контекста Модуля формы'"
    },
    {"Item","AST","Заголовок","Caption",
"Заголовок(<?>)",
"Caption(<?>)",
"@Синтаксис:
Заголовок(<Название>)
@Назначение:
Устанавливает заголовок элемента диалога. Возвращает текущий заголовок элемента диалога.
@Параметры:
<Название> - cтроковое выражение - новый заголовок колонки  многострочной части формы, кнопки, рамки группы, текста, флажка, переключателя.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма."
    },
    {"Item","AST","ВыборГруппы","SelectGroup",
"ВыборГруппы(<?>)",
"SelectGroup(<?>)",
"@Синтаксис:
ВыборГруппы(<Режим>)
@Назначение:
Установить режим выборки групп. Возвращает: текущее числовое значение режима выборки групп для элемента диалога (на момент до исполнения метода).
@Параметры:
<Режим> - число: 1 - выбирать группы, 0 - не выбирать (необязателен, по умолчанию - 1).
@Замечание:
Метод применяется для объектов, созданных функцией ''СоздатьОбъект'', и в диалогах для полей типа справочник.
По умолчанию, выборка элементов справочников для полей диалога в формах документов, журналов и справочников установлена без выбора групп, а в форме отчета с выбором групп.
Подробнее см. в документации, глава 'Атрибуты и методы контекста Модуля формы'"
    },
    {"Item","AST","ВыполнятьФормулуТолькоПриИзменении","ProcessFormulaOnlyWhenChanged",
"ВыполнятьФормулуТолькоПриИзменении(<?>);",
"ProcessFormulaOnlyWhenChanged(<?>);",
"@Синтаксис:
ВыполнятьФормулуТолькоПриИзменении(<Режим>)
@Назначение:
Установка режима выполнения формулы выбранного поля табличной части документа.
@Параметры:
<Режим> - число: 1 - формула вызывается только при изменении значения поля, 0 - вызывается и при переходе между полями.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма.
Подробнее см. в документации, глава 'Атрибуты и методы контекста Модуля формы'"
    },
    {"Item","AST","УстановитьТип","AssignType",
"УстановитьТип(<?>);",
"AssignType(<?>);",
"@Синтаксис:
УстановитьТип(<Выражение>)
@Назначение:
Установить тип для элемента диалога, которому в конфигураторе назначен тип 'Неопределенный'.
@Параметры:
<Выражение> - Выражение. Тип значения этого выражения будет присвоен элементу диалога.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма.
Подробнее см. в документации, глава 'Атрибуты и методы контекста Модуля формы'"
    },
    {"Item","AST","НазначитьТип","SetType",
"НазначитьТип(<?>,,);",
"SetType(<?>,,);",
"@Синтаксис:
НазначитьТип(<ИмяТипа>,<Длина>,<Точность>)
@Назначение:
Назначить тип для элемента диалога, которому в конфигураторе назначен тип 'Неопределенный'.
@Параметры:
<ИмяТипа> - строковое выражение - название типа данных, которое назначается элементу диалога. Например, 'Строка', 'Число', 'Справочник.Товары', 'Документ.РасходнаяНакладная' и т.п.
<Длина> - необязательный параметр. Числовое выражение - длина поля представления числа. Имеет смысл только при задании числового типа.
<Точность> - необязательный параметр. Числовое выражение - число знаков числа после десятичной точки. Имеет смысл только при задании числового типа. 
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма.
Подробнее см. в документации, глава 'Атрибуты и методы контекста Модуля формы'"
    },
    {"Item","AST","НеИзменятьВид","FixKind",
"НеИзменятьВид(<?>);",
"FixKind(<?>);",
"@Синтаксис:
НеИзменятьВид(<Признак>)
@Назначение:
Позволяет запретить пользователю изменять вид при выборе значения справочника, документа, счета неопределенного вида. Возвращает число - текущее значение признака.
@Параметры:
<Признак> - Числовое выражение - признак запрета изменения вида. Может принимать значения: 0 - разрешить изменение вида при выборе значения; 1 - запретить изменение вида при выборе значения.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы через атрибут Форма.
Подробнее см. в документации, глава 'Атрибуты и методы контекста Модуля формы'"
    },
    },
    },
 {"Folder","AST","Модуль формы","",
 {"Folder","AST","Методы","",
    {"Item","AST","ОткрытьПодбор","OpenPermanentChoice",
"ОткрытьПодбор(<?>,,,,);",
"OpenPermanentChoice(<?>,,,,);",
"@Синтаксис:
ОткрытьПодбор(<Объект>,<ИмяФормы>,<КонтекстФормы>,<ФлагМножВыбора>,<ТекЗнач>)
@Назначение:
Открыть Форму подбора значений.
@Параметры:
<Объект> - строка с именем объекта агрегатного типа для подбора. Можно указывать: ''Справочник.ХХХХХ'' или ''Документ.ХХХХХ'' или ''Журнал.ХХХХХ'' или ''Журнал.Подчиненные'' или ''ЖурналОпераций.ХХХХХ'', ''ПланСчетов.ХХХХХ'' (если ХХХХХ не задан, то открывается подбор из любого(всех) плана счетов) или ''Отчет.ХХХХХХ' или, ''Обработка.ХХХХХХ'', где ХХХХХ - имя вида соответствующего объекта, как он задан в конфигураторе.
<ИмяФормы> - строка с именем Формы подбора;
<КонтекстФормы> - необязательный параметр. Имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст формы подбора. С помощью значения этого контекста можно затем произвольно манипулировать формой подбора, пока она открыта. Пока форма открыта, тип значения данного параметра равен 100 (см. ТипЗначения), если закрыта - 0.
<ФлагМножВыбора> - число: 1 - выбор нескольких значений; 0 -  выбор одного значения, после чего окно закрывается;
<ТекЗнач> - необязательный параметр. В случае выбора из списка, здесь можно передать значение, на которое следует изначально установить курсор при открытии формы подбора.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы."
    },
    {"Item","AST","УстановитьЗначениеВПодборе","SetValueInPermanentChoice",
"УстановитьЗначениеВПодборе(<?>,);",
"SetValueInPermanentChoice(<?>,);",
"@Синтаксис:
УстановитьЗначениеВПодборе(<ИмяРеквизита>,<Значение>)
@Назначение:
Установить значение реквизита диалога подбора.
@Параметры:
<ИмяРеквизита> - строка с именем реквизита формы подбора значения;
<Значение> - значение реквизита.
@Замечание:
Метод следует использовать после вызова метода ОткрытьПодбор.
Доступ к методу возможен только в контексте Модуля формы."
    },
    {"Item","AST","ПолучитьЗначениеИзПодбора","GetValueFromPermanentChoice",
"ПолучитьЗначениеИзПодбора(<?>)",
"GetValueFromPermanentChoice(<?>)",
"@Синтаксис:
ПолучитьЗначениеИзПодбора(<Выражение>)
@Назначение:
Возвращает значение вычисленного в контексте формы подбора выражения.
@Параметры:
<Выражение> - строковое выражение, значение которого вычисляется в контексте формы подбора и возвращается в качестве результата.
@Замечание:
Метод следует использовать после вызова метода ОткрытьПодбор.
Доступ к методу возможен только в контексте Модуля формы."
    },
    {"Item","AST","Активизировать","Activate",
"Активизировать(<?>,);",
"Activate(<?>,);",
"@Синтаксис:
Активизировать(<ИмяРеквизита>,<Режим>)
@Назначение:
Активизировать для редактирования поле диалога.
@Параметры:
<ИмяРеквизита> - необязательный параметр. Строка с именем поля диалога, которое нужно активизировать. Пустое имя элемента диалога используется для активизации всей формы.
<Режим> -  необязательный параметр. Имеет смысл только для строк списков. Число: 1 - войти в режим редактирования, 0 - не входить. Значение по умолчанию - 1.
@Замечание:
Метод  Активизировать может быть вызван из другого (внешнего) модуля, если в нем известен контекст формы, в которой нужно активизировать элемент диалога. Доступ к методу возможен только в контексте Модуля формы."
    },
    {"Item","AST","АктивизироватьОбъект","ActivateObj",
"АктивизироватьОбъект(<?>);",
"ActivateObj(<?>);",
"@Синтаксис:
АктивизироватьОбъект(<Объект>)
@Назначение:
Активизировать объект в форме списка.
@Параметры:
<Объект> - выражение, которое может содержать значение элемента справочника или документ или запись журнала расчетов (в зависимости от типа модуля формы, в котором должен быть активизирован элемент диалога).
@Замечание:
Доступ к методу возможен только в контексте Модуля формы."
    },
    },
 {"Folder","AST","Предопределенные","",
    {"Item","AST","ПриОткрытии","OnOpen",
"Процедура ПриОткрытии()КонецПроцедуры",
"Procedure OnOpen()
EndProcedure",
"@Синтаксис:
ПриОткрытии()
@Назначение:
Предопределенная процедура при интерактивном открытии формы.
@Замечание:
Данная процедура может располагаться только в программном модуле формы.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    {"Item","AST","ПриПовторномОткрытии","OnReopen",
"Процедура ПриПовторномОткрытии()
КонецПроцедуры",
"Procedure OnReopen()
EndProcedure",
"@Синтаксис:
ПриПовторномОткрытии()
@Назначение:
Предопределенная процедура при повторном открытии формы в случае, если открывают уже открытую форму - то есть форма просто активизируется.
@Замечание:
Данная процедура может располагаться только в программном модуле формы."
    },
    {"Item","AST","ПриЗакрытии","OnClose",
"Процедура ПриЗакрытии()
КонецПроцедуры",
"Procedure OnClose()
EndProcedure",
"@Синтаксис:
ПриЗакрытии()
@Назначение:
Предопределенная процедура при интерактивном закрытии формы.
@Замечание:
Данная процедура может располагаться только в программном модуле формы.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    {"Item","AST","ПриВыбореЗакладки","OnTabCtrlPosChanged",
"Процедура ПриВыбореЗакладки(<?>,)
КонецПроцедуры",
"Procedure OnTabCtrlPosChanged(<?>,)
EndProcedure",
"@Синтаксис:
ПриВыбореЗакладки(<НомерЗакладки>,<ЗначениеЗакладки>)
@Назначение:
Предопределенная процедура обработки подбора значения в момент интерактивного выбора пользователем закладки в форме. 
<НомерЗакладки> - числовое значение - номер выбранной закладки формы.
<ЗначениеЗакладки> - значение выбранной закладки формы.
@Замечание:
Данная процедура может располагаться только в программном модуле формы.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    {"Item","AST","ОбработкаПодбора","ProcessPermanentChoice",
"Процедура ОбработкаПодбора(<?>,)
КонецПроцедуры",
"Procedure ProcessPermanentChoice(<?>,)
EndProcedure",
"@Синтаксис:
ОбработкаПодбора(<Элемент>,<КонтФормы>)
@Назначение:
Предопределенная процедура обработки подбора значения при  нажатия кнопки Выбрать в Форме Подбора значения.
@Параметры:
<Элемент> - элемент справочника подбора или документ, передаваемый для обработки.
<КонтФормы> - контекст той формы, из которой шел подбор.
@Замечание:
Данная процедура может располагаться только в программном модуле формы."
    },
    {"Item","AST","ПриНачалеВыбораЗначения","OnStartValueChoice",
"Процедура ПриНачалеВыбораЗначения(<?>,)
КонецПроцедуры",
"Procedure OnStartValueChoice(<?>,)
EndProcedure",
"@Синтаксис:
ПриНачалеВыбораЗначения(<ИдентЭлемДиалога>,<ФлагСтандОбр>)
@Назначение:
Предопределенная процедура после выбора значения в форме выбора (выбор может быть инициирован в немодальном режиме интерактивно, при помощи элемента диалога с ''педалькой'').
<ИдентЭлемДиалога> - идентификатор элемента диалога, которым инициализирован выбор значения.
<ФлагСтандОбр> - флаг, изначально, при вызове процедуры равен 1, если в теле процедуры значение этого параметра поменять на 0, то стандартный процесс выбора значения не будет происходить. 
@Замечание:
Данная процедура может располагаться только в программном модуле формы."
    },
    {"Item","AST","ОбработкаВыбораЗначения","ProcessValueChoice",
"Процедура ОбработкаВыбораЗначения(<?>,,)
КонецПроцедуры",
"Procedure ProcessValueChoice(<?>,,)
EndProcedure",
"@Синтаксис:
ОбработкаВыбораЗначения(<ВыбЗнач>,<ИдентЭлемДиалога>,<ФлагСтандОбр>)
@Назначение:
Предопределенная процедура после выбора значения в форме выбора (выбор может быть инициирован в немодальном режиме интерактивно, при помощи элемента диалога с ''педалькой'').
<ВыбЗнач> - выбранный элемент справочника, документ или иной объект, передаваемый для обработки.
<ИдентЭлемДиалога> - идентификатор элемента диалога, которым инициализирован выбор значения.
<ФлагСтандОбр> - флаг, установка которого в теле процедуры в 0 (ноль) приведет к отмене стандартного присвоения значения. 
@Замечание:
Данная процедура может располагаться только в программном модуле формы.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    {"Item","AST","ПриВыбореСтроки","OnSelectLine",
"Процедура ПриВыбореСтроки()
КонецПроцедуры",
"Procedure OnSelectLine()
EndProcedure",
"@Синтаксис:
ПриВыбореСтроки()
@Назначение:
Предопределенная процедура при выборе строки списка.
@Замечание:
Режим обработки выбора строки (двойной щелчок мыши или клавиша Enter) предопределенной процедурой ПриВыбореСтроки включается в форме списка справочника, журнала, счетов, журнала операций, журнала проводок при помощи метода Форма.ОбработкаВыбораСтроки(1). Данная процедура может располагаться только в программном модуле формы."
    },
    },
    },
 {"Folder","AST","Модуль формы отчета (обработки)","",
 {"Folder","AST","Атрибуты","",
    {"Item","AST","Таблица","Table",
"Таблица",
"Table",
"@Синтаксис:
Таблица
@Назначение:
Атрибут (только для чтения) представляет собой ссылку на объект типа ''Таблица''. Доступ к данному атрибуту возможен только в контексте Модуля формы отчета или обработки. При настройке формы отчета (обработки), если табличный документ размещен непосредственно в форме (для этого в диалоге, вызываемом пунктом ''Свойства формы'' меню ''Действия'' в параметре ''Использовать таблицу''  выбирается вариант ''Пустую'' или ''Для ввода данных''), то доступ к такому объекту осуществляется через атрибут контекста формы отчета (обработки) Таблица. 
Атрибуты и методы объекта ''Таблица'' позволяют в программном модуле управлять процессом формирования и визуального отображения таблицы в целом, а также изменять свойства визуального отображения отдельных областей таблицы.
В тексте программного модуля через точку после имени атрибута ''Таблица'' можно записывать адреса областей таблицы, а далее через точку можно вызывать методы управления свойствами этих областей."
    },
    {"Item","AST","<ИмяОбласти>","<NameReg>",
"<ИмяОбласти>",
"<NameReg>",
"@Синтаксис:
<ИмяОбласти>
@Назначение:
Атрибут <ИмяОбласти> позволяет обращаться к значениям, записанным в поименованных областях таблицы в режиме ввода данных. Для обращения к значению конкретной области следует указать имя этой области, заданной в конфигураторе.
Данный атрибут существует и доступен в форме, если при конфигурировании данной формы в свойствах формы выбрана опция ''Использовать таблицу'' - ''Для ввода данных''. Установка данной опции в свойствах формы означает наличие у данной формы таблицы в режиме ввода данных. В процессе конфигурирования в таблице можно задать любое число выделенных и поименованных областей. Данный атрибут работает на чтение только в том случае, если в качестве области таблицы помечена одна единственная ячейка. Доступ к данному атрибуту возможен только в контексте Модуля формы отчета или обработки."
    },
    },
 {"Folder","AST","Методы","",
    {"Item","AST","РасположениеФайла","FilePath",
"РасположениеФайла(<?>,);",
"FilePath(<?>,);",
"@Синтаксис:
РасположениеФайла(<Путь>,<Имя>)
@Назначение:
Определить, где располагается данный внешний отчет.
@Параметры:
<Путь> - идентификатор переменной, куда метод возвращает путь к файлу, где располагается данный внешний отчет.
<Имя> - идентификатор переменной, куда метод возвращает имя файла, где располагается данный внешний отчет.
@Замечание:
Данный метод следует использовать только в модуле формы внешнего отчета."
    },
    },
 {"Folder","AST","Предопределенные","",
    {"Item","AST","ВводНового","InputNew",
"Процедура ВводНового()
КонецПроцедуры",
"Procedure InputNew()
EndProcedure",
"@Синтаксис:
ВводНового()
@Назначение:
Предопределенная процедура при открытии формы отчета (обработки) и при восстановлении сохраненной настройки отчета (обработки).
@Замечание:
Данная процедура может располагаться только в программных модулях отчета или обработки."
    },
    {"Item","AST","ПриОткрытии","OnOpen",
"Процедура ПриОткрытии(<?>)КонецПроцедуры",
"Procedure OnOpen(<?>)
EndProcedure",
"@Синтаксис:
ПриОткрытии(<ФлагЧтенияНастройки>)
@Назначение:
Предопределенная процедура при открытии формы отчета (обработки).
@Параметры:
<ФлагЧтенияНастройки> - числовое значение - признак считывания сохраненной настройки отчета (обработки). Может принимать значения: 1 - при открытии формы была восстановлена последняя сохраненная настройка отчета (обработки); 0 - при открытии формы настройка не восстановлена.
@Замечание:
Данная процедура может располагаться только в программном модуле отчета или обработки."
    },
    {"Item","AST","ПриВыбореЯчейкиТаблицы","OnSelectSheetCell",
"Процедура ПриВыбореЯчейкиТаблицы(<?>,)
КонецПроцедуры",
"Procedure OnSelectSheetCell(<?>,)
EndProcedure",
"@Синтаксис:
ПриВыбореЯчейкиТаблицы(<Адрес>,<Значение>)
@Назначение:
Предопределенная процедура обработки ячейки таблицы в режиме ввода данных (по двойному щелчку мыши или по нажатию клавиши ''Enter'' в табличном документе на выбранной ячейке).
@Параметры:
<Адрес> - здесь в процедуру системой передается строковое значение имени области таблицы, если выбранная ячейка помечена в таблице как отдельная область, или адрес ячейки в формате ''R1C1:R2C2''.
<Значение> - здесь в процедуру системой передается значение данной ячейки, а если диаграмма - значение выбранного элемента.
@Внимание! 
Данная предопределенная процедура вызывается в модуле формы отчета (обработки) при выборе ячейки только для таблиц в режиме ввода данных."
    },
    },
    },
    },
 {"Folder","AST","Константа","Const",
 {"Folder","AST","Методы","",
    {"Item","AST","НазначитьТип","SetType",
"НазначитьТип(<?>,,,)",
"SetType(<?>,,,)",
"@Синтаксис:
НазначитьТип(<ИмяРеквизита>,<ИмяТипа>,<Длина>,<Точность>)
@Назначение:
Назначить тип для константы неопределенного типа
@Параметры: 
<ИмяРеквизита> - строка с наименованием реквизита неопределенного типа, как он назван в конфигураторе.
<ИмяТипа> - строковое выражение - название типа данных (или Вид субконто), который назначается реквизиту. Например, ''Строка'', ''Число'', ''Справоч-ник.Товары'', ''Документ.РасходнаяНакладная'' и т.п.
<Длина> - необязательный параметр. Число - длина поля представления данных. Имеет смысл только при задании числового или строкового типа.
<Точность> - необязательный параметр. Число знаков после десятичной точки. Имеет смысл только при задании числового типа."
    },
    },
 {"Folder","AST","Методы периодических констант","",
    {"Item","AST","Получить","GetValue",
"Получить(<?>)",
"GetValue(<?>)",
"@Синтаксис:
Получить(<Дата>)
@Назначение:
Возвращает значение периодической константы на заданную дату.
@Параметры:
<Дата> -  необязательный параметр. Выражение типа дата или значение типа документ или позиция документа. Этот параметр задает момент времени, на который требуется получить значение периодической константы. Значение по умолчанию: ТА - если используется компонента ''Оперативный учет'', Рабочая дата - если компонента ''Оперативный учет'' не используется.
@Замечание:
Метод можно использовать только для периодических констант."
    },
    {"Item","AST","Установить","SetValue",
"Установить(<?>,);",
"SetValue(<?>,);",
"@Синтаксис:
Установить(<Дата>,<Значение>)
@Назначение:
Установить значение периодической константы на дату.
@Параметры:
<Дата> - дата, на которую требуется установить значение периодической константы;
<Значение> - новое значение константы.
@Замечание:
Метод можно использовать только для периодических констант."
    },
    },
 {"Folder","AST","Методы глобального атрибута ''Константа''","",
    {"Item","AST","УстановитьАтрибут","SetAttrib",
"УстановитьАтрибут(<?>,);",
"SetAttrib(<?>,);",
"@Синтаксис:
УстановитьАтрибут(<ИмяКонстанты>,<Значение>)
@Назначение:
Установить значение константы по ее идентификатору.
@Параметры:
<ИмяКонстанты> - строковое выражение, содержащее идентификатор константы, как он задан в конфигураторе.
<Значение> - выражение, содержащее устанавливаемое значение константы."
    },
    {"Item","AST","ПолучитьАтрибут","GetAttrib",
"ПолучитьАтрибут(<?>);",
"GetAttrib(<?>);",
"@Синтаксис:
ПолучитьАтрибут(<ИмяКонстанты>)
@Назначение:
Получить значение константы по ее идентификатору. Возвращает значение константы.
@Параметры:
<ИмяКонстанты> - строковое выражение, содержащее идентификатор константы, как он задан в конфигураторе."
    },
    },
    },
 {"Folder","AST","Справочник","Reference",
 {"Folder","AST","Атрибуты","",
    {"Item","AST","<Реквизит>","<Attribute>",
"<Реквизит>",
"<Attribute>",
"@Синтаксис:
<Реквизит>
@Назначение:
Доступ к значению реквизита '<Реквизит>' выбранного элемента справочника, где
<Реквизит> - название реквизита справочника, как оно задано в конфигураторе."
    },
    {"Item","AST","Код","Code",
"Код",
"Code",
"@Синтаксис:
Код
@Назначение:
Доступ к значению реквизита 'Код' выбранного элемента справочника.
Подробнее см. в документации, глава 'Работа со Справочниками'"
    },
    {"Item","AST","Наименование","Description",
"Наименование",
"Description",
"@Синтаксис:
Наименование
@Назначение:
Доступ к значению реквизита 'Наименование' выбранного элемента справочника."
    },
    {"Item","AST","Родитель","Parent",
"Родитель",
"Parent",
"@Синтаксис:
Родитель
@Назначение:
Доступ к значению родительской группы выбранного элемента справочника.
Атрибут  может быть изменен только для объектов, созданных функцией СоздатьОбъект.
Подробнее см. в документации, глава 'Работа со Справочниками'"
    },
    {"Item","AST","Владелец","Owner",
"Владелец",
"Owner",
"@Синтаксис:
Владелец
@Назначение:
Доступ к владельцу выбранного элемента справочника в связанном справочнике.
Атрибут  может быть изменен только для объектов, созданных функцией СоздатьОбъект.
Подробнее см. в документации, глава 'Работа со Справочниками'"
    },
    },
 {"Folder","AST","Методы периодических реквизитов","",
    {"Item","AST","Получить","GetValue",
"Получить(<?>)",
"GetValue(<?>)",
"@Синтаксис:
Получить(<Дата>)
@Назначение:
Получить значение периодического реквизита справочника на дату или документ.
Возвращает - значение периодического реквизита справочника на заданную дату или документ.
@Параметры: 
<Дата> - необязательный параметр. Выражение типа дата или значение типа документ или позиция документа. Этот параметр задает момент времени, на который требуется получить значение периодического реквизита. Значение по умолчанию: ТА - если используется компонента ''Оперативный учет'', Рабочая дата - если компонента ''Оперативный учет'' не используется.
@Замечание:
Метод  можно использовать только для периодических реквизитов справочника и если для справочника еще не применялся метод ИспользоватьДату."
    },
    {"Item","AST","Установить","SetValue",
"Установить(<?>,);",
"SetValue(<?>,);",
"@Синтаксис:
Установить(<Дата>,<Значение>)
@Назначение:
Установить значение периодического реквизита справочника на заданную дату.
@Параметры: 
<Дата> - выражение со значением требуемой даты;
<Значение> - выражение, содержащее устанавливаемое значение периодического реквизита справочника.
@Замечание:
Метод  можно использовать только для периодических реквизитов справочника и если для справочника еще не применялся метод ИспользоватьДату. Метод  можно использовать только для объектов-справочников, созданных функцией СоздатьОбъект."
    },
    },
 {"Folder","AST","Методы","",
    {"Item","AST","Вид","Kind",
"Вид(<?>)",
"Kind(<?>)",
"@Синтаксис:
Вид(<Название>)
@Назначение:
Установить или считать текущее  название вида справочника.
Возвращает текущее название вида справочника.
@Параметры:
<Название> - строка с названием вида справочника.
Если параметр не задан - метод просто возвращает текущее название."
    },
    {"Item","AST","ПредставлениеВида","KindPresent",
"ПредставлениеВида();",
"KindPresent();",
"@Синтаксис:
ПредставлениеВида()
@Назначение:
Получить пользовательское представление вида справочника, как он задан в конфигураторе.
Возвращает строковое значение, содержащее пользовательское представление вида справочника."
    },
    {"Item","AST","Уровень","Level",
"Уровень()",
"Level()",
"@Синтаксис:
Уровень()
@Назначение:
Возвращает номер уровня текущего элемента справочника."
    },
    {"Item","AST","УстановитьАтрибут","SetAttrib",
"УстановитьАтрибут(<?>,);",
"SetAttrib(<?>,);",
"@Синтаксис:
УстановитьАтрибут(<ИмяРеквизита>,<Значение>)
@Назначение:
Установить значение реквизита по имени идентификатора.
@Параметры:
<ИмяРеквизита> - строковое выражение, содержащее имя реквизита, как оно задано в конфигураторе.
<Значение> - выражение, содержащее устанавливаемое значение реквизита."
    },
    {"Item","AST","ПолучитьАтрибут","GetAttrib",
"ПолучитьАтрибут(<?>);",
"GetAttrib(<?>);",
"@Синтаксис:
ПолучитьАтрибут(<ИмяРеквизита>)
@Назначение:
Получить значение реквизита по имени идентификатора. Возвращает значение реквизита.
@Параметры:
<ИмяРеквизита> - строковое выражение, содержащее имя реквизита, как оно задано в конфигураторе."
    },
    {"Item","AST","ЭтоГруппа","IsGroup",
"ЭтоГруппа()",
"IsGroup()",
"@Синтаксис:
ЭтоГруппа()
@Назначение:
Возвращает флаг группы: 1 - если элемент является группой, 0 - если это обычный элемент."
    },
    {"Item","AST","ПринадлежитГруппе","BelongsToGroup",
"ПринадлежитГруппе(<?>)",
"BelongsToGroup(<?>)",
"@Синтаксис:
ПринадлежитГруппе(<Группа>)
@Назначение:
Метод проверяет, принадлежит ли указанной группе текущий элемент справочника (независимо от того, на каком нижележащем уровне он находится).
Возвращает: 1 - если элемент принадлежит указанной группе , 0 - если нет.
@Параметры: 
<Группа> - выражение со значением группы справочника ."
    },
    {"Item","AST","Выбран","Selected",
"Выбран()",
"Selected()",
"@Синтаксис:
Выбран()
@Назначение:
Возвращает  флаг выбора элемента справочника: 1 - если элемент справочника выбран, 0 - если не выбран."
    },
    {"Item","AST","Выбрать","Choose",
"Выбрать(<?>,)",
"Choose(<?>,)",
"@Синтаксис:
Выбрать(<Подсказка>,<ФормаСписка>)
@Назначение:
Вызов диалога для выбора элемента справочника.
Возвращает: 1 - если элемент выбран; 0 - если не выбран.
@Параметры: 
<Подсказка> - текст заголовка окна диалога ввода;
<ФормаСписка> - строка, содержащая идентификатор формы списка справочника, используемой для выбора.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ВидыДляВыбора","KindsForChoice",
"ВидыДляВыбора(<?>)",
"KindsForChoice(<?>)",
"@Синтаксис:
ВидыДляВыбора(<СписокВидов>)
@Назначение:
Установка выбираемых видов для справочника неопределенного вида.
Возвращает:
Строковое значение, содержащее текущий список видов выбираемых справочников, разделенных запятыми (на момент до исполнения метода).
@Параметры: 
<СписокВидов> - строка, содержащая список видов выбираемых справочников, разделенных запятыми.
@Замечание:
Метод  можно использовать только для объектов-справочников неопределенного вида, созданных функцией СоздатьОбъект, либо определенных в конфигураторе как реквизит диалога или реквизит другого объекта."
    },
    {"Item","AST","ВыборГруппы","SelectGroup",
"ВыборГруппы(<?>)",
"SelectGroup(<?>)",
"@Синтаксис:
ВыборГруппы(<Режим>)
@Назначение:
Установить режим выборки групп при интерактивном выборе элемента справочника.
Возвращает:
Текущее числовое значение режима выборки групп (на момент до исполнения метода) при интерактивном выборе элемента справочника.
@Параметры: 
<Режим> - режим выборки групп:
  1 - выбирать группы; 0 - не выбирать группы (необязателен, по умолчанию - 1).
@Замечание:
Метод можно применять как объектов, созданных функцией СоздатьОбъект (интерактивный выбор осуществляется методом Выбрать), так и в диалогах для полей типа справочник.
По умолчанию, выборка элементов справочников для полей диалога в формах документов, журналов и справочников установлена без выбора групп, а в форме отчета - с выбором групп."
    },
    {"Item","AST","ТекущийЭлемент","CurrentItem",
"ТекущийЭлемент()",
"CurrentItem()",
"@Синтаксис:
ТекущийЭлемент()
@Назначение:
Возвращает значение позиционированного текущего элемента справочника."
    },
    {"Item","AST","ПолныйКод","FullCode",
"ПолныйКод()",
"FullCode()",
"@Синтаксис:
ПолныйКод()
@Назначение:
Возвращает строку, содержащую полный код выбранного элемента справочника со всеми вышестоящими уровнями, разделенными символом /."
    },
    {"Item","AST","ПолноеНаименование","FullDescr",
"ПолноеНаименование()",
"FullDescr()",
"@Синтаксис:
ПолноеНаименование()
@Назначение:
Возвращает строку, содержащую полное наименование выбранного элемента справочника со всеми вышестоящими уровнями, разделенными символом /."
    },
    {"Item","AST","НайтиЭлемент","FindItem",
"НайтиЭлемент(<?>)",
"FindItem(<?>)",
"@Синтаксис:
НайтиЭлемент(<Элемент>)
@Назначение:
Найти элемент справочника по значению.
Возвращает: 1 - если действие выполнено;
 0 - если действие не выполнено (элемент не найден).
@Параметры: 
<Элемент> - выражение со значением элемента справочника.
@Замечание:
Метод выполняет поиск элемента справочника и позиционирует объект на этом элементе.
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","НайтиПоКоду","FindByCode",
"НайтиПоКоду(<?>,);",
"FindByCode(<?>,);",
"@Синтаксис:
НайтиПоКоду(<Код>,<ФлагПоиска>)
@Назначение:
Найти элемент справочника по коду.
Возвращает: 1 - если действие выполнено;
 0 - если действие не выполнено (элемент не найден).
@Параметры: 
<Код> - выражение со значением искомого кода,
<ФлагПоиска> - флаг поиска (необязателен):
  0 - поиск во всем справочнике вне зависимости от родителя;
  1 - поиск внутри установленного подчинения (родителя); 
  2 - поиск по полному коду через разделитель.
Значение по умолчанию: 
  0 - если код уникален во всем справочнике; 
  2 - если код уникален только в группе.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","НайтиПоНаименованию","FindByDescr",
"НайтиПоНаименованию(<?>,,);",
"FindByDescr(<?>,,);",
"@Синтаксис:
НайтиПоНаименованию(<Наименование>,<Режим>,<ФлагПоиска>)
@Назначение:
Найти элемент справочника по наименованию.
Возвращает: 1 - если действие выполнено;
 0 - если действие не выполнено (элемент не найден).
@Параметры: 
<Наименование> - строка с наименованием искомого элемента справочника,
<Режим> - необязательный параметр. Число: 1 - поиск внутри установленного подчинения (родителя); 0 - поиск во всем справочнике вне зависимости от родителя. Значение по умолчанию - 1.
<ФлагПоиска> - необязательный параметр. Число: 1 - найти точное соответствие наименования; 0 - найти наименование по первым символам. Значение по умолчанию - 0.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","НайтиПоРеквизиту","FindByAttribute",
"НайтиПоРеквизиту(<?>,,);",
"FindByAttribute(<?>,,);",
"@Синтаксис:
НайтиПоРеквизиту(<ИмяРеквизита>,<Значение>,<ФлагГлобальногоПоиска>)
@Назначение:
Найти элемент справочника по значению реквизита.
Возвращает: 1 - если действие выполнено;
 0 - если действие не выполнено (элемент не найден).
@Параметры: 
<ИмяРеквизита> - строка с наименованием реквизита;
<Значение> - значение реквизита для поиска;
<ФлагГлобальногоПоиска> - флаг поиска:
  0 - поиск выполняется в пределах подчинения справочника,
  1 - поиск выполняется по всему справочнику.
@Замечание:
Метод можно использовать только для реквизитов с установленным признаком ''Сортировка''.
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ВыбратьЭлементы","SelectItems",
"ВыбратьЭлементы(<?>)",
"SelectItems(<?>)",
"@Синтаксис:
ВыбратьЭлементы(<Режим>)
@Назначение:
Открыть выборку элементов справочника.
Возвращает: 1 - если действие выполнено и в выборке есть хотя бы один элемент;
0 - если действие не выполнено или в выборке нет ни одного элемента.
@Параметры: 
<Режим> - как выбирать:
1 - выбирать элементы с учетом иерархии,
0 - выбирать элементы без учета иерархии (необязателен, по умолчанию - 1).
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ВыбратьЭлементыПоРеквизиту","SelectItemsByAttribute",
"ВыбратьЭлементыПоРеквизиту(<?>,,,)",
"SelectItemsByAttribute(<?>,,,)",
"@Синтаксис:
ВыбратьЭлементыПоРеквизиту(<ИмяРеквизита>,<Значение>,<РежимИерархии>,<РежимГрупп>)
@Назначение:
Открыть выборку элементов справочника по значению реквизита.
Возвращает: 1 - если действие выполнено и в выборке есть хотя бы один элемент;
0 - если действие не выполнено или в выборке нет ни одного элемента.
@Параметры: 
<ИмяРеквизита> - строка с именем реквизита, по которому выполняется выборка;
<Значение> - значение реквизита для выборки;
<РежимИерархии> - как выбирать:
1 - выбирать элементы с учетом иерархии,
0 - выбирать элементы без учета иерархии (необязателен, по умолчанию - 1);
<РежимГрупп> - что выбирать:
1 - выбирать среди групп справочника,
0 - выбирать только среди элементов справочника.
@Замечание:
Метод можно использовать только для реквизитов с установленным признаком ''Сортировка''.
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ОбратныйПорядок","BackwardOrder",
"ОбратныйПорядок(<?>)",
"BackwardOrder(<?>)",
"@Синтаксис:
ОбратныйПорядок(<Режим>)
@Назначение:
Установить порядок выборки элементов справочника.
Возвращает: текущее значение порядка выборки элементов справочника (на момент до исполнения метода): 1 - обратный порядок выборки элементов справочника; 0 - выборка элементов справочника в прямом порядке.
@Параметры: 
<Режим> - необязательный параметр. Число: 1 - выбирать элементы справочника в обратном порядке; 0 - выбирать элементы справочника в прямом порядке. Если параметр опущен, то метод просто возвращает текущее значение порядка выборки элементов справочника.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ПолучитьЭлемент","GetItem",
"ПолучитьЭлемент(<?>)",
"GetItem(<?>)",
"@Синтаксис:
ПолучитьЭлемент(<Режим>)
@Назначение:
Получить из выборки следующий элемент справочника.
Возвращает: 1 - если элемент выбран, 0 - если элемент не выбран.
@Параметры: 
<Режим> - что выбирать:
1 - включать в выборку подчиненные элементы,
0 - не включать в выборку подчиненные элементы (необязателен, по умолчанию - 1).
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ИспользоватьДату","UseDate",
"ИспользоватьДату(<?>,);",
"UseDate(<?>,);",
"@Синтаксис:
ИспользоватьДату(<Дата>,<УстСразу>)
@Назначение:
Установить дату выборки периодических реквизитов справочника.
Возвращает:
Текущее значение используемой даты (на момент до исполнения метода).
@Параметры: 
<Дата> - значение типа дата.
<УстСразу> - необязательный параметр. Число: если 1, то дата, переданная в качестве параметра, будет установлена уже в текущей выборке; если 0 - то дата, переданная в качестве параметра, будет установлена при следующем открытии выборки. Значение по  умолчанию - 0. .
@Замечание:
Если к объекту применен метод ИспользоватьДату, то нельзя применять к этому же объекту метод Получить.
Метод нельзя использовать через две точки."
    },
    {"Item","AST","ИспользоватьВладельца","UseOwner",
"ИспользоватьВладельца(<?>,);",
"UseOwner(<?>,);",
"@Синтаксис:
ИспользоватьВладельца(<Владелец>,<ФлагИзменения>)
@Назначение:
Установить выборку по элементу связанного справочника. Возвращает значение текущего владельца для справочника (на момент до исполнения метода).
@Параметры: 
<Владелец> - значение элемента связанного справочника, которому подчинен данный справочник.
<ФлагИзменения> - этот параметр используется только в случае использования данного метода для объектов типа ''справочник'', которые являются реквизитами формы или реквизитами диалога! Необязательный параметр.  Этим флагом регулируется возможность интерактивного изменения владельца. Число: 1 - пользователь может изменить владельца интерактивно, 0 - пользователь не может интерактивно изменить владельца. Значение по умолчанию: 1.
@Замечание:
Метод  можно использовать для объектов, созданных функцией СоздатьОбъект(), а также для реквизитов формы типа ''справочник'' (например, в форме документа - реквизит документа типа ''справочник'') или реквизитами диалога (например, в форме отчета - реквизит диалога типа ''справочник''). 
ВНИМАНИЕ! в этих случаях метод имеет только один параметр!"
    },
    {"Item","AST","ИспользоватьРодителя","UseParent",
"ИспользоватьРодителя(<?>,);",
"UseParent(<?>,);",
"@Синтаксис:
ИспользоватьРодителя(<Родитель>,<ФлагИзменения>)
@Назначение:
Установить выборку  элементов по группе справочника.
Возвращает: значение текущей группы для справочника (на момент до исполнения метода).
@Параметры: 
<Родитель> - значение группы справочника, среди элементов которой делается выборка.
<ФлагИзменения> - необязательный параметр. Этим флагом регулируется возможность интерактивного изменения родителя. 1 - пользователь может изменить родителя интерактивно, 0 - пользователь не может интерактивно изменить родителя. Значение по умолчанию: 1. Данный параметр действует при интерактивном выборе элемента справочника - в случае, когда метод применен для элементов диалога типа ''Справочник''. Если метод применен для объекта, созданного функцией СоздатьОбъект, то данный параметр срабатывает при вызове метода Выбрать.
@Замечание:
Метод  можно использовать для объектов, созданных функцией СоздатьОбъект или для элементов диалога типа ''Справочник''."
    },
    {"Item","AST","ВключатьПодчиненные","IncludeChildren",
"ВключатьПодчиненные(<?>);",
"IncludeChildren(<?>);",
"@Синтаксис:
ВключатьПодчиненные(<Число>)
@Назначение:
Установить флаг выборки всех подчиненных элементов.
Возвращает:
Текущее числовое значение режима выборки подчиненных элементов справочника (на момент до исполнения метода).
@Параметры: 
<Число> - что выбирать:
1 - включать в выборку подчиненные элементы,
0 - не включать в выборку подчиненные элементы (необязателен, по умолчанию - 1).
@Замечание:
По умолчанию в выборку всегда включаются подчиненные элементы.
Метод должен вызываться раньше метода ВыбратьЭлементы.
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ПорядокКодов","OrderByCode",
"ПорядокКодов();",
"OrderByCode();",
"@Синтаксис:
ПорядокКодов()
@Назначение:
Установить порядок выборки элементов справочника по возрастанию кода.
@Замечание:
Метод вызывается до вызова метода ВыбратьЭлементы.
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ПорядокНаименований","OrderByDescr",
"ПорядокНаименований();",
"OrderByDescr();",
"@Синтаксис:
ПорядокНаименований()
@Назначение:
Установить порядок выборки элементов справочника по возрастанию наименования.
@Замечание:
Метод вызывается до вызова метода ВыбратьЭлементы.
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ПорядокРеквизита","OrderByAttribute",
"ПорядокРеквизита(<?>);",
"OrderByAttribute(<?>);",
"@Синтаксис:
ПорядокРеквизита(<ИмяРеквизита>)
@Назначение:
Установить порядок выборки элементов справочника по возрастанию значения реквизита.
@Параметры:
<ИмяРеквизита> - строка с именем реквизита, по возрастанию значений которого выполняется выборка.
@Замечание:
Метод может использоваться только для реквизита с установленным признаком Сортировка.
Метод вызывается до вызова метода ВыбратьЭлементы.
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект.
Подробнее см. в документации, глава 'Работа со Справочниками'"
    },
    {"Item","AST","Новый","New",
"Новый();",
"New();",
"@Синтаксис:
Новый()
@Назначение:
Добавить новый элемент справочника.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","НоваяГруппа","NewGroup",
"НоваяГруппа();",
"NewGroup();",
"@Синтаксис:
НоваяГруппа()
@Назначение:
Добавить новую группу справочника.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ПрефиксКода","CodePrefix",
"ПрефиксКода(<?>)",
"CodePrefix(<?>)",
"@Синтаксис:
ПрефиксКода(<Префикс>)
@Назначение:
Установить текущий префикс кода для справочника.
Возвращает:
Строковое значение текущего префикса кодов элементов справочника (на момент до исполнения метода).
@Параметры:
<Префикс> - строка с новым префиксом кодов элементов справочника."
    },
    {"Item","AST","УстановитьНовыйКод","SetNewCode",
"УстановитьНовыйКод(<?>);",
"SetNewCode(<?>);",
"@Синтаксис:
УстановитьНовыйКод(<Префикс>)
@Назначение:
Установить новый код элемента справочника с заданным префиксом.
@Параметры:
<Префикс> - строка с префиксом кода элемента справочника."
    },
    {"Item","AST","НазначитьТип","SetType",
"НазначитьТип(<?>,,,);",
"SetType(<?>,,,);",
"@Синтаксис:
НазначитьТип(<ИмяРеквизита>,<ИмяТипа>,<Длина>,<Точность>)
@Назначение:
Назначить тип для реквизита неопределенного типа.
@Параметры: 
<ИмяРеквизита> - строка с наименованием реквизита неопределенного типа, как он назван в конфигураторе.
<ИмяТипа> - строковое выражение - название типа данных (или Вид субконто), который назначается реквизиту. Например, ''Строка'', ''Число'', ''Справоч-ник.Товары'', ''Документ.РасходнаяНакладная'' и т.п.
<Длина> - необязательный параметр. Число - длина поля представления данных. Имеет смысл только при задании числового или строкового типа.
<Точность> - необязательный параметр. Число знаков после десятичной точки. Имеет смысл только при задании числового типа."
    },
    {"Item","AST","Записать","Write",
"Записать();",
"Write();",
"@Синтаксис:
Записать()
@Назначение:
Записать (обновить) элемент справочника.
@Замечание:
Если этот метод применяется в Модуле формы элемента справочника непосредственно к элементу справочника локального контекста, то данный метод отрабатывает те же действия, что и интерактивное нажатие пользователем кнопки с формулой ''#Записать''."
    },
    {"Item","AST","Удалить","Delete",
"Удалить(<?>);",
"Delete(<?>);",
"@Синтаксис:
Удалить(<Режим>)
@Назначение:
Удалить элемент справочника.
@Параметры: 
<Режим> - : 1 - непосредственное удаление, 0 - пометка на удаление (необязателен, по умолчанию - 1).
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","Блокировка","Locking",
"Блокировка(<?>);",
"Locking(<?>);",
"@Синтаксис:
Блокировка(<ВклВыкл>)
@Назначение:
Установить/прочитать режим блокировки. Если при вызове метода параметр <ВклВыкл> не задан, то возвращается режим блокировки до выполнения метода. Число: 1 - заблокирован; 0 - свободен. Если при вызове метода параметр <ВклВыкл> задан, то возвращается результат выполнения метода блокировки. Число: 1 - успешно; 0 - не получилось.
@Параметры:
<ВклВыкл> - необязательный параметр. Число: 1 - включить; 0 - выключить."
    },
    {"Item","AST","СнятьПометкуУдаления","ClearDeleteMark",
"СнятьПометкуУдаления();",
"ClearDeleteMark();",
"@Синтаксис:
СнятьПометкуУдаления()
@Назначение:
Снять пометку удаления элемента справочника.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ПометкаУдаления","DeleteMark",
"ПометкаУдаления()",
"DeleteMark()",
"@Синтаксис:
ПометкаУдаления()
@Назначение:
Прочитать флаг пометки удаления элемента справочника.
Возвращает: 1 - если на элементе справочника стоит пометка удаления; 0 - иначе.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    },
 {"Folder","AST","Модуль формы списка","",
 {"Folder","AST","Методы","",
    {"Item","AST","ИспользоватьДату","UseDate",
"ИспользоватьДату(<?>);",
"UseDate(<?>);",
"@Синтаксис:
ИспользоватьДату(<Дата>)
@Назначение:
Установить дату выборки периодических реквизитов формы списка справочника.
@Параметры: 
<Дата> - значение типа дата.
@Замечание:
Метод доступен только в контексте Модуля формы списка справочника и относится только к текущему справочнику."
    },
    {"Item","AST","ИспользоватьРодителя","UseParent",
"ИспользоватьРодителя(<?>,);",
"UseParent(<?>,);",
"@Синтаксис:
ИспользоватьРодителя(<Родитель>,<ФлагИзменения>)
@Назначение:
Установить родителя для формы списка справочника.
Возвращает: значение текущего родителя для формы списка справочника (до применения метода).
@Параметры: 
<Родитель> - значение группы справочника.
<ФлагИзменения> - необязательный параметр. Этим флагом регулируется возможность интерактивного изменения родителя. 1 - пользователь может изменить родителя интерактивно, 0 - пользователь не может интерактивно изменить родителя. Значение по умолчанию: 1.
@Замечание:
Данный метод доступен в контексте Модуля формы списка справочника. Действие данного метода относится ко всему текущему подчиненному справочнику, который доступен в локальном контексте Модуля формы списка справочника. При добавлении нового элемента текущего справочника данный параметр также будет являться свойством нового элемента."
    },
    {"Item","AST","ИспользоватьВладельца","UseOwner",
"ИспользоватьВладельца(<?>,);",
"UseOwner(<?>,);",
"@Синтаксис:
ИспользоватьВладельца(<Владелец>,<ФлагИзменения>)
@Назначение:
Установить владельца для формы списка подчиненного справочника. Возвращает значение текущего владельца для справочника (на момент до исполнения метода).
@Параметры: 
<Владелец> - значение элемента связанного справочника, которому подчинен данный справочник.
<ФлагИзменения> - необязательный параметр. Этим флагом регулируется возможность интерактивного изменения владельца. 1 - пользователь может изменить владельца интерактивно, 0 - пользователь не может интерактивно изменить владельца. Значение по умолчанию: 1.
@Замечание:
Данный метод доступен в контексте Модуля формы списка справочника. Действие данного метода относится ко всему текущему подчиненному справочнику, который доступен в локальном контексте Модуля формы списка справочника. При добавлении нового элемента текущего справочника данный параметр также будет являться свойством нового элемента."
    },
    {"Item","AST","ИерархическийСписок","HierarchicalList",
"ИерархическийСписок(<?>,)",
"HierarchicalList(<?>,)",
"@Синтаксис:
ИерархическийСписок(<ФлагИерархСписка>,<ФлагИзменения>)
@Назначение:
Установить режим иерархического списка справочника.
Возвращает: значение текущего флага иерархического списка для формы списка справочника (до применения метода).
@Параметры: 
<ФлагИерархСписка> - флаг иерархического списка. 1 - иерархический список; 0 - неиерархический список.
<ФлагИзменения> - необязательный параметр. Этим флагом регулируется возможность интерактивного изменения флага иерархического списка. 1 - пользователь может изменить иерархичность интерактивно, 0 - пользователь не может интерактивно изменить иерархичность. 
@Замечание:
Данный метод доступен в контексте Модуля формы списка справочника. Действие данного метода относится ко всему текущему подчиненному справочнику, который доступен в локальном контексте Модуля формы списка справочника."
    },
    {"Item","AST","РедактироватьВДиалоге","EditInForm",
"РедактироватьВДиалоге(<?>,);",
"EditInForm(<?>,);",
"@Синтаксис:
РедактироватьВДиалоге(<Способ>,<Разрешение>)
@Назначение:
Установить способ редактирования элементов справочника. Возвращает значение установленного на данный момент способа редактирования элементов справочника (до применения метода).
@Параметры: 
<Способ> - необязательный параметр. Способ редактирования элемента справочника: 1 - в диалоге; 0 - в строке.
<Разрешение> - необязательный параметр. Флаг разрешения пользователю менять способ редактирования: 1 - разрешить; 0 - запретить. 
@Замечание:
Метод доступен только в контексте Модуля формы списка справочника и относится ко всему текущему справочнику."
    },
    {"Item","AST","СохранениеПериодическихРеквизитов","PeriodicAttributesSaving",
"СохранениеПериодическихРеквизитов(<?>,);",
"PeriodicAttributesSaving(<?>,);",
"@Синтаксис:
СохранениеПериодическихРеквизитов(<ВариантВызова>,<Список>)
@Назначение:
Установить режим отображения диалога сохранения периодических реквизитов при записи элемента справочника.
@Параметры: 
<ВариантВызова> - вариант вызова метода.  Число:
 0 - отключить автоматический режим определения списка измененных реквизитов и показ диалога (параметр <Список> не используется);
 1 - включить автоматический режим определения списка измененных реквизитов с показом диалога (параметр <Список> определяет набор анализируемых реквизитов);
 2 - включить автоматический режим определения списка измененных реквизитов без показа диалога (параметр <Список> определяет набор анализируемых реквизитов);
 3 - выполнить определение списка измененных реквизитов с показом диалога (параметр <Список> определяет набор анализируемых реквизитов);
 4 - выполнить определение списка измененных реквизитов без показа диалога (параметр <Список> определяет набор анализируемых реквизитов);
 5 - выдать/установить список сохраняемых периодических реквизитов. Метод возвращает установленный список периодических реквизитов, которые будут записываться на момент до вызова метода. Если параметр <Список> указан, то устанавливается список периодических реквизитов, которые должны быть записаны.
<Список> - необязательный параметр. Строковое выражение, в котором через запятую перечислены имена периодических реквизитов справочника. Если указан символ ''*'', то считается, что в список включены все периодические реквизиты справочника.
Возращает: строку, представляющую собой список разделенных запятыми идентификаторв периодических реквизитов:
для варианта 5 - список сохраняемых периодических ревизитов по состоянию на момент до вызова метода;
для вариантов 1...4 - список сохраняемых периодических ревизитов, изменение которых будет определяться (если такой список установлен при вызове метода).
@Замечание:
Метод доступен в контексте Модуля формы списка справочника. Действие данного метода относится ко всему списку справочника, который доступен в локальном контексте Модуля формы списка справочника."
    },
    {"Item","AST","Сортировка","SortOrder",
"Сортировка(<?>,);",
"SortOrder(<?>,);",
"@Синтаксис:
Сортировка(<Способ>,<Разрешение>)
@Назначение:
Установить способ сортировки элементов справочника. Возвращает текущее значение установленного на данный момент способа сортировки элементов справочника (до применения метода).
@Параметры: 
<Способ> - строка с именем устанавливаемой сортировки. Это может быть (в зависимости от языка по умолчанию) ''Код\Code''  ''Наименование\Description'' или имя реквизита, по которому устанавливается сортировка.
<Разрешение> - необязательный параметр. Флаг разрешения пользователю менять способ сортировки: 1 - разрешить; 0 - запретить. 
@Замечание:
Метод доступен только в контексте Модуля формы списка справочника и относится ко всему текущему справочнику."
    },
    {"Item","AST","УстановитьОтбор","SetSelection",
"УстановитьОтбор(<?>,);",
"SetSelection(<?>,);",
"@Синтаксис:
УстановитьОтбор(<ИмяОтбора>,<ЗначениеОтбора>)
@Назначение:
Установить отбор списка справочника.
@Параметры: 
<ИмяОтбора> - строка с именем реквизита справочника (по которому возможен отбор, т.е. взведен флажок ''Отбор по реквизиту'' в свойствах реквизита справочника), по которому установлен отбор. Если это значение пустое, то отбор отключается.
<ЗначениеОтбора> - необязательный параметр. Значение отбора.
@Замечание:
Метод доступен только в контексте Модуля формы списка справочника и относится ко всему текущему справочнику."
    },
    {"Item","AST","ПолучитьОтбор","GetSelection",
"ПолучитьОтбор(<?>,);",
"GetSelection(<?>,);",
"@Синтаксис:
ПолучитьОтбор(<ИмяОтбора>,<ЗначениеОтбора>)
@Назначение:
Возвратить текущее значение отбора списка справочника.
@Параметры: 
<ИмяОтбора> - имя переменной, куда вернется строковое значение имени отбора.
<ЗначениеОтбора> - имя переменной, куда вернется значение отбора.
@Замечание:
Метод доступен только в контексте Модуля формы списка справочника и относится ко всему текущему справочнику."
    },
    {"Item","AST","ВидыОтбора","KindsOfSelection",
"ВидыОтбора(<?>)",
"KindsOfSelection(<?>)",
"@Синтаксис:
ВидыОтбора(<СписокИменОтборов>)
@Назначение:
Установить доступные виды отборов списка справочника для вызова их в интерактивном режиме.
Возвращает:
Строковое значение, содержащее текущий список имен отборов, разделенных запятыми (на момент до исполнения метода).
@Параметры: 
<СписокИменОтборов> - строка со списком  (через запятую) имен тех реквизитов, отбор по которым допускается, или ''*'' - для всех видов отборов.
@Замечание:
Метод доступен только в контексте Модуля формы списка справочника."
    },
    {"Item","AST","ЗакладкиОтбора","TabCtrlSelection",
"ЗакладкиОтбора(<?>,);",
"TabCtrlSelection(<?>,);",
"@Синтаксис:
ЗакладкиОтбора(<ИмяОтбора>,<ЗначениеОтбора>)
@Назначение:
Установить в форме списка справочника закладки для интерактивного осуществления отбора.
@Параметры: 
<ИмяОтбора - строка с именем отбора;
<ЗначениеОтбора> - значение отбора, который будет установлен первоначально.
@Замечание:
Метод доступен только в контексте Модуля списка справочника."
    },
    {"Item","AST","ИспользоватьСписокЭлементов","UseItemList",
"ИспользоватьСписокЭлементов(<?>);",
"UseItemList(<?>);",
"@Синтаксис:
ИспользоватьСписокЭлементов(<СписокЗначений>)
@Назначение:
Реализует фильтрацию элементов справочника, используя нединамический фильтр.
@Параметры: 
<СписокЗначений> - необязательный параметр. Значение типа - ''СписокЗначений'' - должен представлять собой список элементов справочника, выбранных для просмотра. Если это значение пустое, то фильтр отключается.
@Замечание:
Метод доступен только в контексте Модуля формы списка справочника и относится ко всему текущему справочнику."
    },
    {"Item","AST","ВыборГруппы","SelectGroup",
"ВыборГруппы(<?>)",
"SelectGroup(<?>)",
"@Синтаксис:
ВыборГруппы(<Режим>)
@Назначение:
Устанавливает режим выборки групп для формы списка справочника, которая открыта в режиме выбора или подбора элемента. Возвращает текущее числовое значение режима выборки групп (на момент до исполнения метода).
@Параметры: 
<Режим> - необязательный параметр. Число: 1 - выбирать группы; 0 - не выбирать группы.
@Замечание:
Метод доступен только в контексте Модуля формы списка справочника и относится только к текущему справочнику."
    },
    {"Item","AST","ПросмотрИстории","ViewHistory",
"ПросмотрИстории(<?>);",
"ViewHistory(<?>);",
"@Синтаксис:
ПросмотрИстории(<СписокРеквизитов>)
@Назначение:
Установить список периодических реквизитов, просмотр истории которых допускается. Возвращает - текущий (на момент до вызова метода) список реквизитов, просмотр истории которых допускается.
@Параметры: 
<СписокРеквизитов> - строка со списком идентификаторов (через запятую) тех реквизитов, просмотр истории которых допускается."
    },
    },
 {"Folder","AST","Предопределенные","",
    {"Item","AST","ПриОткрытии","OnOpen",
"Процедура ПриОткрытии()
КонецПроцедуры",
"Procedure OnOpen()
EndProcedure",
"@Синтаксис:
ПриОткрытии()
@Назначение:
Предопределенная процедура при интерактивном открытии формы.
@Замечание:
Данная процедура может располагаться только в программном модуле формы."
    },
    {"Item","AST","ПриЗакрытии","OnClose",
"Процедура ПриЗакрытии()
КонецПроцедуры",
"Procedure OnClose()
EndProcedure",
"@Синтаксис:
ПриЗакрытии()
@Назначение:
Предопределенная процедура при интерактивном закрытии формы.
@Замечание:
Данная процедура может располагаться только в программном модуле формы."
    },
    {"Item","AST","ПриЗаписи","OnWrite",
"Процедура ПриЗаписи(<?>)
КонецПроцедуры",
"Procedure OnWrite(<?>)
EndProcedure",
"@Синтаксис:
ПриЗаписи(<СписокПериодРекв>)
@Назначение:
Предопределенная процедура при интерактивной записи строки списка справочника.
@Параметры:
<СписокПериодРекв> - строка со списком изменяемых периодических реквизитов справочника.
@Замечание:
Данная процедура может располагаться только в программных модулях форм справочника."
    },
    {"Item","AST","ПриВводеСтроки","OnNewLine",
"Процедура ПриВводеСтроки()
КонецПроцедуры",
"Procedure OnNewLine()
EndProcedure",
"@Синтаксис:
ПриВводеСтроки()
@Назначение:
Предопределенная процедура при интерактивном вводе новой строки списка справочника.
@Замечание:
Данная процедура может располагаться только в модуле формы списка справочника."
    },
    {"Item","AST","ПриРедактированииНовойСтроки","OnEditNewLine",
"Процедура ПриРедактированииНовойСтроки()
КонецПроцедуры",
"Procedure OnEditNewLine()
EndProcedure",
"@Синтаксис:
ПриРедактированииНовойСтроки()
@Назначение:
Предопределенная процедура при интерактивном редактировании новой строки списка справочника.
@Замечание:
Данная процедура может располагаться только в модуле формы списка справочника."
    },
    {"Item","AST","ПриНачалеРедактированияСтроки","OnStartEditLine",
"Процедура ПриНачалеРедактированияСтроки()
КонецПроцедуры",
"Procedure OnStartEditLine()
EndProcedure",
"@Синтаксис:
ПриНачалеРедактированияСтроки()
@Назначение:
Предопределенная процедура при начале интерактивного редактирования существующей строки списка справочника.
@Замечание:
Данная процедура может располагаться только в модуле формы списка справочника."
    },
    {"Item","AST","ПриВыбореСтроки","OnSelectLine",
"Процедура ПриВыбореСтроки()
КонецПроцедуры",
"Procedure OnSelectLine()
EndProcedure",
"@Синтаксис:
ПриВыбореСтроки()
@Назначение:
Предопределенная процедура при выборе строки списка.
@Замечание:
Режим обработки выбора строки (двойной щелчок мыши или клавиша Enter) предопределенной процедурой ПриВыбореСтроки включается в форме списка справочника, журнала документов, счетов, журнала операций, журнала проводок при помощи метода Форма.ОбработкаВыбораСтроки(1). Данная процедура может располагаться только в программном модуле формы."
    },
    {"Item","AST","ПриПереносеЭлементаВДругуюГруппу","OnMoveIntoOtherGroup",
"Процедура ПриПереносеЭлементаВДругуюГруппу(<?>,)
КонецПроцедуры",
"Procedure OnMoveIntoOtherGroup(<?>,)
EndProcedure",
"@Синтаксис:
ПриПереносеЭлементаВДругуюГруппу(<Элемент>,<Группа>)
@Назначение:
Предопределенная процедура при интерактивном переносе элемента справочника в другую группу.
@Параметры:
<Элемент> - элемент справочника;
<Группа> - группа, в которую переносится элемент справочника.
@Замечание:
Данная процедура может располагаться только в модуле формы списка справочника."
    },
    {"Item","AST","ПриВыбореРодителя","OnSetParent",
"Процедура ПриВыбореРодителя(<?>)
КонецПроцедуры",
"Procedure OnSetParent(<?>)
EndProcedure",
"@Синтаксис:
ПриВыбореРодителя(<Элемент>)
@Назначение:
Предопределенная процедура при интерактивной смене родительской группы справочника (выбор следующего или предыдущего уровеня). 
@Параметры:
<Элемент> - значение элемента справочника, который интерактивно устанавливается в качестве родителя.
@Замечание:
Данная процедура может располагаться только в модуле формы списка справочника."
    },
    {"Item","AST","ПриВыбореВладельца","OnSetOwner",
"Процедура ПриВыбореВладельца(<?>)
КонецПроцедуры",
"Procedure OnSetOwner(<?>)
EndProcedure",
"@Синтаксис:
ПриВыбореВладельца(<Элемент>)
@Назначение:
Предопределенная процедура при интерактивном выборе владельца подчиненного справочника (при интерактивной смене владельца, т.е. смене позиции в справочнике-владельце, которая приводит к смене отображаемых в подчиненном справочнике элементов). 
@Параметры:
<Элемент> - значение элемента справочника, который интерактивно устанавливается в качестве владельца подчиненного справочника.
@Замечание:
Данная процедура может располагаться только в модуле формы списка справочника."
    },
    {"Item","AST","ПриСменеИерархии","OnHierarchyChange",
"Процедура ПриСменеИерархии(<?>)
КонецПроцедуры",
"Procedure OnHierarchyChange(<?>)
EndProcedure",
"@Синтаксис:
ПриСменеИерархии(<Способ>)
@Назначение:
Предопределенная процедура при интерактивной смене режима отображения иерархии справочника (пункт меню ''Иерархический список''). 
@Параметры:
<Способ> - значение устанавливаемого (тот, который пользователь хочет установить) способа просмотра справочника: 1 - иерархический список; 0 - все элементы сразу.
@Замечание:
Данная процедура может располагаться только в модуле формы списка справочника."
    },
    {"Item","AST","ПриУстановкеОтбора","OnSetSelection",
"Процедура ПриУстановкеОтбора(<?>,)
КонецПроцедуры",
"Procedure OnSetSelection(<?>,)
EndProcedure",
"@Синтаксис:
ПриУстановкеОтбора(<ТипОтбора>,<ЗначениеОтбора>)
@Назначение:
Предопределенная процедура при интерактивной установке отбора любым способом (отбор, быстрый отбор, отбор по значению, история отбора) и при отключении отбора. 
@Параметры:
<ТипОтбора> - строковое значение - тип устанавливаемого отбора (имя реквизита справочника, по которому устанавливается отбор).
<ЗначениеОтбора> - устанавливаемое значение отбора.
@Замечание:
Данная процедура может располагаться только в модуле формы списка справочника."
    },
    },
    },
 {"Folder","AST","Модуль формы","",
 {"Folder","AST","Методы","",
    {"Item","AST","Модифицированность","Modify",
"Модифицированность()",
"Modify()",
"@Синтаксис:
Модифицированность()
@Назначение:
Возвращает 1 - если реквизиты формы элемента справочника были изменены; 0 - иначе.
@Замечание:
Метод доступен только в контексте Модуля формы элемента справочника и относится только к текущему элементу справочника."
    },
    {"Item","AST","ИспользоватьДату","UseDate",
"ИспользоватьДату(<?>,);",
"UseDate(<?>,);",
"@Синтаксис:
ИспользоватьДату(<Дата>,<Обновить>)
@Назначение:
Установить дату, на которую будут записываться периодические реквизиты элемента справочника, форма которого открыта.
@Параметры: 
<Дата> - значение типа ''дата''. Дата, на которую будут записываться периодические реквизиты элемента справочника, форма которого открыта.
<Обновить> - необязательный параметр. Число: 1 - обновить периодические реквизиты формы на заданную дату; 0 - не обновлять периодические реквизиты формы. Значение по умолчанию - 0;
@Замечание:
Метод доступен только в контексте Модуля формы элемента справочника. Действие данного метода относится только к текущему элементу справочника, который доступен в локальном контексте Модуля формы элемента справочника."
    },
    {"Item","AST","СохранениеПериодическихРеквизитов","PeriodicAttributesSaving",
"СохранениеПериодическихРеквизитов(<?>,);",
"PeriodicAttributesSaving(<?>,);",
"@Синтаксис:
СохранениеПериодическихРеквизитов(<ВариантВызова>,<Список>)
@Назначение:
Установить режим отображения диалога сохранения периодических реквизитов при записи элемента справочника.
@Параметры: 
<ВариантВызова> - вариант вызова метода.  Число:
 0 - отключить автоматический режим определения списка измененных реквизитов и показ диалога (параметр <Список> не используется);
 1 - включить автоматический режим определения списка измененных реквизитов с показом диалога (параметр <Список> определяет набор анализируемых реквизитов);
 2 - включить автоматический режим определения списка измененных реквизитов без показа диалога (параметр <Список> определяет набор анализируемых реквизитов);
 3 - выполнить определение списка измененных реквизитов с показом диалога (параметр <Список> определяет набор анализируемых реквизитов);
 4 - выполнить определение списка измененных реквизитов без показа диалога (параметр <Список> определяет набор анализируемых реквизитов);
 5 - выдать/установить список сохраняемых периодических реквизитов. Метод возвращает установленный список периодических реквизитов, которые будут записываться на момент до вызова метода. Если параметр <Список> указан, то устанавливается список периодических реквизитов, которые должны быть записаны.
<Список> - необязательный параметр. Строковое выражение, в котором через запятую перечислены имена периодических реквизитов справочника. Если указан символ ''*'', то считается, что в список включены все периодические реквизиты справочника.
Возращает: строку, представляющую собой список разделенных запятыми идентификаторв периодических реквизитов:
для варианта 5 - список сохраняемых периодических ревизитов по состоянию на момент до вызова метода;
для вариантов 1...4 - список сохраняемых периодических ревизитов, изменение которых будет определяться (если такой список установлен при вызове метода).
@Замечание:
Метод доступен только в контексте Модуля формы элемента справочника. Действие данного метода относится только к текущему элементу справочника, который доступен в локальном контексте Модуля формы элемента справочника."
    },
    {"Item","AST","ПросмотрИстории","ViewHistory",
"ПросмотрИстории(<?>);",
"ViewHistory(<?>);",
"@Синтаксис:
ПросмотрИстории(<СписокРеквизитов>)
@Назначение:
Установить список периодических реквизитов, просмотр истории которых допускается. Возвращает - текущий (на момент до вызова метода) список реквизитов, просмотр истории которых допускается.
@Параметры: 
<СписокРеквизитов> - строка со списком идентификаторов (через запятую) тех реквизитов, просмотр истории которых допускается."
    },
    },
 {"Folder","AST","Предопределенные","",
    {"Item","AST","ВводНового","InputNew",
"Процедура ВводНового(<?>,)",
"Procedure InputNew((<?>,)",
"@Синтаксис:
ВводНового(<ПризнКопирования>,<ОбъектКопирования>)
@Назначение:
Предопределенная процедура при интерактивном вводе нового элемента справочника.
@Параметры:
<ПризнКопирования> - признак того, что объект введен копированием. Число: 1 - объект введен копированием, 0 - просто новый объект. Данный признак может быть использован для анализа необходимости инициализации реквизитов нового объекта.
<ОбъектКопирования> - объект, который был скопирован.
@Замечание:
Данная процедура может располагаться только в программных модулях форм справочника."
    },
    {"Item","AST","ПриЗаписи","OnWrite",
"Процедура ПриЗаписи(<?>)
КонецПроцедуры",
"Procedure OnWrite(<?>)
EndProcedure",
"@Синтаксис:
ПриЗаписи(<СписокПериодРекв>)
@Назначение:
Предопределенная процедура при интерактивной записи элемента справочника.
@Параметры:
<СписокПериодРекв> - строка со списком изменяемых периодических реквизитов справочника. В данный параметр система 1С:Предприятие передает перечень периодических реквизитов, которые были интерактивно выбраны пользователем для обновления в окне диалога выбора. В теле процедуры значение данного параметра может быть изменено, что позволяет в данной процедуре непосредственно управлять списком записываемых значений периодических реквизитов.
@Замечание:
Данная процедура может располагаться только в программных модулях форм справочника."
    },
    },
    },
 {"Folder","AST","Метод подбора","",
    {"Item","AST","ОткрытьПодбор","OpenPermanentChoice",
"ОткрытьПодбор(<?>,,,,);",
"OpenPermanentChoice(<?>,,,,);",
"@Синтаксис:
ОткрытьПодбор(<Объект>,<ИмяФормы>,<КонтекстФормы>,<ФлагМножВыбора>,<ТекЗнач>)
@Назначение:
Открыть Форму подбора значений.
@Параметры:
<Объект> - строка с именем объекта агрегатного типа для подбора. Можно указывать: ''Справочник.ХХХХХ'' или ''Документ.ХХХХХ'' или ''Журнал.ХХХХХ'' или ''Журнал.Подчиненные'' или ''ЖурналОпераций.ХХХХХ'', ''ПланСчетов.ХХХХХ'' (если ХХХХХ не задан, то открывается подбор из любого(всех) плана счетов) или ''Отчет.ХХХХХХ'' или ''Обработка.ХХХХХХ'', где ХХХХХ - имя вида соответствующего объекта, как он задан в конфигураторе.
<ИмяФормы> - строка с именем Формы подбора;
<КонтекстФормы> - необязательный параметр. Имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст формы подбора. С помощью значения этого контекста можно затем произвольно манипулировать формой подбора, пока она открыта. Пока форма открыта, тип значения данного параметра равен 100 (см. ТипЗначения), если закрыта - 0.
<ФлагМножВыбора> - число: 1 - выбор нескольких значений; 0 -  выбор одного значения, после чего окно закрывается;
<ТекЗнач> - необязательный параметр. В случае выбора из списка, здесь можно передать значение, на которое следует изначально установить курсор при открытии формы подбора.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы."
    },
    {"Item","AST","УстановитьЗначениеВПодборе","SetValueInPermanentChoice",
"УстановитьЗначениеВПодборе(<?>,);",
"SetValueInPermanentChoice(<?>,);",
"@Синтаксис:
УстановитьЗначениеВПодборе(<ИмяРеквизита>,<Значение>)
@Назначение:
Установить значение реквизита диалога подбора.
@Параметры:
<ИмяРеквизита> - строка с именем реквизита формы подбора значения;
<Значение> - значение реквизита.
@Замечание:
Метод следует использовать после вызова метода ОткрытьПодбор.
Доступ к методу возможен только в контексте Модуля формы."
    },
    {"Item","AST","ПолучитьЗначениеИзПодбора","GetValueFromPermanentChoice",
"ПолучитьЗначениеИзПодбора(<?>)",
"GetValueFromPermanentChoice(<?>)",
"@Синтаксис:
ПолучитьЗначениеИзПодбора(<Выражение>)
@Назначение:
Возвращает значение вычисленного в контексте формы подбора выражения.
@Параметры:
<Выражение> - строковое выражение, значение которого вычисляется в контексте формы подбора и возвращается в качестве результата.
@Замечание:
Метод следует использовать после вызова метода ОткрытьПодбор.
Доступ к методу возможен только в контексте Модуля формы."
    },
    {"Item","AST","ОбработкаПодбора","ProcessPermanentChoice",
"Процедура ОбработкаПодбора(<?>,)
КонецПроцедуры",
"Procedure ProcessPermanentChoice(<?>,)
EndProcedure",
"@Синтаксис:
ОбработкаПодбора(<Элемент>,<КонтФормы>)
@Назначение:
Предопределенная процедура обработки подбора значения при  нажатия кнопки Выбрать в Форме Подбора значения.
@Параметры:
<Элемент> - элемент справочника подбора или документ, передаваемый для обработки.
<КонтФормы> - контекст той формы, из которой шел подбор.
@Замечание:
Данная процедура может располагаться только в программном модуле формы."
    },
    {"Item","AST","Активизировать","Activate",
"Активизировать(<?>,);",
"Activate(<?>,);",
"@Синтаксис:
Активизировать(<ИмяРеквизита>,<Режим>)
@Назначение:
Высветить для редактирования поле диалога.
@Параметры:
<ИмяРеквизита> - строка с именем поля диалога, которое нужно активизировать;
<Режим> - число: 1 - войти в режим редактирования, 0 - не входить (необязателен, по умолчанию - 1, имеет смысл только для строк списков).
@Замечание:
Доступ к методу возможен только в контексте Модуля формы."
    },
    {"Item","AST","АктивизироватьОбъект","ActivateObj",
"АктивизироватьОбъект(<?>);",
"ActivateObj(<?>);",
"@Синтаксис:
АктивизироватьОбъект(<Объект>)
@Назначение:
Активизировать объект в форме списка.
@Параметры:
<Объект> - выражение, содержащее элемент справочника.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы."
    },
    },
    },
 {"Folder","AST","Перечисление","Enum",
 {"Folder","AST","Методы вида перечисления","",
    {"Item","AST","КоличествоЗначений","Count",
"КоличествоЗначений()",
"Count()",
"@Синтаксис:
КоличествоЗначений()
@Назначение:
Возвращает число значений в перечислении."
    },
    {"Item","AST","ЗначениеПоНомеру","ValueByIndex",
"ЗначениеПоНомеру(<?>)",
"ValueByIndex(<?>)",
"@Синтаксис:
ЗначениеПоНомеру(<Номер>)
@Назначение:
Возвращает значение перечисления по порядковому номеру в перечислении.
@Параметры:
<Номер> - порядковый номер значения в перечислении."
    },
    {"Item","AST","ЗначениеПоИдентификатору","ValueByIdentifier",
"ЗначениеПоИдентификатору(<?>)",
"ValueByIdentifier(<?>)",
"@Синтаксис:
ЗначениеПоИдентификатору(<Идентификатор>)
@Назначение:
Возвращает значение перечисления, соответствующее идентификатору в конфигураторе. Если не найдено - то пустое значение.
@Параметры:
<Идентификатор> - строковое выражение. Идентификатор значения перечисления, заданный в конфигураторе."
    },
    },
 {"Folder","AST","Методы значения перечисления","",
    {"Item","AST","Вид","Kind",
"Вид()",
"Kind()",
"@Синтаксис:
Вид()
@Назначение:
Возвращает строку с названием вида перечисления."
    },
    {"Item","AST","ПредставлениеВида","KindPresent",
"ПредставлениеВида();",
"KindPresent();",
"@Синтаксис:
ПредставлениеВида()
@Назначение:
Получить пользовательское представление вида перечисления, как он задан в конфигураторе.
Возвращает строковое значение, содержащее пользовательское представление вида перечисления."
    },
    {"Item","AST","Выбран","Selected",
"Выбран()",
"Selected()",
"@Синтаксис:
Выбран()
@Назначение:
Возвращает  флаг выбора элемента перечисления : 1 - если элемент перечисления выбран, 0 - если не выбран."
    },
    {"Item","AST","ПорядковыйНомер","Number",
"ПорядковыйНомер()",
"Number()",
"@Синтаксис:
ПорядковыйНомер()
@Назначение:
Возвращает порядковый номер значения в перечислении."
    },
    {"Item","AST","Идентификатор","Identifier",
"Идентификатор()",
"Identifier()",
"@Синтаксис:
Идентификатор()
@Назначение:
Возвращает строку - идентификатор значения перечисления."
    },
    },
 {"Folder","AST","Методы глобального атрибута ''Перечисление''","",
    {"Item","AST","ПолучитьАтрибут","GetAttrib",
"ПолучитьАтрибут(<?>);",
"GetAttrib(<?>);",
"@Синтаксис:
ПолучитьАтрибут(<ИмяВидаПеречисл>)
@Назначение:
Получить значение вида Перечисления по имени идентификатора. Возвращает значение вида Перечисления.
@Параметры:
<ИмяВидаПеречисл> - строковое выражение, содержащее имя перечисления, как оно задано в конфигураторе."
    },
    },
    },
 {"Folder","AST","Документ","Document",
 {"Folder","AST","Атрибуты","",
    {"Item","AST","НомерДок","DocNum",
"НомерДок",
"DocNum",
"@Синтаксис:
НомерДок
@Назначение:
Позволяет получать и устанавливать номер документа (в виде строки).
Подробнее см. в документации, глава 'Работа с Документами'"
    },
    {"Item","AST","ДатаДок","DocDate",
"ДатаДок",
"DocDate",
"@Синтаксис:
ДатаДок
@Назначение:
Позволяет получать и устанавливать дату документа."
    },
    {"Item","AST","<Реквизит>","<Attribute>",
"<Реквизит>",
"<Attribute>",
"@Синтаксис:
<Реквизит>
@Назначение:
Доступ к полю <Реквизит> текущего документа.
@Замечание:
Реквизиты многострочной части документа имеют смысл только при выбранной строке.
Подробнее см. в документации, глава 'Работа с Документами'"
    },
    {"Item","AST","НомерСтроки","LineNum",
"НомерСтроки",
"LineNum",
"@Синтаксис:
НомерСтроки
@Назначение:
Доступ к номеру строки многострочной части документа.
@Замечание:
Атрибут имеет смысл только при выбранной строке.
Подробнее см. в документации, глава 'Работа с Документами'"
    },
    {"Item","A","Операция","Operation",
"Операция",
"Operation",
"@Синтаксис:
Операция
@Назначение:
Доступ к бухгалтерской операции документа.
@Замечание:
Атрибут имеет смысл только для тех видов документов, для которых в конфигурации установлен признак ''Бухгалтерский учет''. Данный атрибут не используется как самостоятельное значение, а позволяет обращаться к атрибутам и методам операции.
Подробнее см. в документации, глава 'Работа с Документами'"
    },
    },
 {"Folder","AST","Методы","",
    {"Item","AST","Вид","Kind",
"Вид()",
"Kind()",
"@Синтаксис:
Вид()
@Назначение:
Возвращает строку с названием вида документа."
    },
    {"Item","AST","ПредставлениеВида","KindPresent",
"ПредставлениеВида();",
"KindPresent();",
"@Синтаксис:
ПредставлениеВида()
@Назначение:
Получить пользовательское представление вида документа, как он задан в конфигураторе.
Возвращает строковое значение, содержащее пользовательское представление вида документа."
    },
    {"Item","AST","УстановитьАтрибут","SetAttrib",
"УстановитьАтрибут(<?>,);",
"SetAttrib(<?>,);",
"@Синтаксис:
УстановитьАтрибут(<ИмяРеквизита>,<Значение>)
@Назначение:
Установить значение реквизита по имени идентификатора.
@Параметры:
<ИмяРеквизита> - строковое выражение, содержащее имя реквизита, как оно задано в конфигураторе.
<Значение> - выражение, содержащее устанавливаемое значение реквизита."
    },
    {"Item","AST","ПолучитьАтрибут","GetAttrib",
"ПолучитьАтрибут(<?>);",
"GetAttrib(<?>);",
"@Синтаксис:
ПолучитьАтрибут(<ИмяРеквизита>)
@Назначение:
Получить значение реквизита по имени идентификатора. Возвращает значение реквизита.
@Параметры:
<ИмяРеквизита> - строковое выражение, содержащее имя реквизита, как оно задано в конфигураторе."
    },
    {"Item","AST","Выбрать","Choose",
"Выбрать(<?>,,)",
"Choose(<?>,,)",
"@Синтаксис:
Выбрать(<Подсказка>,<ФормаЖурнала>,<КомуПодч>)
@Назначение:
Вызов диалога для выбора документа.
Возвращает: 1 - если документ выбран; 0 - если не выбран.
@Параметры:
<Подсказка> - текст заголовка окна диалога ввода;
<ФормаЖурнала> - строка, содержащая идентификатор формы журнала документа, используемой для выбора. Можно указывать  имя объекта в следующем виде: ''Журнал.ХХХХХ,YYYYY'', где ХХХХХ идентификатор журнала, как он задан в конфигураторе, YYYYY - имя формы журнала; ''Журнал.Подчиненные'';  ''ЖурналОпераций''; ''ЖурналОпераций.YYYYY'', где YYYYY - имя формы журнала операций, как оно задано в конфигураторе;
Для пустой строки используется форма журнала по умолчанию.
<КомуПодч> - необязательный параметр. Используется при открытии выбора по журналу подчиненных документов, т.е. когда второй параметр <ФормаЖурнала> имеет значение ''Журнал.Подчиненные''. В данном случае в этом параметре передается документ-владелец, по которому следует построить журнал подчиненных документов.
Для пустой строки используется форма журнала по умолчанию.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ВидыДляВыбора","KindsForChoice",
"ВидыДляВыбора(<?>)",
"KindsForChoice(<?>)",
"@Синтаксис:
ВидыДляВыбора(<СписокВидов>)
@Назначение:
Установка выбираемых видов для объекта типа документ неопределенного вида.
Возвращает:
Строковое значение, содержащее текущий список видов выбираемых документов, разделенных запятыми (на момент до исполнения метода).
@Параметры: 
<СписокВидов> - строка, содержащая список видов выбираемых документов, разделенных запятыми.
@Замечание:
Метод  можно использовать только для объектов типа документ неопределенного вида либо созданных функцией СоздатьОбъект, либо определенных в конфигураторе как реквизиты диалога или другого объекта."
    },
    {"Item","AST","Выбран","Selected",
"Выбран()",
"Selected()",
"@Синтаксис:
Выбран()
@Назначение:
Определение факта позиционирования объекта типа документ.
Возвращает: 1 - если документ выбран; 0 - если не выбран."
    },
    {"Item","AST","Проведен","IsTransacted",
"Проведен()",
"IsTransacted()",
"@Синтаксис:
Проведен()
@Назначение:
Определение факта проведения документа.
Возвращает: 1 - если документ проведен; 0 - если не проведен."
    },
    {"Item","AST","ТекущийДокумент","CurrentDocument",
"ТекущийДокумент()",
"CurrentDocument()",
"@Синтаксис:
ТекущийДокумент()
@Назначение:
Возвращает значение позиционированного текущего документа."
    },
    {"Item","AST","Итог","Total",
"Итог(<?>)",
"Total(<?>)",
"@Синтаксис:
Итог(<ИмяРеквизита>)
@Назначение:
Возвращает сумму значений реквизита по всем строкам табличной части документа.
@Параметры: 
<ИмяРеквизита> - имя реквизита табличной части документа.
@Замечание:
Метод  можно использовать только для реквизитов табличной части документов с установленным свойством 'Итог по колонке'."
    },
    {"Item","AST","КоличествоСтрок","LinesCnt",
"КоличествоСтрок()",
"LinesCnt()",
"@Синтаксис:
КоличествоСтрок()
@Назначение:
Возвращает число строк в многострочной части документа."
    },
    {"Item","AST","НайтиДокумент","FindDocument",
"НайтиДокумент(<?>)",
"FindDocument(<?>)",
"@Синтаксис:
НайтиДокумент(<Документ>)
@Назначение:
Найти документ по значению.
Возвращает: 1 - если действие выполнено (документ найден);
 0 - если действие не выполнено.
@Параметры: 
<Документ> - выражение со значением типа 'Документ'.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","НайтиПоНомеру","FindByNum",
"НайтиПоНомеру(<?>,,)",
"FindByNum(<?>,,)",
"@Синтаксис:
НайтиПоНомеру(<Номер>,<Дата>,<ИдентВида>)
@Назначение:
Найти документ по номеру. Может быть использован для объекта Документ общего вида, тогда для поиска нужно указать параметр <ИдентВида> .
Возвращает: 1 - если действие выполнено (документ найден);  0 - если действие не выполнено.
@Параметры: 
<Номер> - строка с номером искомого документа;
<Дата> - дата из диапазона, в котором нужно искать документ.
<ИдентВида> - необязательный параметр. Строковое выражение, содержащее идентификатор вида документа или идентификатор Нумератора.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ПолучитьСтрокуПоНомеру","GetLineByNum",
"ПолучитьСтрокуПоНомеру(<?>)",
"GetLineByNum(<?>)",
"@Синтаксис:
ПолучитьСтрокуПоНомеру(<Номер>)
@Назначение:
Устанавливает в качестве текущей строки строку с заданным номером.
Возвращает: 
 1 - если действие выполнено;
 0 - если действие не выполнено.
@Параметры: 
<Номер> - номер строки."
    },
    {"Item","AST","ВыбратьДокументы","SelectDocuments",
"ВыбратьДокументы(<?>,)",
"SelectDocuments(<?>,)",
"@Синтаксис:
ВыбратьДокументы(<Дата1>,<Дата2>)
@Назначение:
Открыть выборку документов в интервале дат.
Возвращает:
1 - если действие выполнено и в выборке есть хотя бы один документ;
0 - если действие не выполнено или в выборке нет ни одного документа.
@Параметры: 
<Дата1> - дата, документ или позиция начала выборки документов. Если данный параметр опущен, то выборка начинается с самого первого существующего в системе документа.
<Дата2> - дата, документ или позиция конца выборки документов. Если данный параметр опущен, то выборка заканчивается самым последним существующим в системе документом.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ВыбратьПодчиненныеДокументы","SelectChildDocs",
"ВыбратьПодчиненныеДокументы(<?>,,)",
"SelectChildDocs(<?>,,)",
"@Синтаксис:
ВыбратьПодчиненныеДокументы(<Дата1>,<Дата2>,<Докум>)
@Назначение:
Открыть выборку документов, подчиненных заданному, в интервале дат.
Возвращает:
1 - если действие выполнено и в выборке есть хотя бы один документ;
0 - если действие не выполнено или в выборке нет ни одного документа.
@Параметры: 
<Дата1> - дата, документ или позиция начала выборки документов. Если данный параметр опущен, то выборка начинается с самого первого существующего в системе документа.
<Дата2> - дата, документ или позиция конца выборки документов. Если данный параметр опущен, то выборка заканчивается самым последним существующим в системе документом.
<Докум> - документ, подчиненные которому будут включаться в выборку.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ВыбратьПоЗначению","SelectByValue",
"ВыбратьПоЗначению(<?>,,,)",
"SelectByValue(<?>,,,)",
"@Синтаксис:
ВыбратьПоЗначению(<Дата1>,<Дата2>,<ИмяОтбора>,<Знач>)
@Назначение:
Открыть выборку документов в интервале дат с заданным значением реквизита отбора.
Возвращает:
1 - если действие выполнено и в выборке есть хотя бы один документ;
0 - если действие не выполнено или в выборке нет ни одного документа.
@Параметры: 
<Дата1> - дата, документ или позиция начала выборки документов. Если данный параметр опущен, то выборка начинается с самого первого существующего в системе документа.
<Дата2> - дата, документ или позиция конца выборки документов. Если данный параметр опущен, то выборка заканчивается самым последним существующим в системе документом.
<ИмяОтбора> - строка с названием Общего реквизита документов либо названием Графы отбора журналов;
<Знач> - значение отбора, по которому строится выборка документов.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ВыбратьПоНомеру","SelectByNum",
"ВыбратьПоНомеру(<?>,,)",
"SelectByNum(<?>,,)",
"@Синтаксис:
ВыбратьПоНомеру(<Номер>,<Дата>,<ИдентВида>)
@Назначение:
Открыть выборку документов в интервале дат по номеру. Возвращает: 1 - если действие выполнено и в выборке есть хотя бы один документ; 0 - если действие не выполнено или в выборке нет ни одного документа.
@Параметры: 
<Номер> - строка, содержащая номер искомых документов.
<Дата> - любая дата из диапазона, в котором нужно искать документ с данным номером. Поиск зависит от выбранного в конфигураторе способа уникальности  номеров (по месяцу, году и др.).
<ИдентВида> - необязательный параметр. Строковое выражение, содержащее идентификатор вида документа или идентификатор Нумератора.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ВыбратьПоПоследовательности","SelectBySequence",
"ВыбратьПоПоследовательности(<?>,,)",
"SelectBySequence(<?>,,)",
"@Синтаксис:
ВыбратьПоПоследовательности(<Дата1>,<Дата2>,<КодПосл>)
@Назначение:
Открыть выборку документов в интервале дат по заданной последовательности. Возвращает: 1 - если действие выполнено и в выборке есть хотя бы один документ; 0 - если действие не выполнено или в выборке нет ни одного документа.
@Параметры: 
<Дата1> - необязательный параметр. Дата, документ или позиция начала выборки документов. Если данный параметр опущен, то выборка начинается с самого первого существующего в системе документа.
<Дата2> - необязательный параметр. Дата, документ или позиция конца выборки документов. Если данный параметр опущен, то выборка заканчивается самым последним существующим в системе документом.
<КодПосл> - строка с названием  используемой Последовательности.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ОбратныйПорядок","BackwardOrder",
"ОбратныйПорядок(<?>);",
"BackwardOrder(<?>);",
"@Синтаксис:
ОбратныйПорядок(<Режим>)
@Назначение:
Установить порядок выборки документов во времени.
Возвращает значение порядка выборки до вызова:   1 - выборка документов в порядке убывания даты и времени;  0 - в порядке возрастания.
@Параметры: 
<Режим> -  необязательный параметр. Число: 1 - выбирать документы в порядке убывания даты и времени;   0 - выбирать документы в порядке возрастания даты и времени. Если параметр опущен, то метод просто возвращает текущее значение порядка выборки документов.
@Замечание:
Метод можно использовать как процедуру и как функцию.
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","УстановитьФильтр","SetFilter",
"УстановитьФильтр(<?>,,,,);",
"SetFilter(<?>,,,,);",
"@Синтаксис:
УстановитьФильтр(<Проведенные>,<НеПроведенные>,<НеИмеющиеПризнаковУчета>,<Оперативные>,<Расчетные>,<Бухг>) 
@Назначение:
Назначить фильтр выборки документов.
@Параметры: 
<Проведенные> - число: 0 - не  включать в выборку проведенные документы; 1 - включать.
<НеПроведенные> -  число: 0 - не включать в выборку непроведенные документы; 1 - включать.
<НеИмеющиеПризнаковУчета> - число: 0 - не включать в выборку документы, не имеющие признаков учета; 1 - включать.
<Оперативные> - число: 0 - не включать в выборку оперативные документы; 1 - данный флаг не влияет на выборку; 2 - если оперативный документ, то включается в выборку.
<Расчетные> - число: 0 - не включать в выборку расчетные документы; 1 - данный флаг не влияет на выборку; 2 - если расчетный документ, то включается в выборку.
<Бухг> - число: 0 - не включать в выборку бухгалтерские документы; 1 - данный флаг не влияет на выборку; 2 - если бухгалтерский документ, то включается в выборку.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ПолучитьДокумент","GetDocument",
"ПолучитьДокумент()",
"GetDocument()",
"@Синтаксис:
ПолучитьДокумент()
@Назначение:
Получить из выборки следующий документ.
Возвращает: 1 - если документ выбран, 0 - иначе.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ВыбратьСтроки","SelectLines",
"ВыбратьСтроки()",
"SelectLines()",
"@Синтаксис:
ВыбратьСтроки()
@Назначение:
Открыть выборку строк многострочной части документа.
Возвращает:
1 - если действие выполнено и в выборке есть хотя бы одна строка;
0 - если действие не выполнено или в выборке нет ни одной строки."
    },
    {"Item","AST","ПолучитьСтроку","GetLine",
"ПолучитьСтроку()",
"GetLine()",
"@Синтаксис:
ПолучитьСтроку()
@Назначение:
Получить из выборки следующую строку табличной части документа.
Возвращает: 1 - если строка выбрана 0 - иначе."
    },
    {"Item","AST","Новый","New",
"Новый();",
"New();",
"@Синтаксис:
Новый()
@Назначение:
Начать ввод нового документа.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ПрефиксНомера","NumPrefix",
"ПрефиксНомера(<?>)",
"NumPrefix(<?>)",
"@Синтаксис:
ПрефиксНомера(<Префикс>)
@Назначение:
Установить новый префикс номера для документа.
Возвращает:
Строковое значение текущего префикса документа (на момент до исполнения метода).
@Параметры: 
<Префикс> - строка с новым префиксом номера документа.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","УстановитьНовыйНомер","SetNewNum",
"УстановитьНовыйНомер(<?>);",
"SetNewNum(<?>);",
"@Синтаксис:
УстановитьНовыйНомер(<Префикс>)
@Назначение:
Установить новый номер документа с заданным префиксом.
@Параметры: 
<Префикс> - строка с префиксом номера документа."
    },
    {"Item","AST","НазначитьТип","SetType",
"НазначитьТип(<?>,,,)",
"SetType(<?>,,,)",
"@Синтаксис:
НазначитьТип(<ИмяРеквизита>,<ИмяТипа>,<Длина>,<Точность>)
@Назначение:
Назначить тип для реквизита неопределенного типа.
@Параметры: 
<ИмяРеквизита> - строка с наименованием реквизита неопределенного типа, как он назван в конфигураторе.
<ИмяТипа> - строковое выражение - название типа данных (или Вид субконто), который назначается реквизиту. Например, ''Строка'', ''Число'', ''Справочник.Товары'', ''Документ.РасходнаяНакладная'' и т.п.
<Длина> - необязательный параметр. Число - длина поля представления данных. Имеет смысл только при задании числового или строкового типа.
<Точность> - необязательный параметр. Число знаков после десятичной точки. Имеет смысл только при задании числового типа."
    },
    {"Item","AST","Записать","Write",
"Записать();",
"Write();",
"@Синтаксис:
Записать()
@Назначение:
Записать документ в базу данных.
@Замечание:
Если этот метод применяется в Модуле формы документа непосредственно к документу локального контекста, то данный метод отрабатывает те же действия, как интерактивное нажатие пользователем кнопки с формулой ''#Записать''."
    },
    {"Item","AST","Удалить","Delete",
"Удалить(<?>);",
"Delete(<?>);",
"@Синтаксис:
Удалить(<Режим>)
@Назначение:
Удалить документ.
@Параметры: 
<Режим> -: 1 - непосредственное удаление, 0 - пометка на удаление (необязателен, по умолчанию - 1).
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","СнятьПометкуУдаления","ClearDeleteMark",
"СнятьПометкуУдаления();",
"ClearDeleteMark();",
"@Синтаксис:
СнятьПометкуУдаления()
@Назначение:
Снять пометку удаления документа.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ПометкаУдаления","DeleteMark",
"ПометкаУдаления()",
"DeleteMark()",
"@Синтаксис:
ПометкаУдаления()
@Назначение:
Возвращает флаг пометки удаления документа:
  1 - если на документе стоит пометка удаления,
  0 - если нет пометки удаления.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","НоваяСтрока","NewLine",
"НоваяСтрока();",
"NewLine();",
"@Синтаксис:
НоваяСтрока()
@Назначение:
Добавить новую строку в документ."
    },
    {"Item","AST","УдалитьСтроку","DeleteLine",
"УдалитьСтроку();",
"DeleteLine();",
"@Синтаксис:
УдалитьСтроку()
@Назначение:
Удалить текущую строку документа."
    },
    {"Item","AST","УдалитьСтроки","DeleteLines",
"УдалитьСтроки();",
"DeleteLines();",
"@Синтаксис:
УдалитьСтроки()
@Назначение:
Удаляет сразу все строки из многострочной части документа."
    },
    {"Item","AST","СортироватьСтроки","SortLines",
"СортироватьСтроки(<?>);",
"SortLines(<?>);",
"@Синтаксис:
СортироватьСтроки(<Колонки>)
@Назначение:
Сортировать многострочную часть документа по реквизитам.
@Параметры: 
<Колонки> - перечисленные через запятую реквизиты многострочной части документа, по которым следует сортировать. Знаки +,- ,* , предшествующие названию реквизита, указывают направление сортировки по реквизиту. ''+''    - сортировать по  возрастанию; ''- ''  - сортировать по убыванию; ''*'' - сортировать по внутреннему значению."
    },
    {"Item","AST","Блокировка","Locking",
"Блокировка(<?>);",
"Locking(<?>);",
"@Синтаксис:
Блокировка(<ВклВыкл>)
@Назначение:
Установить/прочитать режим блокировки. Если при вызове метода параметр <ВклВыкл> не задан, то возвращается режим блокировки до выполнения метода. Число: 1 - заблокирован; 0 - свободен. Если при вызове метода параметр <ВклВыкл> задан, то возвращается результат выполнения метода блокировки. Число: 1 - успешно; 0 - не получилось.
@Параметры:
<ВклВыкл> - необязательный параметр. Число: 1 - включить; 0 - выключить."
    },
    {"Item","AST","УстановитьВремя","SetTime",
"УстановитьВремя(<?>,,);",
"SetTime(<?>,,);",
"@Синтаксис:
УстановитьВремя(<Часы>,<Минуты>,<Секунды>)
@Назначение:
Установить время документа.
@Параметры: 
<Часы> - число часов;
<Минуты> - число минут;
<Секунды> - число секунд.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ПолучитьВремя","GetTime",
"ПолучитьВремя(<?>,,)",
"GetTime(<?>,,)",
"@Синтаксис:
ПолучитьВремя(<Часы>,<Минуты>,<Секунды>)
@Назначение:
Прочитать время документа. Возвращает время документа в переданные для этого переменные <Часы>, <Минуты>, <Секунды>.
Возвращает:
Строковое значение времени записи документа в виде 'ЧЧ.ММ.СС'.
@Параметры: 
<Часы> - переменная для приема часа записи документа;
<Минуты> - переменная для приема минут записи документа;
<Секунды> - переменная для приема секунд записи документа.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ПолучитьПозицию","GetPosition",
"ПолучитьПозицию();",
"GetPosition();",
"@Синтаксис:
ПолучитьПозицию()
@Назначение:
Получить позицию документа.
@Замечание:
Позиция может существовать только у записанного документа."
    },
    {"Item","AST","ПринадлежитПоследовательности","BelongToSequence",
"ПринадлежитПоследовательности(<?>,);",
"BelongToSequence(<?>,);",
"@Синтаксис:
ПринадлежитПоследовательности(<Последов>,<Значение>)
@Назначение:
Определить, принадлежит ли последовательности данный документ. Возвращает число: 1 - если документ принадлежит последовательности; 0 - если не принадлежит.
@Параметры: 
<Последов> - строковое выражение, определяющее Последовательность;
<Значение> - необязательный параметр. Число:
1 - документ принудительно устанавливается как принадлежащий последовательности; 0 - документ принудительно устанавливается как не принадлежащий последовательности.
Использование этого параметра разрешено только при проведении документа (в Модуле документа)."
    },
    {"Item","AST","ИспользоватьЖурнал","UseJournal",
"ИспользоватьЖурнал(<?>,);",
"UseJournal(<?>,);",
"@Синтаксис:
ИспользоватьЖурнал(<Журнал>,<ФлагОгрПросм>)
@Назначение:
Использовать журнал для отбора документов и доступа к графам.
@Параметры: 
<Журнал> - идентификатор журнала, который предполагается использовать для отбора документов и доступа к графам.
<ФлагОгрПросм> - необязательный параметр. Число: 1 - если выборка ограничивается документами, входящими в указанный журнал; 0 - если метод используется только для использования граф методом Графа. Значение по умолчанию 1."
    },
    {"Item","AST","Графа","Column",
"Графа(<?>);",
"Column(<?>);",
"@Синтаксис:
Графа(<Графа>)
@Назначение:
Возвращает для текущего документа значение заданной графы журнала. Данный метод работает только в том случае, если ранее применен метод ИспользоватьЖурнал.
@Параметры: 
<Графа> - идентификатор графы журнала, который ранее задан методом ИспользоватьЖурнал."
    },
    {"Item","AST","АвтоВремяНачалоДня","AutoTimeBegOfDay",
"АвтоВремяНачалоДня();",
"AutoTimeBegOfDay();",
"@Синтаксис:
АвтоВремяНачалоДня()
@Назначение:
Установить режим записи времени на начало дня для новых документов.
@Замечание:
Для новых документов в модуле формы доступно использование методов установки признака автоформирования времени документа и собственно установки времени. Если эти методы использованы, то диалог запроса времени не вызывается и игнорируются пользовательские установки в параметрах системы."
    },
    {"Item","AST","АвтоВремяКонецДня","AutoTimeEndOfDay",
"АвтоВремяКонецДня();",
"AutoTimeEndOfDay();",
"@Синтаксис:
АвтоВремяКонецДня()
@Назначение:
Установить режим записи времени на конец дня для новых документов.
@Замечание:
Для новых документов в модуле формы доступно использование методов установки признака автоформирования времени документа и собственно установки времени. Если эти методы использованы, то диалог запроса времени не вызывается и игнорируются пользовательские установки в параметрах системы."
    },
    {"Item","AST","АвтоВремяТекущее","AutoTimeCurrent",
"АвтоВремяТекущее();",
"AutoTimeCurrent();",
"@Синтаксис:
АвтоВремяТекущее()
@Назначение:
Установить режим записи времени на текущее время дня для новых документов.
@Замечание:
Для новых документов в модуле формы доступно использование методов установки признака автоформирования времени документа и собственно установки времени. Если эти методы использованы, то диалог запроса времени не вызывается и игнорируются пользовательские установки в параметрах системы."
    },
    {"Item","AST","АвтоВремяОтключить","AutoTimeOff",
"АвтоВремяОтключить();",
"AutoTimeOff();",
"@Синтаксис:
АвтоВремяОтключить()
@Назначение:
Отключить режим автоматической установки времени для новых документов, при этом новые документы заносятся с временем, устанавливаемым при помощи метода УстановитьВремя.
@Замечание:
Для новых документов в модуле формы доступно использование методов установки признака автоформирования времени документа и собственно установки времени. Если эти методы использованы, то диалог запроса времени не вызывается и игнорируются пользовательские установки в параметрах системы."
    },
    {"Item","T","АвтоВремяПослеТА","AutoTimeAfterAP",
"АвтоВремяПослеТА();",
"AutoTimeAfterAP();",
"@Синтаксис:
АвтоВремяПослеТА()
@Назначение:
Устанавливает режим, при котором, если совпадает дата документа с датой ТА, то новому документу автоматически записывается время после ТА. Для новых документов в модуле формы, если этот метод использован, то диалог запроса времени не вызывается и игнорируются пользовательские установки в параметрах системы."
    },
    {"Item","AST","Провести","MakeActions",
"Провести(<?>,);",
"MakeActions(<?>,);",
"@Синтаксис:
Провести(<Режим>,<Знач>)
@Назначение:
Выполнить проведение документа.
Возвращает: 1 - если проведение документа выполнено, 0 - иначе.
@Параметры: 
<Режим> - необязательный параметр. Число: 0 - проводить документ без сдвига ТА; 1 - проводить непроведенный документ реальным временем (со сдвигом ТА); 2 - перепроводить проведенный документ реальным временем (со сдвигом ТА); 3 - проводить любой (непроведенный, проведенный) документ реальным временем (со сдвигом ТА). Значение по умолчанию - 0.
<Знач> - выражение произвольного типа, которое передается при запуске предопределенной процедуры ОбработкаПроведения (необязателен, по умолчанию - пусто).
@Замечание:
Метод нельзя использовать в теле предопределенной процедуры ОбработкаПроведения.
Если этот метод применяется в Модуле формы документа непосредственно к документу локального контекста, то данный метод отрабатывает те же действия, как интерактивное нажатие пользователем кнопки с формулой ''#Провести''. В этом случае, если параметр <Режим> опущен, то документ проводится в режиме, соответствующем установкам системы меню Сервис-Параметры."
    },
    {"Item","AST","СделатьНеПроведенным","UnPost",
"СделатьНеПроведенным();",
"UnPost();",
"@Синтаксис:
СделатьНеПроведенным()
@Назначение:
Отменить проведение документа.
@Замечание:
Метод нельзя использовать в теле предопределенной процедуры ОбработкаПроведения.
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","T","СравнитьТА","CompareWithAP",
"СравнитьТА()",
"CompareWithAP()",
"@Синтаксис:
СравнитьТА()
@Назначение:
Сравнить дату и время документа с Точкой актуальности (ТА) итогов.
Возвращает:
-1, если дата и время документа меньше даты и времени ТА итогов;
0, если дата и время документа равны дате и времени ТА итогов; 
+1, если дата и время документа больше даты и времени ТА итогов.
-2 в случае, если новый документ, который сравнивается с ТА, еще не записан - то есть он еще не имеет никакой позиции на оси времени."
    },
    {"Item","A","СуществуетОперация","OperExist",
"СуществуетОперация(<?>)",
"OperExist(<?>)",
"@Синтаксис:
СуществуетОперация(<Признак>)
@Назначение:
Для конкретного вида документа (имеющего признак ''Бухгалтерский учет'') возможны режимы записи операции: ''Всегда'', ''Выборочно'' и ''Только при проведении''.
Функция применяется только в случае использования режима ''Выборочно''. Для режимов записи операции ''Всегда'' и ''Только при проведении'' данный метод смысла не имеет. Он устанавливает признак наличия операции у конкретного документа. Данная возможность позволяет записывать операцию для документов конкретного вида в зависимости от некоторых условий. 
Возвращает текущее значение признака:  1 - у документа существует операция; 0 - у документа не существует операции.
@Параметры: 
<Признак> - числовое выражение: 1- существует операция, 0 - не существует операции."
    },
    {"Item","AST","ВыгрузитьТабличнуюЧасть","UnloadTable",
"ВыгрузитьТабличнуюЧасть(<?>,);",
"UnloadTable(<?>,);",
"@Синтаксис:
ВыгрузитьТабличнуюЧасть(<ТаблЗнач>,<Колонки>)
@Назначение:
Выгрузить многострочную часть документа в таблицу значений.
@Параметры: 
<ТаблЗнач> - значение типа ''Таблица значений'' (или ''СписокЗначений'', если выгружается только одна колонка), куда выгружается многострочная часть документа. Колонки совмещаются по идентификаторам. 
<Колонки> - необязательный параметр. Список колонок через запятую. Данный параметр указывает, какие колонки выгружать; если не указано, то все. Для номера строки документа создается отдельная колонка с идентификатором ''НомерСтрокиДокумента''. При задании, какие колонки выгружать, для выгрузки номера строки надо указать колонку ''НомерСтроки''."
    },
    {"Item","AST","ЗагрузитьТабличнуюЧасть","LoadTable",
"ЗагрузитьТабличнуюЧасть(<?>);",
"LoadTable(<?>);",
"@Синтаксис:
ЗагрузитьТабличнуюЧасть(<ТаблЗнач>)
@Назначение:
Загрузить многострочную часть документа из таблицы значений.
@Параметры: 
<ТаблЗнач> - значение типа ''Таблица значений'', откуда загружается многострочная часть документа. Колонки совмещаются по идентификаторам."
    },
    },
 {"Folder","AST","Модуль формы","",
 {"Folder","AST","Методы","",
    {"Item","AST","ПриЗаписиПерепроводить","ReMakeActionsWhenWrite",
"ПриЗаписиПерепроводить(<?>);",
"ReMakeActionsWhenWrite(<?>);",
"@Синтаксис:
ПриЗаписиПерепроводить(<Режим>)
@Назначение:
Установить режим перепроведения при записи проведенного документа.
@Параметры: 
<Режим> - число:  1 - обязательно перепроведение при записи уже проведенного документа;   0 - не обязательно перепроведение при записи уже проведенного документа.
@Замечание:
Метод доступен только в Модуле формы документа и работает с документом доступным в локальном контексте."
    },
    {"Item","T","ПроводитьПослеТА","PostingAfterTA",
"ПроводитьПослеТА(<?>,);",
"PostingAfterTA(<?>,);",
"@Синтаксис:
ПроводитьПослеТА(<ФлагДляНеПров>,<ФлагДляПров>)
@Назначение:
Установить режим проведения документа после ТА. Возвращает текущее значение режима перепроведения документа в зависимости от проведенности.
@Параметры: 
<ФлагДляНеПров> - режим проведения документа после ТА. Число: -1 (минус единица) - проводить документ всегда задним числом; 0 - при проведении запрашивать режим проведения документа; 1 - проводить документ в реальном потоке времени, т.е. при проведении время документа автоматически устанавливается на время после ТА.
<ФлагДляПров> - режим перепроведения документа после ТА. Числовое выражение: -1 (минус единица) - проводить документ всегда задним числом; 1 - проводить документ в потоке.
@Замечание:
Метод доступен только в Модуле формы документа и работает с документом доступным в локальном контексте."
    },
    {"Item","AST","АктивизироватьСтроку","ActivateLine",
"АктивизироватьСтроку(<?>);",
"ActivateLine(<?>);",
"@Синтаксис:
АктивизироватьСтроку(<НомСтроки>)
@Назначение:
Установить курсор на указанной строке  многострочной части документа. 
@Параметры:
<НомСтроки> - необязательный параметр. Номер строки, которую следует активизировать. Если параметр опущен, то активизируется текущая строка многострочной части документа.
@Замечание:
Метод доступен только в Модуле формы документа и работает с документом доступным в локальном контексте."
    },
    {"Item","AST","ИзменениеПорядкаСтрок","ChangeLinesOrder",
"ИзменениеПорядкаСтрок(<?>);",
"ChangeLinesOrder(<?>);",
"@Синтаксис:
ИзменениеПорядкаСтрок(<Разрешить>)
@Назначение:
Разрешить/запретить изменять порядок строк в форме документа. Возвращает значение режима изменения порядка строк до исполнения метода. Число: 1 - разрешено изменение порядка строк в операции; 0 - запрещено.
@Параметры: 
<Разрешить> -  необязательный параметр. Число: 1 - разрешить изменение порядка строк в документе; 0 - запретить. Если параметр не задан, то режим не меняется.
@Замечание:
Метод доступен только в Модуле формы документа и работает с документом доступным в локальном контексте."
    },
    {"Item","AST","Модифицированность","Modify",
"Модифицированность()",
"Modify()",
"@Синтаксис:
Модифицированность()
@Назначение:
Возвращает признак изменения реквизитов текущей формы документа:
  1 - если реквизиты текущей формы документа были изменены, 0 - иначе.
@Замечание:
Метод доступен только в Модуле формы документа и работает с документом доступным в локальном контексте."
    },
    {"Item","AST","Записать","Write",
"Записать();",
"Write();",
"@Синтаксис:
Записать()
@Назначение:
Записать документ в базу данных.
@Замечание:
Этот метод применяется в Модуле формы документа непосредственно к документу локального контекста. Данный метод отрабатывает те же действия, как интерактивное нажатие пользователем кнопки с формулой ''#Записать''."
    },
    },
 {"Folder","AST","Предопределенные","",
    {"Item","AST","ВводНового","InputNew",
"Процедура ВводНового(<?>,)
КонецПроцедуры",
"Procedure InputNew(<?>,)
EndProcedure",
"@Синтаксис:
ВводНового(<ПризнКопирования>,<ОбъектКопирования>)
@Назначение:
Предопределенная процедура при интерактивном вводе нового документа.
@Параметры:
<ПризнКопирования> - признак того, что объект введен копированием. Число: 1 - объект введен копированием, 0 - просто новый объект. Данный признак может быть использован для анализа необходимости инициализации реквизитов нового объекта.
<ОбъектКопирования> - объект, который был скопирован.
@Замечание:
Данная процедура может располагаться только в модуле формы документа."
    },
    {"Item","AST","ВводНаОсновании","InputCausedBy",
"Процедура ВводНаОсновании(<?>)
КонецПроцедуры",
"Procedure InputCausedBy(<?>)
EndProcedure",
"@Синтаксис:
ВводНаОсновании(<ДокументОснование>)
@Назначение:
Предопределенная процедура при интерактивном вводе нового документа на основании.
@Параметры:
<ДокументОснование> - значение типа Документ.
@Замечание:
Данная процедура может располагаться только в модуле формы документа.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    {"Item","AST","ПриОткрытии","OnOpen",
"Процедура ПриОткрытии()
КонецПроцедуры",
"Procedure OnOpen()
EndProcedure",
"@Синтаксис:
ПриОткрытии()
@Назначение:
Предопределенная процедура при интерактивном открытии формы.
@Замечание:
Данная процедура может располагаться только в программном модуле формы."
    },
    {"Item","AST","ПриЗакрытии","OnClose",
"Процедура ПриЗакрытии()
КонецПроцедуры",
"Procedure OnClose()
EndProcedure",
"@Синтаксис:
ПриЗакрытии()
@Назначение:
Предопределенная процедура при интерактивном закрытии формы.
@Замечание:
Данная процедура может располагаться только в программном модуле формы."
    },
    {"Item","AST","ПриЗаписи","OnWrite",
"Процедура ПриЗаписи()
КонецПроцедуры",
"Procedure OnWrite()
EndProcedure",
"@Синтаксис:
ПриЗаписи()
@Назначение:
Предопределенная процедура при интерактивной записи документа.
@Замечание:
Данная процедура может располагаться только в модуле формы документа.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    {"Item","AST","ПриВводеСтроки","OnNewLine",
"Процедура ПриВводеСтроки()
КонецПроцедуры",
"Procedure OnNewLine()
EndProcedure",
"@Синтаксис:
ПриВводеСтроки()
@Назначение:
Предопределенная процедура при интерактивном вводе строки документа.
@Замечание:
Данная процедура может располагаться только в модуле формы документа.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    {"Item","AST","ПриРедактированииНовойСтроки","OnEditNewLine",
"Процедура ПриРедактированииНовойСтроки()
КонецПроцедуры",
"Procedure OnEditNewLine()
EndProcedure",
"@Синтаксис:
ПриРедактированииНовойСтроки()
@Назначение:
Предопределенная процедура при интерактивном редактировании новой строки документа.
@Замечание:
Данная процедура может располагаться только в модуле формы документа.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    {"Item","AST","ПриНачалеРедактированияСтроки","OnStartEditLine",
"Процедура ПриНачалеРедактированияСтроки()
КонецПроцедуры",
"Procedure OnStartEditLine()
EndProcedure",
"@Синтаксис:
ПриНачалеРедактированияСтроки()
@Назначение:
Предопределенная процедура при интерактивном редактировании строки документа.
@Замечание:
Данная процедура может располагаться только в модуле формы документа.
'"
    },
    {"Item","AST","ПриОкончанииРедактированияСтроки","OnFinishLineEdit",
"Процедура ПриОкончанииРедактированияСтроки(<?>)
КонецПроцедуры",
"Procedure OnFinishLineEdit(<?>)
EndProcedure",
"@Синтаксис:
ПриОкончанииРедактированияСтроки(<НовСтр>)
@Назначение:
Предопределенная процедура при окончании редактирования строки многострочной части документа.
@Параметры:
<НовСтр> - флаг новой строки. Число: 1 - если произошло окончание ввода новой строки, 0 - если произошло окончание редактирования существующей строки."
    },
    {"Item","AST","ПриИзмененииПорядкаСтрок","OnChangeLinesOrder",
"Процедура ПриИзмененииПорядкаСтрок(<?>)
КонецПроцедуры",
"Procedure OnChangeLinesOrder(<?>)
EndProcedure",
"@Синтаксис:
ПриИзмененииПорядкаСтрок(<Действие>)
@Назначение:
Предопределенная процедура при изменении порядка строк многострочной части документа.
@Параметры:
<Действие> - число: -1 - перемещение строки вверх; 1 - перемещение строки вниз; 0 - перенумерация строк."
    },
    {"Item","AST","ПриУдаленииСтроки","OnDeleteLine",
"Процедура ПриУдаленииСтроки()
КонецПроцедуры",
"Procedure OnDeleteLine()
EndProcedure",
"@Синтаксис:
ПриУдаленииСтроки()
@Назначение:
Предопределенная процедура при интерактивном удалении строки документа.
@Замечание:
Данная процедура может располагаться только в модуле формы документа.
Подробнее см. в документации, глава 'Системные предопределенные процедуры'"
    },
    },
    },
 {"Folder","AST","Модуль формы журнала документов","",
 {"Folder","AST","Атрибуты","",
    {"Item","AST","ТекущийДокумент","CurrentDocument",
"ТекущийДокумент",
"CurrentDocument",
"@Синтаксис:
ТекущийДокумент
@Назначение:
Атрибут дает доступ к выбранному в журнале документу (только для чтения).
@Замечание:
Атрибут можно использовать только в локальном контексте Модуля формы журнала документов.
Подробнее см. в документации, глава 'Работа с Журналами документов'"
    },
    },
 {"Folder","AST","Методы","",
    {"Item","AST","ВидыОтбора","KindsOfSelection",
"ВидыОтбора(<?>)",
"KindsOfSelection(<?>)",
"@Синтаксис:
ВидыОтбора(<СписокИменОтборов>)
@Назначение:
Установить доступные виды отборов журнала для вызова их в интерактивном режиме.
Возвращает:
Строковое значение, содержащее текущий список имен отборов для журнала, разделенных запятыми (на момент до исполнения метода).
@Параметры: 
<СписокИменОтборов> - строка со списком имен отборов для журнала через запятую или '*' - для всех видов отборов.
@Замечание:
Метод доступен только в контексте Модуля формы журнала."
    },
    {"Item","AST","ЗакладкиОтбора","TabCtrlSelection",
"ЗакладкиОтбора(<?>,,,);",
"TabCtrlSelection(<?>,,,);",
"@Синтаксис:
ЗакладкиОтбора(<ИмяОтбора>,<ФлагОтбораЗначенийВИнтервалеЖурнала>,<ФлагУстановкиЗначенияОтбора>,<ЗначениеОтбора>)
@Назначение:
Установить в форме журнала закладки для интерактивного осуществления отбора.
@Параметры: 
<ИмяОтбора - строка с именем отбора;
<ФлагОтбораЗначенийВИнтервалеЖурнала> -:
  1 - значения отбора выбираются по документам в установленном интервале журнала,
  0 - значения отбора выбираются по всем документам журнала;
<ФлагУстановкиЗначенияОтбора> -: 
 1 - сразу выбирается отбор по параметру <ЗначениеОтбора>,
 0 - отбор устанавливается на первое существующее значение;
<ЗначениеОтбора> - значение отбора.
@Замечание:
Метод доступен только в контексте Модуля формы журнала."
    },
    {"Item","AST","УстановитьОтбор","SetSelection",
"УстановитьОтбор(<?>,);",
"SetSelection(<?>,);",
"@Синтаксис:
УстановитьОтбор(<ИмяОтбора>,<ЗначениеОтбора>)
@Назначение:
Установить отбор журнала.
@Параметры: 
<ИмяОтбора> - строка с именем отбора (если пусто - отбор отключается);
<ЗначениеОтбора> - значение отбора.
@Замечание:
Во всех журналах, кроме журнала подчиненных документов, работает отбор по виду документа. В этом случае синтаксис вызова метода следующий:
УстановитьОтбор(<ВидДокумента>) 
@Параметры: 
<ВидДокумента> - строковое выражение - вид документа отбора.
Метод доступен только в контексте Модуля формы журнала."
    },
    {"Item","AST","ПолучитьОтбор","GetSelection",
"ПолучитьОтбор(<?>,)",
"GetSelection(<?>,)",
"@Синтаксис:
ПолучитьОтбор(<ИмяОтбора>,<ЗначениеОтбора>)
@Назначение:
Возвратить текущее значение отбора журнала.
Возвращает: 1 - есть отбор, 0 - иначе.
@Параметры: 
<ИмяОтбора> - идентификатор переменной для приема строки с именем отбора;
<ЗначениеОтбора> - идентификатор переменной для приема значения отбора.
@Замечание:
Метод доступен только в контексте Модуля формы журнала."
    },
    {"Item","AST","УстановитьИнтервал","SetRange",
"УстановитьИнтервал(<?>,,);",
"SetRange(<?>,,);",
"@Синтаксис:
УстановитьИнтервал(<ДатаНач>,<ДатаКон>,<ФлагИзменения>)
@Назначение:
Установить интервал журнала.
@Параметры: 
<ДатаНач> - дата начала интервала журнала;
<ДатаКон> - дата конца интервала журнала.
<ФлагИзменения> - необязательный параметр. Этим флагом регулируется возможность интерактивного изменения интервала журнала. 1 - пользователь может изменить интервал журнала интерактивно, 0 - пользователь не может интерактивно изменить интервал журнала. 
@Замечание:
Метод доступен только в контексте Модуля формы журнала."
    },
    {"Item","AST","НачалоИнтервала","BegOfRange",
"НачалоИнтервала()",
"BegOfRange()",
"@Синтаксис:
НачалоИнтервала()
@Назначение:
Возвращает дату начала интервала журнала.
@Замечание:
Метод доступен только в контексте Модуля формы журнала."
    },
    {"Item","AST","КонецИнтервала","EndOfRange",
"КонецИнтервала()",
"EndOfRange()",
"@Синтаксис:
КонецИнтервала()
@Назначение:
Возвращает дату конца интервала журнала.
@Замечание:
Метод доступен только в контексте Модуля формы журнала."
    },
    {"Item","AST","ПодчинениеДокументу","ParentDoc",
"ПодчинениеДокументу(<?>)",
"ParentDoc(<?>)",
"@Синтаксис:
ПодчинениеДокументу(<Докум>,<ФлагАвтоСменыПодчинен>)
@Назначение:
Установить документ-владелец для журнала подчиненных документов.
Возвращает текущий документ, которому подчинен журнал.
@Параметры: 
<Докум> - документ, подчиненные которого должен отображать журнал (необязателен);
<ФлагАвтоСменыПодчинен> -:
  1 - способность автоматически обновлять отображение журнала при смене документа-владельца,
  0 - иначе (необязателен, по умолчанию - 0).
@Замечание:
Метод доступен только в контексте Модуля формы журнала подчиненных документов."
    },
    },
 {"Folder","AST","Предопределенные","",
    {"Item","AST","ПриУстановкеОтбора","OnSetSelectInJournal",
"Процедура ПриУстановкеОтбора(<?>,)
КонецПроцедуры",
"Procedure OnSetSelectInJournal(<?>,)
EndProcedure",
"@Синтаксис:
ПриУстановкеОтбора(<ИмяРеквизОтбора>,<Значение>)
@Назначение:
Предопределенная процедура при интерактивной установке отбора документов в журнале.
@Параметры:
<ИмяРеквизОтбора> - строка с названием общего реквизита документа, по которому производится отбор;
<Значение> - значение реквизита отбора.
@Замечание:
Данная процедура может располагаться только в модуле формы журнала документов."
    },
    {"Item","AST","ПриВыбореСтроки","OnSelectLine",
"Процедура ПриВыбореСтроки()
КонецПроцедуры",
"Procedure OnSelectLine()
EndProcedure",
"@Синтаксис:
ПриВыбореСтроки()
@Назначение:
Предопределенная процедура при выборе строки списка.
@Замечание:
Режим обработки выбора строки (двойной щелчок мыши или клавиша Enter) предопределенной процедурой ПриВыбореСтроки включается в форме списка справочника, журнала, счетов, журнала операций, журнала проводок при помощи метода Форма.ОбработкаВыбораСтроки(1). Данная процедура может располагаться только в программном модуле формы."
    },
    {"Item","AST","ПриУстановкеИнтервала","OnSetRange",
"Процедура ПриУстановкеИнтервала(<?>,)
КонецПроцедуры",
"Procedure OnSetRange(<?>,)
EndProcedure",
"@Синтаксис:
ПриУстановкеИнтервала(<ДатаНач>,<ДатаКон>)
@Назначение:
Предопределенная процедура при установке интервала журнала.
@Параметры:
<ДатаНач> - дата начала интервала журнала;
<ДатаКон> - дата конца интервала журнала.
@Замечание:
Данная процедура может располагаться только в модуле формы журнала документов."
    },
    },
    },
 {"Folder","AST","Модуль документа","",
 {"Folder","AST","Методы","",
    {"Item","AST","ИтогиАктуальны","AreTotalsActual",
"ИтогиАктуальны()",
"AreTotalsActual()",
"@Синтаксис:
ИтогиАктуальны()
@Назначение:
Возвращает флаг актуальности итогов: 1 - итоги актуальны, 0 - иначе.
@Замечание:
Метод доступен только в Модуле документа в предопределенной процедуре ОбработкаПроведения. 
Подробнее см. в документации, глава 'Работа с Документами'"
    },
    {"Item","AST","ГрупповаяОбработка","IsGroupProcessing",
"ГрупповаяОбработка()",
"IsGroupProcessing()",
"@Синтаксис:
ГрупповаяОбработка()
@Назначение:
Возвращает флаг групповой обработки: 1 - групповое обработка, 0 - иначе.
@Замечание:
Метод доступен только в Модуле документа в предопределенной процедуре ОбработкаПроведения. 
Подробнее см. в документации, глава 'Работа с Документами'"
    },
    {"Item","AST","НеПроводитьДокумент","DoNotTransactDoc",
"НеПроводитьДокумент();",
"DoNotTransactDoc();",
"@Синтаксис:
НеПроводитьДокумент()
@Назначение:
Отмена проведения документа.
@Замечание:
Метод доступен только в Модуле документа в предопределенной процедуре ОбработкаПроведения. 
Подробнее см. в документации, глава 'Работа с Документами'"
    },
    {"Item","AST","УстановитьРеквизитСправочника","SetRefField",
"УстановитьРеквизитСправочника(<?>,,,,,,);",
"SetRefField(<?>,,,,,,);",
"@Синтаксис:
УстановитьРеквизитСправочника(<ЭлементСправочника>,<НазваниеРеквизита>,<Значение>,<ДатаУстановки>,<ИмяТипа>,<Длина>,<Точность>)
@Назначение:
Записать значение периодического реквизита справочника с привязкой к проведению документа.
@Параметры:
<ЭлементСправочника> - элемент справочника, в который будет запись;
<НазваниеРеквизита> - название периодического реквизита справочника;
<Значение> - новое значение периодического реквизита;
<ДатаУстановки> - дата установки нового значения периодического реквизита. Дата установки имеет смысл только для не оперативных документов.
<ИмяТипа> - необязательный параметр. Строковое выражение - название  типа данных (или Вид субконто);
<Длина> - необязательный параметр. Число - длина числового или строкового значения; 
<Точность> - необязательный параметр. Число знаков после десятичной точки.
@Замечание:
Параметры <ИмяТипа>, <Длина> и <Точность> следует указывать при установке значения периодического реквизита справочника, имеющего неопределенный тип. 
@Замечание:
Метод доступен только в Модуле документа в предопределенной процедуре ОбработкаПроведения."
    },
    {"Item","AST","ОчиститьДвижения","ClearActions",
"ОчиститьДвижения(<?>);",
"ClearActions(<?>);",
"@Синтаксис:
ОчиститьДвижения(<ВидыДвижений>)
@Назначение:
Удалить движения документа. 
@Параметры:
<ВидыДвижений> - необязательный параметр. Если данный параметр не задан, то производится полная очистка всех движений. Строковое выражение, в котором через '';'' перечислены виды движений. В качастве видов движений можно задавать следующие строковые значения:
''Регистр.ХХХХХХ'' - движение конкретного регистра, где ХХХХХХ - конкретный вид регистра;
''Операция'' - бухгалтерская операция;
''Справочник'' - все изменения периодических реквизитов справочников;
''ЖурналРасчетов'' - все изменения в журналах расчетов.
@Замечание:
Данный метод доступен только при отключенном в конфигурации флаге ''Автоматическое удаление движений''. Метод доступен только в Модуле документа в предопределенной процедуре ОбработкаПроведения."
    },
    {"Item","T","ПривязыватьСтроку","LinkLine",
"ПривязыватьСтроку(<?>);",
"LinkLine(<?>);",
"@Синтаксис:
ПривязыватьСтроку(<НомерСтроки>)
@Назначение:
Записывать номер строки документа в движениях документа.
@Параметры: 
<НомерСтроки> - номер строки Документа.
@Замечание:
Метод  устанавливает номер строки для всех последующих движений регистров, при записи значений периодических реквизитов справочников с привязкой к документу, а также при записи бухгалтерских проводок. Метод доступен только в Модуле документа в предопределенной процедуре ОбработкаПроведения."
    },
    },
 {"Folder","AST","Предопределенные","",
    {"Item","AST","ОбработкаПроведения","Posting",
"Процедура ОбработкаПроведения(<?>)
КонецПроцедуры",
"Procedure Posting(<?>)
EndProcedure",
"@Синтаксис:
ОбработкаПроведения(<Знач>)
@Назначение:
Предопределенная процедура обработки проведения документа в любом режиме.
@Параметры: 
<Знач> - идентификатор переменной, которая получает значение из процедуры Провести.
@Замечание:
Данная процедура может располагаться только в модулях документов."
    },
    {"Item","AST","ОбработкаУдаленияПроведения","UnPostingProcess",
"Процедура ОбработкаУдаленияПроведения()
КонецПроцедуры",
"Procedure UnPostingProcess()
EndProcedure",
"@Синтаксис:
ОбработкаУдаленияПроведения()
@Назначение:
Предопределенная процедура обработки удаления проведения документа или удаления проведенных документов в любом режиме.
@Замечание:
Данная процедура может располагаться только в модулях документов."
    },
    {"Item","S","АрхивироватьДокумент","ArchiveDocument",
"Процедура АрхивироватьДокумент()
КонецПроцедуры",
"Procedure ArchiveDocument()
EndProcedure",
"@Синтаксис:
АрхивироватьДокумент()
@Назначение:
Предопределенная процедура обработки архивирования документа.
@Замечание:
Данная процедура может располагаться только в модуле документа, вызываемом в конфигураторе: Документ - Редактировать - Модуль документа. Вызов процедуры происходит в процессе смены расчетного периода  журнала расчетов."
    },
    },
    },
 {"Folder","AST","Метод подбора","",
    {"Item","AST","ОткрытьПодбор","OpenPermanentChoice",
"ОткрытьПодбор(<?>,,,,);",
"OpenPermanentChoice(<?>,,,,);",
"@Синтаксис:
ОткрытьПодбор(<Объект>,<ИмяФормы>,<КонтекстФормы>,<ФлагМножВыбора>,<ТекЗнач>)
@Назначение:
Открыть Форму подбора значений.
@Параметры:
<Объект> - строка с именем объекта агрегатного типа для подбора. Можно указывать: ''Справочник.ХХХХХ'' или ''Документ.ХХХХХ'' или ''Журнал.ХХХХХ'' или ''Журнал.Подчиненные'' или ''ЖурналОпераций.ХХХХХ'', ''ПланСчетов.ХХХХХ'' (если ХХХХХ не задан, то открывается подбор из любого(всех) плана счетов , ''Отчет.ХХХХХХ'', ''Обработка.ХХХХХХ'', где ХХХХХ - имя вида соответствующего объекта, как он задан в конфигураторе.
<ИмяФормы> - строка с именем Формы подбора;
<КонтекстФормы> - необязательный параметр. Имя переменной, куда можно задать значение любого типа для передачи в открываемую форму. Данное значение будет доступно в открытой форме как атрибут Форма.Параметр. После исполнения данного метода система вернет в данную переменную контекст формы подбора. С помощью значения этого контекста можно затем произвольно манипулировать формой подбора, пока она открыта. Пока форма открыта, тип значения данного параметра равен 100 (см. ТипЗначения), если закрыта - 0.
<ФлагМножВыбора> - число: 1 - выбор нескольких значений; 0 -  выбор одного значения, после чего окно закрывается;
<ТекЗнач> - необязательный параметр. В случае выбора из списка, здесь можно передать значение, на которое следует изначально установить курсор при открытии формы подбора.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы."
    },
    {"Item","AST","УстановитьЗначениеВПодборе","SetValueInPermanentChoice",
"УстановитьЗначениеВПодборе(<?>,);",
"SetValueInPermanentChoice(<?>,);",
"@Синтаксис:
УстановитьЗначениеВПодборе(<ИмяРеквизита>,<Значение>)
@Назначение:
Установить значение реквизита диалога подбора.
@Параметры:
<ИмяРеквизита> - строка с именем реквизита формы подбора значения;
<Значение> - значение реквизита.
@Замечание:
Метод следует использовать после вызова метода ОткрытьПодбор.
Доступ к методу возможен только в контексте Модуля формы."
    },
    {"Item","AST","ПолучитьЗначениеИзПодбора","GetValueFromPermanentChoice",
"ПолучитьЗначениеИзПодбора(<?>)",
"GetValueFromPermanentChoice(<?>)",
"@Синтаксис:
ПолучитьЗначениеИзПодбора(<Выражение>)
@Назначение:
Возвращает значение вычисленного в контексте формы подбора выражения.
@Параметры:
<Выражение> - строковое выражение, значение которого вычисляется в контексте формы подбора и возвращается в качестве результата.
@Замечание:
Метод следует использовать после вызова метода ОткрытьПодбор.
Доступ к методу возможен только в контексте Модуля формы."
    },
    {"Item","AST","ОбработкаПодбора","ProcessPermanentChoice",
"Процедура ОбработкаПодбора(<?>,)
КонецПроцедуры",
"Procedure ProcessPermanentChoice(<?>,)
EndProcedure",
"@Синтаксис:
ОбработкаПодбора(<Элемент>,<КонтФормы>)
@Назначение:
Предопределенная процедура обработки подбора значения при  нажатия кнопки Выбрать в Форме Подбора значения.
@Параметры:
<Элемент> - элемент справочника подбора или документ, передаваемый для обработки.
<КонтФормы> - контекст той формы, из которой шел подбор.
@Замечание:
Данная процедура может располагаться только в программном модуле формы."
    },
    {"Item","AST","Активизировать","Activate",
"Активизировать(<?>,);",
"Activate(<?>,);",
"@Синтаксис:
Активизировать(<ИмяРеквизита>,<Режим>)
@Назначение:
Высветить для редактирования поле диалога.
@Параметры:
<ИмяРеквизита> - строка с именем поля диалога, которое нужно активизировать;
<Режим> - число: 1 - войти в режим редактирования, 0 - не входить (необязателен, по умолчанию - 1, имеет смысл только для строк списков).
@Замечание:
Доступ к методу возможен только в контексте Модуля формы."
    },
    {"Item","AST","АктивизироватьОбъект","ActivateObj",
"АктивизироватьОбъект(<?>);",
"ActivateObj(<?>);",
"@Синтаксис:
АктивизироватьОбъект(<Объект>)
@Назначение:
Активизировать объект в форме списка.
@Параметры:
<Объект> - выражение, содержащее документ.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы."
    },
    {"Item","AST","АктивизироватьСтроку","ActivateLine",
"АктивизироватьСтроку(<?>);",
"ActivateLine(<?>);",
"@Синтаксис:
АктивизироватьСтроку(<НомСтроки>)
@Назначение:
Установить курсор на указанной строке  многострочной части документа. 
@Параметры:
<НомСтроки> - необязательный параметр. Номер строки, которую следует активизировать. Если параметр опущен, то активизируется текущая строка многострочной части документа.
@Замечание:
Метод доступен только в Модуле формы документа и работает с документом доступным в локальном контексте."
    },
    },
    },
 {"Folder","T","Регистр","Register",
 {"Folder","T","Атрибуты","",
    {"Item","T","Приход","Income",
"Приход",
"Income",
"@Синтаксис:
Приход
@Назначение:
Значение флага записи движения регистра 'приход': 1 - если текущее движение регистра приход, 0 - иначе.
@Замечание:
Атрибут не имеет смысла для оборотных регистров."
    },
    {"Item","T","Расход","Outcome",
"Расход",
"Outcome",
"@Синтаксис:
Расход
@Назначение:
Значение флага записи движения регистра 'расход': 1, если текущее движение регистра - расход; 0 - иначе.
@Замечание:
Атрибут не имеет смысла для оборотных регистров."
    },
    {"Item","T","<Измерение>","",
"<Измерение>",
"",
"@Синтаксис:
<Измерение>
@Назначение:
Доступ к значению измерения регистра."
    },
    {"Item","T","<Ресурс>","",
"<Ресурс>",
"",
"@Синтаксис:
<Ресурс>
@Назначение:
Доступ к значению ресурса регистра."
    },
    {"Item","T","<Реквизит>","",
"<Реквизит>",
"",
"@Синтаксис:
<Реквизит>
@Назначение:
Доступ к значению реквизита регистра."
    },
    },
 {"Folder","T","Методы","",
 {"Folder","T","Общие методы","",
    {"Item","T","Вид","Kind",
"Вид()",
"Kind()",
"@Синтаксис:
Вид()
@Назначение:
Возвращает строку с названием вида регистра."
    },
    {"Item","AST","ПредставлениеВида","KindPresent",
"ПредставлениеВида();",
"KindPresent();",
"@Синтаксис:
ПредставлениеВида()
@Назначение:
Получить пользовательское представление вида регистра, как он задан в конфигураторе.
Возвращает строковое значение, содержащее пользовательское представление вида регистра."
    },
    {"Item","AST","НазначитьТип","SetType",
"НазначитьТип(<?>,,,)",
"SetType(<?>,,,)",
"@Синтаксис:
НазначитьТип(<ИмяРеквизита>,<ИмяТипа>,<Длина>,<Точность>)
@Назначение:
Назначить тип для атрибута неопределенного типа.
@Параметры: 
<ИмяРеквизита> - строка с наименованием реквизита неопределенного типа, как он назван в конфигураторе.
<ИмяТипа> - строковое выражение - название типа данных (или Вид субконто), который назначается реквизиту. Например, ''Строка'', ''Число'', ''Справочник.Товары'', ''Документ.РасходнаяНакладная'' и т.п.
<Длина> - необязательный параметр. Число - длина поля представления данных. Имеет смысл только при задании числового или строкового типа.
<Точность> - необязательный параметр. Число знаков после десятичной точки. Имеет смысл только при задании числового типа."
    },
    {"Item","AST","УстановитьАтрибут","SetAttrib",
"УстановитьАтрибут(<?>,);",
"SetAttrib(<?>,);",
"@Синтаксис:
УстановитьАтрибут(<ИмяРеквизита>,<Значение>)
@Назначение:
Установить значение атрибута по имени идентификатора.
@Параметры:
<ИмяРеквизита> - строковое выражение, содержащее имя атрибута, как оно задано в конфигураторе.
<Значение> - выражение, содержащее устанавливаемое значение атрибута."
    },
    {"Item","AST","ПолучитьАтрибут","GetAttrib",
"ПолучитьАтрибут(<?>);",
"GetAttrib(<?>);",
"@Синтаксис:
ПолучитьАтрибут(<ИмяРеквизита>)
@Назначение:
Получить значение атрибута по имени идентификатора. Возвращает значение атрибута.
@Параметры:
<ИмяРеквизита> - строковое выражение, содержащее имя атрибута, как оно задано в конфигураторе."
    },
    {"Item","T","ВыбратьДвижения","SelectActs",
"ВыбратьДвижения(<?>,,);",
"SelectActs(<?>,,);",
"@Синтаксис:
ВыбратьДвижения(<ДатаНачала>,<ДатаКонца>,<ГрафаОтбора>)
@Назначение:
Выбрать все движения регистра по датам в заданном интервале дат.
@Параметры: 
<ДатаНачала> - дата, документ или позиция начала временного интервала выбора движений регистра;
<ДатаКонца> - дата, документ или позиция конца временного интервала выбора движений регистра (если не указана или 0, то конец - ТА).
<ГрафаОтбора> - необязательный параметр.Строковое выражение. Идентификатор графы отбора - установка использования определенной графы отбора. ''*'' - автоматический выбор графы отбора. Пустая строка - не использовать графу отбора. Если не указан - автоматический выбор графы отбора."
    },
    {"Item","T","ВыбратьДвиженияДокумента","SelectDocActs",
"ВыбратьДвиженияДокумента(<?>)",
"SelectDocActs(<?>)",
"@Синтаксис:
ВыбратьДвиженияДокумента(<Документ>)
@Назначение:
Выбрать все движения регистра по документу.
Возвращает:
1 - если действие выполнено и в выборке есть хотя бы один элемент;
0 - если действие не выполнено или в выборке нет ни одного элемента.
@Параметры: 
<Документ> - значение типа Документ."
    },
    {"Item","T","ОбратныйПорядок","BackwardOrder",
"ОбратныйПорядок(<?>)",
"BackwardOrder(<?>)",
"@Синтаксис:
ОбратныйПорядок(<Режим>)
@Назначение:
Установить порядок выборки  движений документов.
Возвращает:
  1 - обратный порядок выборки документов,
  0 - выборка документов в порядке возрастания даты и времени.
@Параметры: 
<Режим> - чмсло:  1 - выбирать движения документов в порядке убывания даты и времени;   0 - выбирать движения документов в порядке возрастания даты и времени. (по умолчанию - 1).
@Замечание:
Данный метод нельзя применять с методом ВыбратьДвиженияСОстатками.
Метод можно использовать как процедуру и как функцию.
Как функция метод возвращает значение, соответствующее порядку выборки до вызова."
    },
    {"Item","T","ПолучитьДвижение","GetDocAct",
"ПолучитьДвижение()",
"GetDocAct()",
"@Синтаксис:
ПолучитьДвижение()
@Назначение:
Выбрать очередное движение регистра.
Возвращает: 1 - если следующее движение регистра выбрано, 0 - иначе.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","T","ТекущийДокумент","CurrentDocument",
"ТекущийДокумент()",
"CurrentDocument()",
"@Синтаксис:
ТекущийДокумент()
@Назначение:
Возвращает документ, задавший движение регистра.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","T","НомерСтроки","LineNum",
"НомерСтроки()",
"LineNum()",
"@Синтаксис:
НомерСтроки()
@Назначение:
Возвращает номер строки документа, по которой было выбрано движение.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","T","ВыбратьИтоги","SelectTotals",
"ВыбратьИтоги();",
"SelectTotals();",
"@Синтаксис:
ВыбратьИтоги()
@Назначение:
Выбрать все остатки регистра.
@Замечание:
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","T","ПолучитьИтог","GetTotal",
"ПолучитьИтог()",
"GetTotal()",
"@Синтаксис:
ПолучитьИтог()
@Назначение:
Выбрать очередной остаток по регистру.
Возвращает: 1 - если очередной остаток по регистру выбран, 0 - иначе.
@Замечание:
Итоги с нулевыми остатками не выдаются.
Порядок выдачи для измерений типа Справочник и Документ не определен.
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","T","ВременныйРасчет","TempCalc",
"ВременныйРасчет(<?>)",
"TempCalc(<?>)",
"@Синтаксис:
ВременныйРасчет(<Флаг>)
@Назначение:
Установить флаг участия регистра во временном расчете.
Возвращает текущее значение флага участия регистра во временном расчете.
@Параметры: 
<Флаг> -:
  1 - установить флаг участия регистра во временном расчете;
  0 - сбросить флаг участия регистра во временном расчете (необязателен, по умолчанию - 1). 
@Замечание:
В один момент времени только по одному объекту регистров каждого вида могут участвовать во временном расчете.
Метод можно использовать как процедуру и как функцию.
Метод  можно использовать только для объектов, созданных функцией СоздатьОбъект."
    },
    {"Item","T","ВыгрузитьИтоги","RetrieveTotals",
"ВыгрузитьИтоги(<?>,,);",
"RetrieveTotals(<?>,);",
"@Синтаксис:
ВыгрузитьИтоги(<ТаблЗнач>,<ВклФильтр>,<Очищать>)
@Назначение:
Выгрузить все итоги регистра с текущим фильтром в таблицу значений.
@Параметры: 
<ТаблЗнач> - объект типа ''ТаблицаЗначений'', куда система выгрузит все итоги регистра.
<ВклФильтр> - необязательный параметр. Число: 1 - в получаемую таблицу включаются измерения, закрепленные фильтром ; 0 - не включаются. Значение по умолчанию  - 0.
<Очищать> - необязательный параметр. Число: 1 - перед выгрузкой таблица значений очищается; 0 - не очищается. Значение по умолчанию - 1."
    },
    {"Item","T","УстановитьФильтр","SetFilter",
"УстановитьФильтр(<?>,);",
"SetFilter(<?>,);",
"@Синтаксис:
УстановитьФильтр(<Измерение1>,<Измерение2>...,<Рекв1>,<Рекв2>)
@Назначение:
Назначить фильтр для оптимизации действий с регистром (временные расчеты, выбор движений и итогов).
@Параметры: 
<Измерен1>,<Измерен2>... - значения измерений регистра.
<Рекв1>,<Рекв2>... - необязательные параметры. Выражения со значениями реквизитов регистра. Заданные значения реквизитов будут влиять только на отбор движений регистра.
@Замечание: 
Измерения могут задаваться с пропусками (неуказанное значение - просто запятая), фиксируются только указанные измерения."
    },
    {"Item","T","УстановитьЗначениеФильтра","SetFilterValue",
"УстановитьЗначениеФильтра(<?>,,);",
"SetFilterValue(<?>,);",
"@Синтаксис:
УстановитьЗначениеФильтра(<Идентиф>,<Значен>,<Вариант>)
@Назначение:
Установить значение фильтра для оптимизации расчетов.
@Параметры: 
<Идентиф> - идентификатор измерения или реквизита.
<Значен> - значение или список значений.
<Вариант> - необязательный параметр. Число: 0 - не фильтровать; 1 - фильтровать по значению; 2 -  искать вхождение. Значение по умолчанию 1. Для варианта ''2'' :
- если параметр <Значен> - это группа справочника, то осуществляется проверка вхождения в группу;
- если параметр <Значен> - это простой элемент справочника или другой тип значения, то осуществляется просто фильтрация по значению;
- для списка значений осуществляется проверка вхождения в список;
- если пустое значение или пустой список значений, то условие не проверяется."
    },
    },
 {"Folder","T","Оборотный регистр","",
    {"Item","T","ИспользоватьПериод 'День/Неделя'","UsePeriod 'Day/Week'",
"ИспользоватьПериод(<?>);",
"UsePeriod(<?>);",
"@Синтаксис:
ИспользоватьПериод(<Дата>)
@Назначение:
Установить период выборки итогов оборотного регистра.
@Параметры: 
<Дата> - выражение типа дата.
@Замечание:
Метод используется до вызова методов работы с оборотным регистром.
Метод используется для интервалов оборотного регистра 'День' и 'Неделя'.
Если метод опущен, то по умолчанию используется период оборотного регистра, в котором находится ТА."
    },
    {"Item","T","ИспользоватьПериод 'День'","UsePeriod 'Day'",
"ИспользоватьПериод(<?>,,);",
"UsePeriod(<?>,,);",
"@Синтаксис:
ИспользоватьПериод(<Год>,<Месяц>,<День>)
@Назначение:
Установить период выборки итогов оборотного регистра.
@Параметры: 
<Год> - номер года;
<Месяц> - номер месяца;
<День> - номер дня месяца.
@Замечание:
Метод используется до вызова методов работы с оборотным регистром.
Метод используется для интервала оборотного регистра 'День'.
Если метод опущен, то по умолчанию используется период оборотного регистра, в котором находится ТА."
    },
    {"Item","T","ИспользоватьПериод 'Неделя'","UsePeriod 'Week'",
"ИспользоватьПериод(<?>,);",
"UsePeriod(<?>,);",
"@Синтаксис:
ИспользоватьПериод(<Год>,<НомерНедели>)
@Назначение:
Установить период выборки итогов оборотного регистра.
@Параметры: 
<Год> - номер года;
<НомерНедели> - номер недели года.
@Замечание:
Метод используется до вызова методов работы с оборотным регистром.
Метод используется для интервала оборотного регистра 'Неделя'.
Если метод опущен, то по умолчанию используется период оборотного регистра, в котором находится ТА."
    },
    {"Item","T","ИспользоватьПериод 'Декада'","UsePeriod '10 days'",
"ИспользоватьПериод(<?>,,);",
"UsePeriod(<?>,,);",
"@Синтаксис:
ИспользоватьПериод(<Год>,<Месяц>,<НомерДекады>)
@Назначение:
Установить период выборки итогов оборотного регистра.
@Параметры: 
<Год> - номер года;
<Месяц> - номер месяца;
<НомерДекады> - номер декады месяца.
@Замечание:
Метод используется до вызова методов работы с оборотным регистром.
Метод используется для интервала оборотного регистра 'Декада'.
Если метод опущен, то по умолчанию используется период оборотного регистра, в котором находится ТА."
    },
    {"Item","T","ИспользоватьПериод 'Месяц'","UsePeriod 'Month'",
"ИспользоватьПериод(<?>,);",
"UsePeriod(<?>,);",
"@Синтаксис:
ИспользоватьПериод(<Год>,<Месяц>)
@Назначение:
Установить период выборки итогов оборотного регистра.
@Параметры: 
<Год> - номер года;
<Месяц> - номер месяца.
@Замечание:
Метод используется до вызова методов работы с оборотным регистром.
Метод используется для интервала оборотного регистра 'Месяц'.
Если метод опущен, то по умолчанию используется период оборотного регистра, в котором находится ТА."
    },
    {"Item","T","ИспользоватьПериод 'Квартал'","UsePeriod 'Quarter'",
"ИспользоватьПериод(<?>,);",
"UsePeriod(<?>,);",
"@Синтаксис:
ИспользоватьПериод(<Год>,<НомерКвартала>)
@Назначение:
Установить период выборки итогов оборотного регистра.
@Параметры: 
<Год> - номер года;
<НомерКвартала> - номер квартала.
@Замечание:
Метод используется до вызова методов работы с оборотным регистром.
Метод используется для интервала оборотного регистра 'Квартал'.
Если метод опущен, то по умолчанию используется период оборотного регистра, в котором находится ТА."
    },
    {"Item","T","ИспользоватьПериод 'Год'","UsePeriod 'Year'",
"ИспользоватьПериод(<?>);",
"UsePeriod(<?>);",
"@Синтаксис:
ИспользоватьПериод(<Год>)
@Назначение:
Установить период выборки итогов оборотного регистра.
@Параметры: 
<Год> - номер года.
@Замечание:
Метод используется до вызова методов работы с оборотным регистром.
Метод используется для интервала оборотного регистра 'Год'.
Если метод опущен, то по умолчанию используется период оборотного регистра, в котором находится ТА."
    },
    {"Item","T","Итог","Total",
"Итог(<?>,,)",
"Total(<?>,,)",
"@Синтаксис:
Итог(<Измерен1>,<Измерен2>...,<ИмяРесурса>)
@Назначение:
Возвращает значение итога заданного ресурса по ранее установленному периоду оборотного регистра.
@Параметры: 
<Измерен1>,<Измерен2>... - значения измерений регистра;
<ИмяРесурса> - название требуемого ресурса регистра.
@Замечание:
Метод используется только для оборотных регистров."
    },
    {"Item","T","Итоги","Totals",
"Итоги(<?>,);",
"Totals(<?>,);",
"@Синтаксис:
Итоги(<Измерение1>,<Измерение2>...)
@Назначение:
Извлечь итоги всех ресурсов оборотного регистра по ранее установленному периоду оборотного регистра.
@Параметры: 
<Измерен1>,<Измерен2>... - значения измерений регистра.
@Замечание:
Полученные итоги считываются из атрибутов-ресурсов регистра.
Метод используется только для оборотных регистров."
    },
    {"Item","T","СводныйИтог","ConsolidatedTotal",
"СводныйИтог(<?>,)",
"ConsolidatedTotal(<?>,)",
"@Синтаксис:
СводныйИтог(<Измерен1>,<Измерен2>...,<ИмяРесурса>)
@Назначение:
Возвращает значение сводного итога заданного ресурса по ранее установленному периоду оборотного регистра.
@Параметры: 
<Измерен1>,<Измерен2>... - значения измерений регистра;
<ИмяРесурса> - название требуемого ресурса регистра.
@Замечание:
Измерения могут задаваться с пропусками (неуказанное значение - просто запятая), фиксируются только указанные измерения. Метод используется только для оборотных регистров."
    },
    {"Item","T","СводныеИтоги","ConsolidatedTotals",
"СводныеИтоги(<?>,);",
"ConsolidatedTotals(<?>,);",
"@Синтаксис:
СводныеИтоги(<Измерение1>,<Измерение2>...)
@Назначение:
Извлечь сводные итоги всех ресурсов оборотного регистра по ранее установленному периоду оборотного регистра.
@Параметры: 
<Измерен1>,<Измерен2>... - значения измерений регистра.
@Замечание:
Полученные сводные итоги считываются из атрибутов-ресурсов регистра. Измерения могут задаваться с пропусками (неуказанное значение - просто запятая), фиксируются только указанные измерения. Метод используется только для оборотных регистров."
    },
    {"Item","T","ИтогиПолучить","TotalsGet",
"ИтогиПолучить();",
"TotalsGet();",
"@Синтаксис:
ИтогиПолучить()
@Назначение:
Получить все ресурсы по регистру.
@Замечание:
Измерения записываются в атрибуты, полученные итоги считываются из атрибутов-ресурсов регистра.
Метод используется только для оборотных регистров."
    },
    },
 {"Folder","T","Регистр остатков","",
    {"Item","T","Остаток","Rest",
"Остаток(<?>,)",
"Rest(<?>,)",
"@Синтаксис:
Остаток(<Измерен1>,<Измерен2>...,<ИмяРесурса>)
@Назначение:
Возвращает значение остатка заданного ресурса регистра.
@Параметры: 
<Измерен1>,<Измерен2>... - значения измерений регистра;
<ИмяРесурса> - название требуемого ресурса регистра.
@Замечание:
Метод используется только для регистров остатков."
    },
    {"Item","T","СводныйОстаток","ConsolidatedRest",
"СводныйОстаток(<?>,)",
"ConsolidatedRest(<?>,)",
"@Синтаксис:
СводныйОстаток(<Измерен1>,<Измерен2>...,<ИмяРесурса>)
@Назначение:
Возвращает значение сводного остатка заданного ресурса регистра.
@Параметры: 
<Измерен1>,<Измерен2>... - значения измерений регистра;
<ИмяРесурса> - название требуемого ресурса регистра.
@Замечание:
Измерения могут задаваться с пропусками (неуказанное значение - просто запятая), фиксируются только указанные измерения. Метод используется только для регистров остатков."
    },
    {"Item","T","Остатки","Rests",
"Остатки(<?>,);",
"Rests(<?>,);",
"@Синтаксис:
Остатки(<Измерение1>,<Измерение2>...)
@Назначение:
Извлечь все ресурсы по регистру.
@Параметры: 
<Измерен1>,<Измерен2>... - значения измерений регистра.
@Замечание:
Полученные остатки считываются из атрибутов-ресурсов регистра.
Метод используется только для регистров остатков."
    },
    {"Item","T","СводныеОстатки","ConsolidatedRests",
"СводныеОстатки(<?>,);",
"ConsolidatedRests(<?>,);",
"@Синтаксис:
СводныеОстатки(<Измерение1>,<Измерение2>...)
@Назначение:
Извлечь сводные ресурсы по регистру.
@Параметры: 
<Измерен1>,<Измерен2>... - значения измерений регистра.
@Замечание:
Измерения могут задаваться с пропусками (неуказанное значение - просто запятая), фиксируются только указанные измерения. Полученные сводные остатки считываются из атрибутов-ресурсов регистра. Метод используется только для регистров остатков."
    },
    {"Item","T","ОстаткиПолучить","GetRests",
"ОстаткиПолучить();",
"GetRests();",
"@Синтаксис:
ОстаткиПолучить()
@Назначение:
Получить все ресурсы по регистру.
@Замечание:
Измерения записываются в атрибуты, полученные ресурсы считываются из атрибутов регистра.
Метод используется только для регистров остатков."
    },
    {"Item","T","ВыбратьДвиженияСОстатками","SelectActsWithRests",
"ВыбратьДвиженияСОстатками(<?>,);",
"SelectActsWithRests(<?>,);",
"@Синтаксис:
ВыбратьДвиженияСОстатками(<ДатаКонца>,<ГрафаОтбора>)
@Назначение:
Выбрать все движения регистра с остатками.
@Параметры: 
<ДатаКонца> - дата, документ или позиция конца временного интервала выбора движений регистра (если не указана или 0, то конец - ТА).
<ГрафаОтбора> - необязательный параметр. Строковое выражение - идентификатор графы отбора - использование определенной графы отбора. ''*'' - автоматический выбор графы отбора. Пустая строка - не использовать графу отбора. Установка использования графы отбора. Если параметр опущен, то выполняется автоматический выбор графы отбора. 
@Замечание:
Дата начала выбираемых движений регистра устанавливается методами РассчитатьРегистрыНа и РассчитатьРегистрыПо."
    },
    },
    },
 {"Folder","T","Системные процедуры","",
    {"Item","T","РассчитатьРегистрыНа","CalcRegsOnBeg",
"РассчитатьРегистрыНа(<?>,);",
"CalcRegsOnBeg(<?>,);",
"@Синтаксис:
РассчитатьРегистрыНа(<ГраницаРасчета>,<ГрафаОтбора>)
@Назначение:
Рассчитать все регистры с установленным флагом временного расчета на начало события.
@Параметры: 
<ГраницаРасчета> - значение типа дата, документ или позиция.
<ГрафаОтбора> - необязательный. Строковое выражение. Установка использования графы отбора. Если не указан, то автоматический выбор графы отбора. Идентификатор графы отбора - использование определенной графы отбора.
''*'' - автоматический выбор графы отбора. Пустая строка - не использовать графу отбора."
    },
    {"Item","T","РассчитатьРегистрыПо","CalcRegsOnEnd",
"РассчитатьРегистрыПо(<?>,);",
"CalcRegsOnEnd(<?>,);",
"@Синтаксис:
РассчитатьРегистрыПо(<ГраницаРасчета>,<ГрафаОтбора>)
@Назначение:
Рассчитать все регистры с установленным флагом временного расчета на конец события.
@Параметры: 
<ГраницаРасчета> - значение типа дата, документ или позиция.
<ГрафаОтбора> - необязательный. Строковое выражение. Установка использования графы отбора. Если не указан, то автоматический выбор графы отбора. Идентификатор графы отбора - использование определенной графы отбора.
''*'' - автоматический выбор графы отбора. Пустая строка - не использовать графу отбора."
    },
    },
 {"Folder","T","Модуль документа","",
    {"Item","T","ПривязыватьСтроку","LinkLine",
"ПривязыватьСтроку(<?>);",
"LinkLine(<?>);",
"@Синтаксис:
ПривязыватьСтроку(<НомерСтроки>)
@Назначение:
Записать номер строки документа в движении регистра.
@Параметры: 
<НомерСтроки> - номер строки Документа.
@Замечание:
Метод доступен только в Модуле документа в предопределенной процедуре ОбработкаПроведения.
Метод можно применять только к регистрам, непосредственно доступным в локальном контексте Модуля документа."
    },
    {"Item","T","ДвижениеПриход","ActIncome",
"ДвижениеПриход(<?>,);",
"ActIncome(<?>,);",
"@Синтаксис:
ДвижениеПриход(<Измерение1>,<Измерение2>...,<Ресурс1>,<Ресурc2>...)
@Назначение:
Выполнить запись прихода в регистр по параметрам.
@Параметры: 
<Измерен1>,<Измерен2>... - значения измерений регистра;
<Ресурс1>,<Ресурc2>... - значения приращений ресурсов регистра.
@Замечание:
Метод доступен только в Модуле документа в предопределенной процедуре ОбработкаПроведения.
Метод можно применять только к регистрам, непосредственно доступным в локальном контексте Модуля документа.
Метод используется только для регистров остатков."
    },
    {"Item","T","ДвижениеРасход","ActOutcome",
"ДвижениеРасход(<?>,);",
"ActOutcome(<?>,);",
"@Синтаксис:
ДвижениеРасход(<Измерение1>,<Измерение2>...,<Ресурс1>,<Ресурc2>...)
@Назначение:
Выполнить запись расхода в регистр по параметрам.
@Параметры: 
<Измерен1>,<Измерен2>... - значения измерений регистра;
<Ресурс1>,<Ресурc2>... - значения приращений ресурсов регистра.
@Замечание:
Метод доступен только в Модуле документа в предопределенной процедуре ОбработкаПроведения.
Метод можно применять только к регистрам, непосредственно доступным в локальном контексте Модуля документа.
Метод используется только для регистров остатков."
    },
    {"Item","T","ДвижениеПриходВыполнить","DoActIncome",
"ДвижениеПриходВыполнить();",
"DoActIncome();",
"@Синтаксис:
ДвижениеПриходВыполнить()
@Назначение:
Выполнить запись прихода в регистр по атрибутам.
@Замечание:
Метод доступен только в Модуле документа в предопределенной процедуре ОбработкаПроведения.
Метод можно применять только к регистрам, непосредственно доступным в локальном контексте Модуля документа.
Метод используется только для регистров остатков."
    },
    {"Item","T","ДвижениеРасходВыполнить","DoActOutcome",
"ДвижениеРасходВыполнить();",
"DoActOutcome();",
"@Синтаксис:
ДвижениеРасходВыполнить()
@Назначение:
Выполнить запись  расхода в регистр по атрибутам.
@Замечание:
Метод доступен только в Модуле документа в предопределенной процедуре ОбработкаПроведения.
Метод можно применять только к регистрам, непосредственно доступным в локальном контексте Модуля документа.
Метод используется только для регистров остатков."
    },
    {"Item","T","Движение","Act",
"Движение(<?>,);",
"Act(<?>,);",
"@Синтаксис:
Движение(<Измерение1>,<Измерение2>...,<Ресурс1>,<Ресурc2>...)
@Назначение:
Выполнить запись движения в оборотный регистр по параметрам.
@Параметры: 
<Измерен1>,<Измерен2>... - значения измерений регистра;
<Ресурс1>,<Ресурc2>... - значения приращений ресурсов регистра.
@Замечание:
Метод доступен только в Модуле документа в предопределенной процедуре ОбработкаПроведения.
Метод можно применять только к регистрам, непосредственно доступным в локальном контексте Модуля документа.
Метод используется только для оборотных регистров."
    },
    {"Item","T","ДвижениеВыполнить","DoAct",
"ДвижениеВыполнить();",
"DoAct();",
"@Синтаксис:
ДвижениеВыполнить()
@Назначение:
Выполнить  запись движения в оборотный регистр по атрибутам.
@Замечание:
Метод доступен только в Модуле документа в предопределенной процедуре ОбработкаПроведения.
Метод можно применять только к регистрам, непосредственно доступным в локальном контексте Модуля документа.
Метод используется только для оборотных регистров."
    },
    },
 {"Folder","T","Объект ''Регистры''","Registers",
 {"Folder","T","Атрибуты","",
    {"Item","T","<ИдентификаторРегистра>","",
"<ИдентификаторРегистра>",
"",
"@Синтаксис:
<ИдентификаторРегистра>
@Назначение:
Доступ к к регистру конфигурации конкретного вида."
    },
    },
 {"Folder","T","Методы","",
    {"Item","T","ПолучитьАтрибут","GetAttrib",
"ПолучитьАтрибут(<?>);",
"GetAttrib(<?>);",
"@Синтаксис:
ПолучитьАтрибут(<ИмяРегистра>)
@Назначение:
Получить значение регистра по имени идентификатора. Возвращает значение регистра.
@Параметры:
<ИмяРегистра> - строковое выражение, содержащее имя регистра, как оно задано в конфигураторе."
    },
    {"Item","T","РассчитатьРегистрыНа","CalcRegsOnBeg",
"РассчитатьРегистрыНа(<?>,);",
"CalcRegsOnBeg(<?>,);",
"@Синтаксис:
РассчитатьРегистрыНа(<ГраницаРасчета>,<ГрафаОтбора>)
@Назначение:
Рассчитать все регистры с установленным флагом временного расчета на начало события.
@Параметры: 
<ГраницаРасчета> - значение типа дата, документ или позиция.
<ГрафаОтбора> - необязательный. Строковое выражение. Установка использования графы отбора. Если не указан, то автоматический выбор графы отбора. Идентификатор графы отбора - использование определенной графы отбора.
''*'' - автоматический выбор графы отбора. Пустая строка - не использовать графу отбора."
    },
    {"Item","T","РассчитатьРегистрыПо","CalcRegsOnEnd",
"РассчитатьРегистрыПо(<?>,);",
"CalcRegsOnEnd(<?>,);",
"@Синтаксис:
РассчитатьРегистрыПо(<ГраницаРасчета>,<ГрафаОтбора>)
@Назначение:
Рассчитать все регистры с установленным флагом временного расчета на конец события.
@Параметры: 
<ГраницаРасчета> - значение типа дата, документ или позиция.
<ГрафаОтбора> - необязательный. Строковое выражение. Установка использования графы отбора. Если не указан, то автоматический выбор графы отбора. Идентификатор графы отбора - использование определенной графы отбора.
''*'' - автоматический выбор графы отбора. Пустая строка - не использовать графу отбора."
    },
    {"Item","T","Актуальность","Actual",
"Актуальность(<?>);",
"Actual(<?>);",
"@Синтаксис:
Актуальность(<ФлагАктуальности>)
@Назначение:
Устанавливает флаг актуальности временного расчета. Возвращает текущее состояние флага актуальности временного  расчета. Число: 1 - временный расчет поддерживается в актуальном состоянии; 0 - не поддерживается. 
@Параметры: 
<ФлагАктуальности> - необязательный параметр. Число: 1 - временный расчет поддерживать в актуальном состоянии; 0 - не поддерживать актуальность временного расчета.  Если параметр не задан, то метод просто возвращает текущий флаг актуальности, не меняя его.
@Замечание: 
Данный метод можно использовать только в модуле проведения документа. Если флаг установлен, то все последующие движения регистров будут изменять итоги временного расчета, и ,значит, итоги регистров временного расчета будут все время (при проведении документа) находиться в актуальном состоянии."
    },
    },
    },
    },
 {"Folder","A","План счетов","Chart Of Accounts",
 {"Folder","A","Атрибут ''ПланыСчетов''","",
    {"Item","A","ПланыСчетов","ChartsOfAccounts",
"ПланыСчетов",
"ChartsOfAccounts",
"@Синтаксис:
ПланыСчетов
@Назначение: 
атрибут глобального контекста для получения существующих значений типа ''ПланСчетов''. Не используется самостоятельно, а всегда используется с доступными ему атрибутами и методами."
    },
 {"Folder","A","Методы атрибута ''ПланыСчетов''","",
    {"Item","A","КоличествоЗначений","Count",
"КоличествоЗначений()",
"Count()",
"@Синтаксис:
КоличествоЗначений()
@Назначение: 
применяется к атрибуту глобального контекста ''ПланыСчетов'' и позволяет определить общее количество планов счетов, созданных в конфигурации.
Возвращает количество планов счетов конфигурации."
    },
    {"Item","A","ЗначениеПоНомеру","ValueByIndex",
"ЗначениеПоНомеру(<?>)",
"ValueByIndex(<?>)",
"@Синтаксис:
ЗначениеПоНомеру(<Номер>)
@Назначение: 
применяется к атрибуту глобального контекста ''ПланыСчетов'' и позволяет определить план счетов, соответствующий номеру в списке планов счетов конфигурации.
Возвращает значение типа ''ПланСчетов'', соответствующее номеру заданной позиции.
@Параметры: 
<Номер> - числовое выражение. Номер позиции плана счетов, заданный в Конфигураторе."
    },
    {"Item","A","ЗначениеПоИдентификатору","ValueByIdentifier",
"ЗначениеПоИдентификатору(<?>)",
"ValueByIdentifier(<?>)",
"@Синтаксис:
ЗначениеПоИдентификатору(<Идентификатор>)
@Назначение:
применяется к атрибуту глобального контекста ''ПланыСчетов'' и позволяет определить план счетов, соответствующий заданному идентификатору. Возвращает значение плана счетов. Если значение не найдено - то возвращается пустое значение.
@Параметры:
<Идентификатор> - строковое выражение. Идентификатор плана счетов, заданный в конфигураторе."
    },
    },
    },
 {"Folder","A","Методы типа данных ''ПланСчетов''","",
    {"Item","A","Выбран","Selected",
"Выбран()",
"Selected()",
"@Синтаксис:
Выбран()
@Назначение: 
метод позволяет определить, пусто значение типа ''ПланСчетов'' или нет.
Возвращает числовое значение: 1 - значение не пусто; 0 - значение пусто."
    },
    {"Item","A","ПорядковыйНомер","Number",
"ПорядковыйНомер()",
"Number()",
"@Синтаксис:
ПорядковыйНомер()
@Назначение: 
метод позволяет определить порядковый номер плана счетов среди планов счетов, созданных в конфигурации.
Возвращает числовое значение: порядковый номер плана счетов среди планов счетов конфигурации."
    },
    {"Item","A","Идентификатор","Identifier",
"Идентификатор()",
"Identifier()",
"@Синтаксис:
Идентификатор()
@Назначение: 
Возвращает строку - идентификатор вида плана счетов как он задан в метаданных."
    },
    },
    },
 {"Folder","A","Счет","Account",
 {"Folder","A","Атрибуты","",
    {"Item","A","<Реквизит>","<Attribute>",
"<Реквизит>",
"<Attribute>",
"@Синтаксис:
<Реквизит>
@Назначение:
Доступ к значению дополнительного реквизита '<Реквизит>' выбранного счета, где
<Реквизит> - название реквизита счета, как оно задано в конфигураторе."
    },
    {"Item","A","Код","Code",
"Код",
"Code",
"@Синтаксис:
Код
@Назначение:
При помощи атрибута ''Код'' можно получать и задавать код счета. Код счета в общем случае представляет собой символьную строку вида:
<Код счета>.<Код субсчета>.<Код субсчета> ...
Общая длина кода счета ограничена 255 символами."
    },
    {"Item","A","Наименование","Description",
"Наименование",
"Description",
"@Синтаксис:
Наименование
@Назначение:
При помощи атрибута ''Наименование'' можно получать и задавать наименование счета, которое представляет собой произвольную строку символов."
    },
    {"Item","A","Валютный","IsCurrency",
"Валютный",
"IsCurrency",
"@Синтаксис:
Валютный
@Назначение:
Атрибут содержит признак ведения валютного учета по счету. 1 - валютный учет ведется по данному счету; 0 - валютный учет не ведется по данному счету;"
    },
    {"Item","A","Количественный","IsAmount",
"Количественный",
"IsAmount",
"@Синтаксис:
Количественный
@Назначение:
Атрибут содержит признак ведения количественного учета по счету. 1 - количественный учет ведется по данному счету; 0 - количественный учет не ведется по данному счету;"
    },
    {"Item","A","Забалансовый","IsSingle",
"Забалансовый",
"IsSingle",
"@Синтаксис:
Забалансовый
@Назначение:
Атрибут содержит признак того, что счет является забалансовым, то есть он не участвует в двойной записи, не требует в проводках наличия корреспонденции и не может корреспондировать с балансовыми счетами. 1 - выбранный счет является забалансовым счетом; 0 - выбранный счет является балансовым счетом."
    },
    {"Item","A","Активный","IsActive",
"Активный",
"IsActive",
"@Синтаксис:
Активный
@Назначение:
Атрибут содержит тип остатка счета. Счет может являться активным, (остатки должны быть дебетовыми), пассивным (остатки должны быть кредитовыми), активно-пассивным (остатки могут быть дебетовыми и кредитовыми). По умолчанию все счета считаются активно-пассивными.
1 - счет является активным;
2 - счет является пассивным;
3 - счет является активно-пассивным;"
    },
    },
 {"Folder","A","Методы периодических реквизитов","",
    {"Item","A","Получить","GetValue",
"Получить(<?>)",
"GetValue(<?>)",
"@Синтаксис:
Получить(<Дата>)
@Назначение:
Получить значение периодического реквизита счета на дату или документ.
Возвращает - значение периодического реквизита счета на заданную дату или документ.
@Параметры: 
<Дата> -  необязательный параметр. Выражение типа дата или значение типа документ или позиция документа. Этот параметр задает момент времени, на который требуется получить значение периодического реквизита. Значение по умолчанию: ТА - если используется компонента ''Оперативный учет'', Рабочая дата - если компонента ''Оперативный учет'' не используется.
@Замечание:
Метод  можно использовать только для периодических реквизитов счета и если для счета еще не применялся метод ИспользоватьДату."
    },
    {"Item","AST","Установить","SetValue",
"Установить(<?>,);",
"SetValue(<?>,);",
"@Синтаксис:
Установить(<Дата>,<Значение>)
@Назначение:
Установить значение периодического реквизита счета на заданную дату.
@Параметры: 
<Дата> - выражение со значением требуемой даты;
<Значение> - выражение, содержащее устанавливаемое значение периодического реквизита счета.
@Замечание:
Метод  можно использовать только для периодических реквизитов счета и если для счета еще не применялся метод ИспользоватьДату. Метод  можно использовать только для объектов-счетов, созданных функцией СоздатьОбъект."
    },
    },
 {"Folder","A","Методы","",
    {"Item","A","ВыбратьСчета","SelectAccounts",
"ВыбратьСчета()",
"SelectAccounts()",
"@Синтаксис:
ВыбратьСчета()
@Назначение:
открывает выборку счетов для текущего плана счетов. Вызов данного метода позволяет затем перебрать счета. Непосредственно извлечение счетов из выборки осуществляется при помощи метода ''ПолучитьСчет''. Счета извлекаются в порядке возрастания кода счета.
Возвращает: 1 - если действие выполнено и в выборке есть хотя бы один счет; 0 - если действие не выполнено или в выборке нет ни одного счета."
    },
    {"Item","A","ПолучитьСчет","GetAccount",
"ПолучитьСчет(<?>)",
"GetAccount(<?>)",
"@Синтаксис:
ПолучитьСчет(<Режим>) 
@Назначение:
Получить из выборки следующий счет. Выборка должна быть предварительно открыта при помощи метода ''ВыбратьСчета''.
Возвращает: 1 - следующий счет выбран успешно; 0 - следующий счет не выбран (отсутствует).
@Параметры:
<Режим> - числовое выражение. Признак выборки подчиненных счетов. Может принимать значения: 0 - не включать подчиненные счета; 1 - включать подчиненные счета. По умолчанию - 1."
    },
    {"Item","A","Выбрать","Choose",
"Выбрать(<?>,)",
"Choose(<?>,)",
"@Синтаксис:
Выбрать(<Подсказка>,<ФормаСписка>) 
@Назначение:
Вызывает на экран диалог, содержащий план счетов. Пользователь может интерактивно выбрать требуемый счет.
Возвращает: 1 - счет выбран; 0 - счет не выбран.
@Параметры:
<Подсказка> - символьное выражение - текст заголовка окна диалога выбора счета. Может использоваться в качестве подсказки. Необязательный параметр.
<ФормаСписка> - символьное выражение - идентификатор формы списка плана счетов (как он указан в конфигураторе), которая должна использоваться для выбора. Если значение пустое, то используется форма списка для выбора по умолчанию. Необязательный параметр."
    },
    {"Item","T","УстановитьАтрибут","SetAttrib",
"УстановитьАтрибут(<?>,);",
"SetAttrib(<?>,);",
"@Синтаксис:
УстановитьАтрибут(<ИмяРеквизита>,<Значение>)
@Назначение:
Установить значение атрибута по имени идентификатора.
@Параметры:
<ИмяРеквизита> - строковое выражение, содержащее имя атрибута, как оно задано в конфигураторе.
<Значение> - выражение, содержащее устанавливаемое значение атрибута."
    },
    {"Item","T","ПолучитьАтрибут","GetAttrib",
"ПолучитьАтрибут(<?>);",
"GetAttrib(<?>);",
"@Синтаксис:
ПолучитьАтрибут(<ИмяРеквизита>)
@Назначение:
Получить значение атрибута по имени идентификатора. Возвращает значение атрибута.
@Параметры:
<ИмяРеквизита> - строковое выражение, содержащее имя атрибута, как оно задано в конфигураторе."
    },
    {"Item","A","НайтиПоКоду","FindByCode",
"НайтиПоКоду(<?>)",
"FindByCode(<?>)",
"@Синтаксис:
НайтиПоКоду(<КодСчета>) 
@Назначение:
Выполняет поиск счета в плане счетов по коду счета.
Возвращает: 1 - счет найден; 0 - счет не найден.
@Параметры:
<КодСчета> - символьное выражение - код счета, как он указан в плане счетов."
    },
    {"Item","A","НайтиСчет","FindAccount",
"НайтиСчет(<?>)",
"FindAccount(<?>)",
"@Синтаксис:
НайтиСчет(<Счет>) 
@Назначение:
Метод выполняет поиск счета в плане счетов по значению типа ''Счет''.
Возвращает: 1 - счет найден; 0 - счет не найден.
@Параметры:
<Счет> - значение типа ''Счет''."
    },
    {"Item","A","Выбран","Selected",
"Выбран()",
"Selected()",
"@Синтаксис:
Выбран()
@Назначение:
Проверяет факт выбора счета.
Возвращает: 1 - если счет выбран (спозиционирован); 0 - если не выбран."
    },
    {"Item","A","ЗаданВКонфигурации","DefinedInConfiguration",
"ЗаданВКонфигурации()",
"DefinedInConfiguration()",
"@Синтаксис:
ЗаданВКонфигурации()
@Назначение:
Определяет, задан ли текущий счет в конфигурации или в информационной базе.
Возвращает: 1 - если счет задан в конфигурации и 0, если счет введен в информационной базе."
    },
    {"Item","A","Вид","Kind",
"Вид()",
"Kind()",
"@Синтаксис:
Вид()
@Назначение:
Позволяет определить, к какому плану счетов относится данный счет. Возвращает: символьную строку - идентификатор плана счетов, к которому относится данный счет."
    },
    {"Item","T","ПредставлениеВида","KindPresent",
"ПредставлениеВида();",
"KindPresent();",
"@Синтаксис:
ПредставлениеВида()
@Назначение:
Получить пользовательское представление вида плана счетов, как он задан в конфигураторе.
Возвращает строковое значение, содержащее пользовательское представление вида плана счетов."
    },
    {"Item","A","ПланСчетов","ChartOfAccounts",
"ПланСчетов()",
"ChartOfAccounts()",
"@Синтаксис:
ПланСчетов()
@Назначение:
Выдает план счетов, которому принадлежит счет.
Возвращает: значение типа ''План счетов''."
    },
    {"Item","A","ЭтоГруппа","IsGroup",
"ЭтоГруппа()",
"IsGroup()",
"@Синтаксис:
ЭтоГруппа()
@Назначение:
Определяет, является ли данный счет группой (может иметь субсчета) или нет.
Возвращает: 1 - счет является группой;  0 - счет не является группой."
    },
    {"Item","A","Уровень","Level",
"Уровень()",
"Level()",
"@Синтаксис:
Уровень()
@Назначение:
Возвращает уровень вложенности текущего счета. 
Возвращает: число - уровень вложенности счета: 1 - для счета верхнего уровня."
    },
    {"Item","A","ТекущийСчет","CurAccount",
"ТекущийСчет()",
"CurAccount()",
"@Синтаксис:
ТекущийСчет()
@Назначение:
Возвращает текущее значение счета. 
Возвращает: значение типа ''Счет''."
    },
    {"Item","A","ПометкаУдаления","DeleteMark",
"ПометкаУдаления()",
"DeleteMark()",
"@Синтаксис:
ПометкаУдаления()
@Назначение:
Проверяет наличие пометки на удаление для текущего счета. 
Возвращает: 1 - счет помечен на удаление; 0 - счет не помечен на удаление."
    },
    {"Item","A","ВыборГруппы","SelectGroup",
"ВыборГруппы(<?>)",
"SelectGroup(<?>)",
"@Синтаксис:
ВыборГруппы(<ПризнакВыбораГруппы>) 
@Назначение:
устанавливает режим выборки групп. Данный метод может применяться как для позиционируемых объектов, созданных функцией ''СоздатьОбъект'', так и для элементов диалога типа ''Счет''. По умолчанию выбор группы разрешен, за исключением счетов дебета и кредита в проводках операции.
Возвращает: текущее числовое значение режима выборки групп (на момент до исполнения метода).
@Параметры:
<ПризнакВыбораГруппы> - числовое выражение: 1 - выбирать группы; 0 - не выбирать группы.  Необязательный параметр."
    },
    {"Item","A","ПринадлежитГруппе","BelongsToGroup",
"ПринадлежитГруппе(<?>)",
"BelongsToGroup(<?>)",
"@Синтаксис:
ПринадлежитГруппе(<Счет>) 
@Назначение:
Определяет, является ли текущий счет субсчетом для счета, указанного в качестве параметра метода. Проверка выполняется по всем вышестоящим уровням счета.
Возвращает: 1 - текущий счет является субсчетом для счета, указанного в качестве параметра; 0 - текущий счет не является субсчетом для счета, указанного в качестве параметра.
@Параметры:
<Счет> - значение типа ''Счет'' - счет, к субсчетам которого проверяется принадлежность текущего счета."
    },
    {"Item","A","ВидСубконто","SubcontoKind",
"ВидСубконто(<?>,,)",
"SubcontoKind(<?>,,)",
"@Синтаксис:
ВидСубконто(<НомерСубконто>,<ВидСубконто>,<ТолькоОбороты>) 
@Назначение:
Устанавливает/возвращает вид субконто счета.
Возвращает: значение типа ''ВидСубконто''.
@Параметры:
<НомерСубконто> - числовое выражение - порядковый номер субконто.
<ВидСубконто> - необязательный параметр. Значение типа ''ВидСубконто'', которое должно быть установлено.
<ТолькоОбороты> - необязательный параметр. Числовое значение: 1 или 0. Данный параметр снимает или устанавливает флаг ''Только обороты'' для данного субконто счета. Если параметр не используется, то флаг ''Только обороты'' не меняется."
    },
    {"Item","A","ТолькоОбороты","TurnoversOnly",
"ТолькоОбороты(<?>,)",
"TurnoversOnly(<?>,)",
"@Синтаксис:
ТолькоОбороты(<НомерСубконто>,<ТолькоОбороты>) 
@Назначение:
Устанавливает/возвращает значение флага ''Только обороты'' субконто счета. Возвращает: 1 - флаг установлен; 0 - флаг не установлен.
@Параметры:
<НомерСубконто> - числовое выражение - порядковый номер субконто.
<ТолькоОбороты> - необязательный параметр. Числовое значение: 1 или 0. Данный параметр снимает или устанавливает флаг ''Только обороты'' для данного субконто счета. Если параметр не используется, то флаг ''Только обороты'' не меняется."
    },
    {"Item","A","УчетПоСумме","AccountingBySum",
"УчетПоСумме(<?>,)",
"AccountingBySum(<?>,)",
"@Синтаксис:
УчетПоСумме(<НомерСубконто>,<УчетПоСумме>) 
@Назначение:
Устанавливает/возвращает значение флага ''УчетПоСумме'' субконто счета. Возвращает: 1 - флаг установлен; 0 - флаг не установлен.
@Параметры:
<НомерСубконто> - числовое выражение - порядковый номер субконто.
<УчетПоСумме> - необязательный параметр. Числовое значение: 1 или 0. Данный параметр снимает или устанавливает флаг 'УчетПоСумме'' для данного субконто счета. Если параметр не используется, то флаг ''УчетПоСумме'' не меняется."
    },
    {"Item","A","УчетПоВалютнойСумме","AccountingByCurrencySum",
"УчетПоВалютнойСумме(<?>,)",
"AccountingByCurrencySum(<?>,)",
"@Синтаксис:
УчетПоВалютнойСумме(<НомерСубконто>,<УчетПоСумме>) 
@Назначение:
Устанавливает/возвращает значение флага 'Учет по валютной сумме'' субконто счета. Возвращает: 1 - флаг установлен; 0 - флаг не установлен.
@Параметры:
<НомерСубконто> - числовое выражение - порядковый номер субконто.
<УчетПоСумме> - необязательный параметр. Числовое значение: 1 или 0. Данный параметр снимает или устанавливает флаг 'Учет по валютной сумме'' для данного субконто счета. Если параметр не используется, то флаг 'Учет по валютной сумме'' не меняется."
    },
    {"Item","A","УчетПоКоличеству","AccountingByAmount",
"УчетПоКоличеству(<?>,)",
"AccountingByAmount(<?>,)",
"@Синтаксис:
УчетПоКоличеству(<НомерСубконто>,<УчетПоКоличеству>) 
@Назначение:
Устанавливает/возвращает значение флага 'Учет по количеству'' субконто счета. Возвращает: 1 - флаг установлен; 0 - флаг не установлен.
@Параметры:
<НомерСубконто> - числовое выражение - порядковый номер субконто.
<УчетПоКоличеству> - необязательный параметр. Числовое значение: 1 или 0. Данный параметр снимает или устанавливает флаг ''Учет по количеству'' для данного субконто счета. Если параметр не используется, то флаг 'Учет по количеству'' не меняется."
    },
    {"Item","A","КоличествоСубконто","SubcontoCount",
"КоличествоСубконто()",
"SubcontoCount()",
"@Синтаксис:
КоличествоСубконто()
@Назначение:
Определяет количество субконто у текущего счета.
Возвращает: число - количество видов субконто у текущего счета."
    },
    {"Item","A","ИспользоватьДату","UseDate",
"ИспользоватьДату(<?>)",
"UseDate(<?>)",
"@Синтаксис:
ИспользоватьДату(<Дата>) 
@Назначение:
Устанавливает дату выборки периодических реквизитов счета.
Возвращает: текущее значение используемой даты (на момент до исполнения метода).
@Параметры:
<Дата> - выражение типа ''дата''."
    },
    {"Item","A","ИспользоватьПланСчетов","UseChartOfAccounts",
"ИспользоватьПланСчетов(<?>)",
"UseChartOfAccounts(<?>)",
"@Синтаксис:
ИспользоватьПланСчетов(<ПланСчетов>) 
@Назначение:
Устанавливает план счетов, который будет использован объектом.
Возвращает: значение типа ''ПланСчетов''. Текущее значение на момент до исполнения метода.
@Параметры:
<ПланСчетов> - значение типа ''ПланСчетов''."
    },
    {"Item","A","Родитель","Parent",
"Родитель(<?>)",
"Parent(<?>)",
"@Синтаксис:
Родитель(<НомерУровня>) 
@Назначение:
Выдает счет вышестоящего уровня.
Возвращает: значение типа ''Счет''. Счет вышестоящего уровня данного счета.
@Параметры:
<НомерУровня> - число - номер уровня. Определяет, какого уровня вышестоящий счет должен быть выдан. Необязательный параметр. Если параметр не указан - выдается непосредственный родитель."
    },
    {"Item","A","ИспользоватьРодителя","UseParent",
"ИспользоватьРодителя(<?>,)",
"UseParent(<?>,)",
"@Синтаксис:
ИспользоватьРодителя(<Родитель>,<ФлагИзменения>) 
@Назначение:
Устанавливает / выдает значение родителя (счета вышестоящего уровня), используемого для выборки счетов.
Возвращает: значение типа ''Счет''. Текущее значение используемого родителя на момент до исполнения метода.
@Параметры:
<Родитель> - необязательный параметр. Значение типа ''Счет'', устанавливаемое в качестве используемого родителя. Если параметр не указан - значение используемого родителя не изменяется.
<ФлагИзменения> - необязательный параметр. Этим флагом регулируется возможность интерактивного изменения родителя. 1 - пользователь может изменить родителя интерактивно, 0 - пользователь не может интерактивно изменить родителя. Значение по умолчанию: 1. Данный параметр действует при интерактивном выборе счета - в случае, когда метод применен для элементов диалога типа ''Счет''. Если метод применен для объекта, созданного функцией СоздатьОбъект, то данный параметр срабатывает при вызове метода Выбрать."
    },
    {"Item","A","КодСубсчета","SubAccountCode",
"КодСубсчета()",
"SubAccountCode()",
"@Синтаксис:
КодСубсчета() 
@Назначение:
Выдает код счета без кодов счетов вышестоящих уровней.
Возвращает: строковое значение - код счета без кодов счетов вышестоящих уровней."
    },
    {"Item","AST","Блокировка","Locking",
"Блокировка(<?>);",
"Locking(<?>);",
"@Синтаксис:
Блокировка(<ВклВыкл>)
@Назначение:
Установить/прочитать режим блокировки. Если при вызове метода параметр <ВклВыкл> не задан, то возвращается режим блокировки до выполнения метода. Число: 1 - заблокирован; 0 - свободен. Если при вызове метода параметр <ВклВыкл> задан, то возвращается результат выполнения метода блокировки. Число: 1 - успешно; 0 - не получилось.
@Параметры:
<ВклВыкл> - необязательный параметр. Число: 1 - включить; 0 - выключить."
    },
    {"Item","A","Новый","New",
"Новый(<?>);",
"New(<?>);",
"@Синтаксис:
Новый(<ЕстьСубсчета>) 
@Назначение:
Создает новый счет.
@Параметры:
<ЕстьСубсчета> - числовое выражение - признак наличия субсчетов у создаваемого счета. Может принимать значения: 0 - счет не будет иметь субсчета; 1 - счет будет иметь субсчета. По умолчанию 0;"
    },
    {"Item","A","НазначитьТип","SetType",
"НазначитьТип(<?>,,,)",
"SetType(<?>,,,)",
"@Синтаксис:
НазначитьТип(<ИмяРеквизита>,<ИмяТипа>,<Длина>,<Точность>)
@Назначение:
Назначить тип для реквизита неопределенного типа.
@Параметры: 
<ИмяРеквизита> - строка с наименованием реквизита неопределенного типа, как он назван в конфигураторе.
<ИмяТипа> - строковое выражение - название типа данных (или Вид субконто), который назначается реквизиту. Например, ''Строка'', ''Число'', ''Справочник.Товары'', ''Документ.РасходнаяНакладная'' и т.п.
<Длина> - необязательный параметр. Число - длина поля представления данных. Имеет смысл только при задании числового или строкового типа.
<Точность> - необязательный параметр. Число знаков после десятичной точки. Имеет смысл только при задании числового типа."
    },
    {"Item","A","Записать","Write",
"Записать();",
"Write();",
"@Синтаксис:
Записать() 
@Назначение:
Выполняет запись (обновление) счета.
@Замечание. 
Если этот метод применяется в Модуле формы счета непосредственно к счету локального контекста, то данный метод отрабатывает те же действия, что и интерактивное нажатие пользователем кнопки с формулой ''#Записать''."
    },
    {"Item","A","Удалить","Delete",
"Удалить(<?>);",
"Delete(<?>);",
"@Синтаксис:
Удалить(<Режим>) 
@Назначение:
Удаляет (или помечает на удаление) текущий счет. 
@Параметры:
<Режим> - числовое выражение: 1 - непосредственное удаление; 0 - пометка на удаление. По умолчанию 1."
    },
    {"Item","A","СнятьПометкуУдаления","ClearDeleteMark",
"СнятьПометкуУдаления();",
"ClearDeleteMark();",
"@Синтаксис:
СнятьПометкуУдаления() 
@Назначение:
Снять пометку удаления счета."
    },
    },
 {"Folder","A","Модуль формы списка счетов","",
 {"Folder","A","Методы","",
    {"Item","A","ИспользоватьДату","UseDate",
"ИспользоватьДату(<?>)",
"UseDate(<?>)",
"@Синтаксис:
ИспользоватьДату(<Дата>) 
@Назначение:
Установить дату выборки периодических реквизитов формы списка счетов.
Возвращает: текущее значение используемой даты формы списка счетов (на момент до исполнения метода).
@Параметры:
<Дата> - выражение типа ''дата''."
    },
    {"Item","A","ИспользоватьПланСчетов","UseChartOfAccounts",
"ИспользоватьПланСчетов(<?>)",
"UseChartOfAccounts(<?>)",
"@Синтаксис:
ИспользоватьПланСчетов(<ПланСчетов>) 
@Назначение:
Устанавливает план счетов, который будет использован в форме списка счетов.
Возвращает: значение типа ''ПланСчетов''. Текущее значение плана счетов формы на момент до исполнения метода.
@Параметры:
<ПланСчетов> - значение типа ''ПланСчетов''."
    },
    {"Item","A","ИспользоватьРодителя","UseParent",
"ИспользоватьРодителя(<?>,)",
"UseParent(<?>,)",
"@Синтаксис:
ИспользоватьРодителя(<Родитель>,<ФлагИзменения>) 
@Назначение:
Устанавливает / выдает значение родителя (счета вышестоящего уровня), используемого для выборки счетов.
Возвращает: значение типа ''Счет''. Текущее значение используемого родителя на момент до исполнения метода.
@Параметры:
<Родитель> - необязательный параметр. Значение типа ''Счет'', устанавливаемое в качестве используемого родителя. Если параметр не указан - значение используемого родителя не изменяется.
<ФлагИзменения> - необязательный параметр. Этим флагом регулируется возможность интерактивного изменения родителя. 1 - пользователь может изменить родителя интерактивно, 0 - пользователь не может интерактивно изменить родителя. Значение по умолчанию: 1.
@Замечание:
Действие данного метода относится ко всему текущему списку счетов, который доступен в локальном контексте Модуля формы списка счетов. При добавлении нового субсчета текущего плана счетов данный параметр также будет являться свойством нового субсчета."
    },
    {"Item","A","ИспользоватьКорСчет","UseCorAccount",
"ИспользоватьКорСчет(<?>,)",
"UseCorAccount(<?>,)",
"@Синтаксис:
ИспользоватьКорСчет(<Счет>,<Корреспонденция>) 
@Назначение:
Установить счет для показа списка корреспондирующих счетов. Корреспондирующие счета задаются с помощью корректных проводок.
@Параметры:
<Счет> - выражение со значением счета.
<Корреспонденция> - число: 1 - дебетовый счет; 0 - кредитовый счет. 
@Замечание:
Действие данного метода относится ко всему текущему списку счетов, который доступен в локальном контексте Модуля формы списка счетов."
    },
    {"Item","A","ИерархическийСписок","HierarchicalList",
"ИерархическийСписок(<?>,)",
"HierarchicalList(<?>,)",
"@Синтаксис:
ИерархическийСписок(<ФлагИерарх>,<ФлагИзменения>) 
@Назначение:
Установить режим иерархического списка счетов. Возвращает значение флага иерархического списка для формы списка счетов (до применения метода).
@Параметры:
<ФлагИерарх> - флаг иерархического списка. 1 - иерархический список; 0 - неиерархический список.
<ФлагИзменения> - необязательный параметр. Этим флагом регулируется возможность интерактивного изменения флага иерархического списка. 1 - пользователь может изменить иерархичность интерактивно, 0 - пользователь не может интерактивно изменить иерархичность. 
@Замечание:
Действие данного метода относится ко всему текущему списку счетов, который доступен в локальном контексте Модуля формы списка счетов."
    },
    {"Item","A","РедактироватьВДиалоге","EditInForm",
"РедактироватьВДиалоге(<?>,);",
"EditInForm(<?>,);",
"@Синтаксис:
РедактироватьВДиалоге(<Способ>,<Разрешение>)
@Назначение:
Установить способ редактирования счета. Возвращает значение установленного на данный момент способа редактирования счета (до применения метода).
@Параметры: 
<Способ> - необязательный параметр. Способ редактирования счета: 1 - в диалоге; 0 - в строке.
<Разрешение> - необязательный параметр. Флаг разрешения пользователю менять способ редактирования: 1 - разрешить; 0 - запретить. 
@Замечание:
Метод доступен только в контексте Модуля формы списка счетов."
    },
    {"Item","A","ВыборГруппы","SelectGroup",
"ВыборГруппы(<?>)",
"SelectGroup(<?>)",
"@Синтаксис:
ВыборГруппы(<ФлагВыбГрупп>) 
@Назначение:
Устанавливает или сбрасывает признак выбора группы. Возвращает текущее числовое значение режима выборки групп (на момент до исполнения метода).
@Параметры:
<ФлагВыбГрупп> - необязательный параметр. Число: 1 - выбирать группы; 0 - не выбирать группы.
@Замечание:
Метод устанавливает режим выборки групп для формы списка счетов, которая открыта в режиме выбора или подбора счета. Открытие такой формы списка счетов обычно производится вызовом метода ''Выбрать'' или нажатием кнопки выбора, если выбираемый счет является элементом диалога. По умолчанию выбор группы разрешен. Режим, устанавливаемый данным методом для списка счетов, влияет на интерактивный выбор пользователем значения типа ''Счет'' из списка счетов (плана счетов). Установка режима позволяет разрешить или запретить пользователю выбирать счета-группы (счета, которые могут иметь субсчета)."
    },
    },
 {"Folder","A","Предопределенные","",
    {"Item","A","ПриВводеСтроки","OnNewLine",
"Процедура ПриВводеСтроки()
КонецПроцедуры",
"Procedure OnNewLine()
EndProcedure",
"@Синтаксис:
ПриВводеСтроки()
@Назначение:
Предопределенная процедура при интерактивном вводе новой строки списка счетов.
@Замечание:
Данная процедура может располагаться только в модуле формы списка счетов."
    },
    {"Item","A","ПриРедактированииНовойСтроки","OnEditNewLine",
"Процедура ПриРедактированииНовойСтроки()
КонецПроцедуры",
"Procedure OnEditNewLine()
EndProcedure",
"@Синтаксис:
ПриРедактированииНовойСтроки()
@Назначение:
Предопределенная процедура при интерактивном редактировании новой строки списка счетов.
@Замечание:
Данная процедура может располагаться только в модуле формы списка счетов."
    },
    {"Item","A","ПриНачалеРедактированияСтроки","OnStartEditLine",
"Процедура ПриНачалеРедактированияСтроки()
КонецПроцедуры",
"Procedure OnStartEditLine()
EndProcedure",
"@Синтаксис:
ПриНачалеРедактированияСтроки()
@Назначение:
Предопределенная процедура при начале интерактивного редактирования существующей строки списка счетов.
@Замечание:
Данная процедура может располагаться только в модуле формы списка счетов."
    },
    {"Item","A","ПриВыбореРодителя","OnSetParent",
"Процедура ПриВыбореРодителя(<?>)
КонецПроцедуры",
"Procedure OnSetParent(<?>)
EndProcedure",
"@Синтаксис:
ПриВыбореРодителя(<Счет>)
@Назначение:
Предопределенная процедура при интерактивной смене  родителя (следующий уровень, предыдущий уровень)
@Параметры:
<Счет> - значение Счета, который интерактивно установлен в качестве родителя.
@Замечание:
Данная процедура может располагаться только в модуле формы списка счетов."
    },
    {"Item","A","ПриВыбореСтроки","OnSelectLine",
"Процедура ПриВыбореСтроки()
КонецПроцедуры",
"Procedure OnSelectLine()
EndProcedure",
"@Синтаксис:
ПриВыбореСтроки()
@Назначение:
Предопределенная процедура при выборе строки списка.
@Замечание:
Режим обработки выбора строки (двойной щелчок мыши или клавиша Enter) предопределенной процедурой ПриВыбореСтроки включается в форме списка справочника, журнала, счетов, журнала операций, журнала проводок при помощи метода Форма.ОбработкаВыбораСтроки(1). Данная процедура может располагаться только в программном модуле формы."
    },
    {"Item","A","ПриЗаписи","OnWrite",
"Процедура ПриЗаписи(<?>)
КонецПроцедуры",
"Procedure OnWrite(<?>)
EndProcedure",
"@Синтаксис:
ПриЗаписи(<СписокПериодРекв>)
@Назначение:
Предопределенная процедура при интерактивной записи строки списка счетов.
@Параметры:
<СписокПериодРекв> - строка со списком изменяемых периодических реквизитов счета.
@Замечание:
Данная процедура может располагаться только в программных модулях форм списка счетов."
    },
    },
    },
 {"Folder","A","Модуль формы счета","",
 {"Folder","A","Методы","",
    {"Item","A","Модифицированность","Modify",
"Модифицированность()",
"Modify()",
"@Синтаксис:
Модифицированность()
@Назначение:
Возвращает 1 - если реквизиты формы счета были изменены; 0 - иначе.
@Замечание:
Метод доступен только в контексте Модуля формы счета и относится только к текущему счету."
    },
    },
 {"Folder","A","Предопределенные","",
    {"Item","A","ВводНового","InputNew",
"Процедура ВводНового(<?>,)
КонецПроцедуры",
"Procedure InputNew(<?>,)
EndProcedure",
"@Синтаксис:
ВводНового(<ПризнКопирования>,<ОбъектКопирования>)
@Назначение:
Предопределенная процедура при интерактивном вводе нового счета.
@Параметры:
<ПризнКопирования> - признак того, что объект введен копированием. Число: 1 - объект введен копированием, 0 - просто новый объект. Данный признак может быть использован для анализа необходимости инициализации реквизитов нового объекта.
<ОбъектКопирования> - объект, который был скопирован.
@Замечание:
Данная процедура может располагаться только в программном модуле формы счета."
    },
    {"Item","A","ПриЗаписи","OnWrite",
"Процедура ПриЗаписи(<?>)
КонецПроцедуры",
"Procedure OnWrite(<?>)
EndProcedure",
"@Синтаксис:
ПриЗаписи(<СписокПериодРекв>)
@Назначение:
Предопределенная процедура при интерактивной записи счета.
@Параметры:
<СписокПериодРекв> - строка со списком изменяемых периодических реквизитов счета.
@Замечание:
Данная процедура может располагаться только в программном модуле формы счета."
    },
    },
    },
    },
 {"Folder","A","Вид субконто","Subconto Kind",
 {"Folder","A","Атрибут ''ВидыСубконто''","",
    {"Item","A","ВидыСубконто","SubcontoKinds",
"ВидыСубконто",
"SubcontoKinds",
"@Синтаксис:
ВидыСубконто
@Назначение: 
атрибут глобального контекста для получения существующих значений типа ''ВидСубконто''. Не используется самостоятельно, а всегда используется с доступными ему атрибутами и методами."
    },
 {"Folder","A","Методы атрибута ''ВидыСубконто''","",
    {"Item","A","КоличествоЗначений","Count",
"КоличествоЗначений()",
"Count()",
"@Синтаксис:
КоличествоЗначений()
@Назначение: 
применяется к атрибуту глобального контекста ''ВидыСубконто'' и позволяет определить общее количество видов субконто, созданных в конфигурации.
Возвращает количество видов субконто конфигурации."
    },
    {"Item","A","ЗначениеПоНомеру","ValueByIndex",
"ЗначениеПоНомеру(<?>)",
"ValueByIndex(<?>)",
"@Синтаксис:
ЗначениеПоНомеру(<Номер>)
@Назначение: 
применяется к атрибуту глобального контекста ''ВидыСубконто'' и позволяет определить вид субконто, соответствующий номеру в списке видов субконто конфигурации.
Возвращает значение типа ''ВидСубконто'', соответствующее номеру заданной позиции.
@Параметры: 
<Номер> - числовое выражение. Номер позиции вида субконто, заданный в конфигураторе."
    },
    {"Item","A","ЗначениеПоИдентификатору","ValueByIdentifier",
"ЗначениеПоИдентификатору(<?>)",
"ValueByIdentifier(<?>)",
"@Синтаксис:
ЗначениеПоИдентификатору(<Идентификатор>)
@Назначение:
применяется к атрибуту глобального контекста ''ВидыСубконто'' и позволяет определить вид субконто, соответствующий заданному идентификатору. Возвращает значение вида субконто. Если значение не найдено - то возвращается пустое значение.
@Параметры:
<Идентификатор> - строковое выражение. Идентификатор вида субконто, заданный в конфигураторе."
    },
    },
    },
 {"Folder","A","Методы типа данных ''ВидСубконто''","",
    {"Item","A","Выбран","Selected",
"Выбран()",
"Selected()",
"@Синтаксис:
Выбран()
@Назначение: 
метод позволяет определить - пусто значение типа ''ВидСубконто'' или нет.
Возвращает числовое значение: 1 - значение не пусто; 0 - значение пусто."
    },
    {"Item","A","ПорядковыйНомер","Number",
"ПорядковыйНомер()",
"Number()",
"@Синтаксис:
ПорядковыйНомер()
@Назначение: 
Метод позволяет определить порядковый номер вида субконто среди видов субконто, созданных в конфигурации.
Возвращает числовое значение: порядковый номер вида субконто среди видов субконто, созданных в конфигурации."
    },
    {"Item","A","ТипСубконто","SubcontoType",
"ТипСубконто()",
"SubcontoType()",
"@Синтаксис:
ТипСубконто()
@Назначение: 
Метод позволяет определить тип субконто, как он определен в конфигурации.
Возвращает строковое значение, описывающее тип субконто, например ''Справочник.Контрагенты''."
    },
    {"Item","A","Идентификатор","Identifier",
"Идентификатор()",
"Identifier()",
"@Синтаксис:
Идентификатор()
@Назначение: 
Возвращает строку - идентификатор вида субконто как он задан в метаданных."
    },
    },
    },
 {"Folder","A","Операции и проводки","Operations and Entries",
 {"Folder","A","Атрибуты","",
    {"Item","A","<РеквизитОперации>","<OperAttribute>",
"<РеквизитОперации>",
"<OperAttribute>",
"@Синтаксис:
<РеквизитОперации>
@Назначение:
Доступ к значению дополнительного реквизита '<РеквизитОперации>' выбранной  операции, где
<РеквизитОперации> - название реквизита операции, как оно задано в конфигураторе."
    },
    {"Item","A","<РеквизитПроводки>","<EntryAttribute>",
"<РеквизитПроводки>",
"<EntryAttribute>",
"@Синтаксис:
<РеквизитПроводки>
@Назначение:
Доступ к значению дополнительного реквизита '<РеквизитПроводки>' выбранной  проводки, где
<РеквизитПроводки> - название реквизита проводки, как оно задано в конфигураторе."
    },
    {"Item","A","ДатаОперации","OperDate",
"ДатаОперации",
"OperDate",
"@Синтаксис:
ДатаОперации
@Назначение:
Атрибут содержит дату бухгалтерской операции."
    },
    {"Item","A","Содержание","Description",
"Содержание",
"Description",
"@Синтаксис:
Содержание
@Назначение:
Атрибут служит для обращения к содержанию бухгалтерской операции."
    },
    {"Item","A","СуммаОперации","OperSum",
"СуммаОперации",
"OperSum",
"@Синтаксис:
СуммаОперации
@Назначение:
Атрибут служит для обращения к сумме бухгалтерской операции."
    },
    {"Item","A","Документ","Document",
"Документ",
"Document",
"@Синтаксис:
Документ
@Назначение:
Атрибут служит для обращения к документу, котрому принадлежит бухгалтерская операция. Является атрибутом ''только для чтения''."
    },
    {"Item","A","Сумма","Sum",
"Сумма",
"Sum",
"@Синтаксис:
Сумма
@Назначение:
Атрибут служит для обращения к сумме выбранной проводки (корреспонденции) операции."
    },
    {"Item","A","Валюта","Currency",
"Валюта",
"Currency",
"@Синтаксис:
Валюта
@Назначение:
Атрибут служит для обращения к валюте выбранной проводки или корреспонденции операции."
    },
    {"Item","A","ВалСумма","CurSum",
"ВалСумма",
"CurSum",
"@Синтаксис:
ВалСумма
@Назначение:
Атрибут служит для обращения к сумме в валюте выбранной проводки или корреспонденции операции."
    },
    {"Item","A","Количество","Amount",
"Количество",
"Amount",
"@Синтаксис:
Количество
@Назначение:
Атрибут служит для обращению к количеству выбранной проводки или корреспонденции операции."
    },
 {"Folder","A","Дебет","Debit",
 {"Folder","A","Атрибуты","",
    {"Item","A","Счет","Account",
"Дебет.Счет",
"Debit.Account",
"@Синтаксис:
Дебет.Счет
@Назначение:
Атрибут служит для доступа к счету дебета проводки или корреспонденции операции."
    },
    {"Item","A","<Субконто>","<Subconto>",
"Дебет.<Субконто>",
"Debit.<Subconto>",
"@Синтаксис:
Дебет.<Субконто>
@Назначение:
Атрибут служит для доступа к cубконто дебета проводки (корреспонденции) выбранной операции, где
<Субконто> - название cубконто счета дебета, как оно задано в конфигураторе."
    },
    },
 {"Folder","A","Методы","",
    {"Item","A","Субконто","Subconto",
"Дебет.Субконто(<?>,)",
"Debit.Subconto(<?>,)",
"@Синтаксис:
Дебет.Субконто(<НомерСубконто>|<ВидСубконто>,<Субконто>)
@Назначение:
Обращение к субконто дебета проводки (корреспонденции) операции. Если при использовании метода Субконто первым параметром передается порядковый номер субконто или вид субконто, то метод возвратит значение субконто, имеющего этот номер. Если вторым параметром передается значение субконто, метод присваивает указанное значение виду субконто проводки.
Возвращает: если указан порядковый номер вида субконто или вид субконто, метод возвращает значение типа ''ВидСубконто''.
@Параметры:
<НомерСубконто> - числовое выражение - порядковый номер субконто.  По умолчанию 1.
<ВидСубконто> - значение типа ''ВидСубконто'', которое должно быть установлено. Необязательный параметр.
<Субконто> - значение субконто. Параметр необязательный. Если параметр не задан - значение не изменяется."
    },
    {"Item","A","ПредставлениеСубконто","SubcontoPresentation",
"Дебет.ПредставлениеСубконто(<?>,)",
"Debit.SubcontoPresentation(<?>,)",
"@Синтаксис:
Дебет.ПредставлениеСубконто(<НомерСубконто>|<ВидСубконто>,<Режим>)
@Назначение:
Представление субконто дебета проводки (корреспонденции) операции.
Возвращает: символьная строка - представление субконто.
@Параметры:
<НомерСубконто> - числовое выражение - порядковый номер субконто.  По умолчанию 1.
<ВидСубконто> - идентификатор вида субконто.
<Режим> - числовое выражение - признак полноты выдачи представления субконто. Может принимать значения: 0 - полное представление; 1 - краткое представление. По умолчанию 0.
    Краткое представление субконто - представление значения субконто соответствующего типа, заданное в Конфигураторе, либо формируемое в соответствии с правилами преобразования типов. Например, для субконто типа ''Справочник'' краткое представление будет зависеть от свойства ''Основное представение'', определенного для этого справочника; для  субконто типа ''Перечисление'' краткое представление (впрочем, как и полное), будет представлением значения перечисления; для субконто типа ''Документ'' кратким представлением будет идентификатор или синоним документа, его номер и дата.
    Полное представление субконто - это представление, заданное в свойствах данного вида субконто в Конфигураторе. Для задания представления используются управляющие элемнты закладки ''Представление'' в палитре свойств."
    },
    },
    },
 {"Folder","A","Кредит","Credit",
 {"Folder","A","Атрибуты","",
    {"Item","A","Счет","Account",
"Кредит.Счет",
"Credit.Account",
"@Синтаксис:
Кредит.Счет
@Назначение:
Атрибут служит для доступа к счету кредита проводки или корреспонденции операции."
    },
    {"Item","A","<Субконто>","<Subconto>",
"Кредит.<Субконто>",
"Credit.<Subconto>",
"@Синтаксис:
Кредит.<Субконто>
@Назначение:
Атрибут служит для доступа к cубконто кредита проводки (корреспонденции) выбранной операции, где
<Субконто> - название cубконто счета кредита, как оно задано в конфигураторе."
    },
    },
 {"Folder","A","Методы","",
    {"Item","A","Субконто","Subconto",
"Кредит.Субконто(<?>,)",
"Credit.Subconto(<?>,)",
"@Синтаксис:
Кредит.Субконто(<НомерСубконто>|<ВидСубконто>,<Субконто>)
@Назначение:
Обращение к субконто кредита проводки (корреспонденции) операции. Если при использовании метода Субконто первым параметром передается порядковый номер субконто или вид субконто, то метод возвратит значение субконто, имеющего этот номер. Если вторым параметром передается значение субконто, метод присваивает указаное значение виду субконто проводки.
Возвращает: если указан порядковый номер вида субконто или вид субконто, метод возвращает значение типа ''ВидСубконто''.
@Параметры:
<НомерСубконто> - числовое выражение - порядковый номер субконто.  По умолчанию 1.
<ВидСубконто> - значение типа ''ВидСубконто'', которое должно быть установлено. Необязательный параметр.
<Субконто> - значение субконто. Параметр необязательный. Если параметр не задан - значение не изменяется."
    },
    {"Item","A","ПредставлениеСубконто","SubcontoPresentation",
"Кредит.ПредставлениеСубконто(<?>,)",
"Credit.SubcontoPresentation(<?>,)",
"@Синтаксис:
Кредит.ПредставлениеСубконто(<НомерСубконто>|<ВидСубконто>,<Режим>)
@Назначение:
Представление субконто кредита проводки (корреспонденции) операции.
Возвращает: символьная строка - представление субконто.
@Параметры:
<НомерСубконто> - числовое выражение - порядковый номер субконто.  По умолчанию 1.
<ВидСубконто> - идентификатор вида субконто.
<Режим> - числовое выражение - признак полноты выдачи представления субконто. Может принимать значения: 0 - полное представление; 1 - краткое представление. По умолчанию 0.
    Краткое представление субконто - представление значения субконто соответствующего типа, заданное в Конфигураторе, либо формируемое в соответствии с правилами преобразования типов. Например, для субконто типа ''Справочник'' краткое представление будет зависеть от свойства ''Основное представение'', определенного для этого справочника; для  субконто типа ''Перечисление'' краткое представление (впрочем, как и полное), будет представлением значения перечисления; для субконто типа ''Документ'' кратким представлением будет идентификатор или синоним документа, его номер и дата.
    Полное представление субконто - это представление, заданное в свойствах данного вида субконто в Конфигураторе. Для задания представления используются управляющие элемнты закладки ''Представление'' в палитре свойств."
    },
    },
    },
    },
 {"Folder","A","Методы","",
    {"Item","A","ВыбратьОперации","SelectOpers",
"ВыбратьОперации(<?>,)",
"SelectOpers(<?>,)",
"@Синтаксис:
ВыбратьОперации(<НачалоПериода>,<КонецПериода>)
@Назначение:
Открывает выборку операций за период.
Возвращает: 1 - действие выполнено и в выборке есть хотя бы одна операция;  0 - действие не выполнено или в выборке нет ни одной операции.
@Параметры:
<НачалоПериода> - дата, документ или позиция начала периода выбора операций. Необязательный параметр.
<КонецПериода> - дата, документ или позиция конца периода выбора операций. Необязательный параметр."
    },
    {"Item","A","ПолучитьОперацию","GetOper",
"ПолучитьОперацию()",
"GetOper()",
"@Синтаксис:
ПолучитьОперацию()
@Назначение:
выбирает очередную операцию из выборки, открытой при помощи метода ''ВыбратьОперации''.
Возвращает: 1 - операция выбрана успешно; 0 - операция не выбрана (отсутствует)."
    },
    {"Item","A","НайтиОперацию","FindOper",
"НайтиОперацию(<?>)",
"FindOper(<?>)",
"@Синтаксис:
НайтиОперацию(<Документ>)
@Назначение:
осуществляет поиск операции по значению типа ''Документ''.
Возвращает: 1 - действие выполнено, операция найдена; 0 - действие не выполнено, операция не найдена.
@Параметры:
<Документ> - значение типа ''Документ''."
    },
    {"Item","A","Выбрана","Selected",
"Выбрана()",
"Selected()",
"@Синтаксис:
Выбрана()
@Назначение:
определяет, спозиционирован ли объект в настоящий момент на некоторой операции или нет.
Возвращает: 1 - операция выбрана; 0 - операция не выбрана."
    },
    {"Item","A","УстановитьАтрибут","SetAttrib",
"УстановитьАтрибут(<?>,);",
"SetAttrib(<?>,);",
"@Синтаксис:
УстановитьАтрибут(<ИмяРеквизита>,<Значение>)
@Назначение:
Установить значение атрибута по имени идентификатора.
@Параметры:
<ИмяРеквизита> - строковое выражение, содержащее имя атрибута, как оно задано в конфигураторе.
<Значение> - выражение, содержащее устанавливаемое значение атрибута."
    },
    {"Item","A","ПолучитьАтрибут","GetAttrib",
"ПолучитьАтрибут(<?>);",
"GetAttrib(<?>);",
"@Синтаксис:
ПолучитьАтрибут(<ИмяРеквизита>)
@Назначение:
Получить значение атрибута по имени идентификатора. Возвращает значение атрибута.
@Параметры:
<ИмяРеквизита> - строковое выражение, содержащее имя атрибута, как оно задано в конфигураторе."
    },
    {"Item","A","ПланСчетов","ChartOfAccounts",
"ПланСчетов()",
"ChartOfAccounts()",
"@Синтаксис:
ПланСчетов()
@Назначение:
Выдает план счетов текущей проводки.
Возвращает значение типа ''План Счетов''."
    },
    {"Item","A","ВыбратьОперацииСПроводками с фильтром","SelectOpersAndEntries",
"ВыбратьОперацииСПроводками(<?>,,,,,)",
"SelectOpersAndEntries (<?>,,,,,)",
"@Синтаксис:
ВыбратьОперацииСПроводками(<НачалоПериода>,<КонецПериода>,<Фильтр>,<Валюта>,<ПланСчетов>,<РазделительУчета>) 
@Назначение:
Открывает выборку оперций с проводками за указанный период. В данном варианте основные условия отбора задаются специальной строкой-фильтром.
Возвращает: 1 - действие выполнено и в выборке есть хотя бы одна проводка; 0 - действие не выполнено или в выборке нет ни одной проводки.
@Параметры:
<НачалоПериода> - дата, документ или позиция начала периода выбора операций. Необязательный параметр.
<КонецПериода> - дата, документ или позиция конца периода выбора операций. Необязательный параметр.
<Фильтр> - условие отбора проводок. Необязательный параметр. Здесь задаются критерии отбора проводок для включения в выборку. Если параметр не заполнен, в выборку включаются все проводки. В качестве значения данного параметра можно передавать строку, в которой могут находиться одна или несколько корреспонденций счетов или символьных строк, разделяемых точкой с запятой '';''.
<Валюта> - значание типа ''справочник'' (вида справочника, используемого для валютного учета) - признак отбора проводок по валюте. Необязательный параметр.
<ПланСчетов> - значение типа ''План Счетов''. Если параметр не указан, то по всем планам счетов.
<РазделительУчета> - значение разделителя учета. Если параметр не указан - по всем значениям разделителя учета."
    },
    {"Item","A","ВыбратьОперацииСПроводками с указанием счета и корр. счета.","SelectOpersAndEntries",
"ВыбратьОперацииСПроводками(<?>,,,,,)",
"SelectOpersAndEntries (<?>,,,,,)",
"@Синтаксис:
ВыбратьОперацииСПроводками(<НачалоПериода>,<КонецПериода>,<Счет>,<КорСчет>,<Флаг>,<Валюта>,<ПланСчетов>,<РазделительУчета>)
@Назначение:
Открывает выборку операций с проводками за указанный период. В данном варианте основные условия отбора задаются указанием счета и корреспондирующего счета.
Возвращает: 1 - действие выполнено и в выборке есть хотя бы одна проводка; 0 - действие не выполнено или в выборке нет ни одной проводки.
@Параметры:
<НачалоПериода> - дата, документ или позиция начала периода выбора операций. Необязательный параметр.
<КонецПериода> - дата, документ или позиция конца периода выбора операций. Необязательный параметр.
<Счет> - счет, по которому будут отбираться проводки.
<КорСчет> - корреспондирующий счет, по которому будут отбираться проводки. Параметр имеет смысл, если указан параметр <Счет>.
<Флаг> - признак вида оборота. Параметр может принимать значения: 1 - отбирать проводки только по дебету счета; 2  - отбирать проводки только по кредиту счета; 3 - отбирать проводки и по дебету, и по кредиту. По умолчанию 3.
<Валюта> - значание типа ''справочник'' (вида справочника, используемого для валютного учета) - признак отбора проводок по валюте. Необязательный параметр.
<ПланСчетов> - значение типа ''ПланСчетов''. Если параметр не указан, то по всем планам счетов.
<РазделительУчета> - значение разделителя учета. Если параметр не указан - по всем значениям разделителя учета."
    },
    {"Item","A","ИспользоватьСубконто","UseSubconto",
"ИспользоватьСубконто(<?>,);",
"UseSubconto (<?>,);",
"@Синтаксис:
ИспользоватьСубконто(<ВидСубконто>,<Субконто>)
@Назначение:
Задает фильтр по субконто для функции ВыбратьОперацииСПроводками. Метод может вызываться последовательно несколько раз. В этом случае фильтры, устанавливаемые этой функцией, суммируются.
@Параметры:
<ВидСубконто> - значение типа ''ВидСубконто'' - отбор проводок будет выполнен только для субконто указанного вида.
<Субконто> - значение субконто - отбор проводок будет выполнен только для указанного субконто. Кроме того, в качестве значения данного параметра можно передавать ''Список значений''."
    },
    {"Item","A","ИспользоватьКорСубконто","UseCorSubconto",
"ИспользоватьКорСубконто(<?>,);",
"UseCorSubconto (<?>,);",
"@Синтаксис:
ИспользоватьКорСубконто(<ВидСубконто>,<Субконто>)
@Назначение:
Задает фильтр по корреспондирующим субконто для функции ВыбратьОперацииСПроводками. Метод может вызываться последовательно несколько раз. В этом случае фильтры, устанавливаемые этой функцией, суммируются.
@Параметры:
<ВидСубконто> - значение типа ''ВидСубконто'' - отбор проводок будет выполнен только для корреспондирующих субконто указанного вида.
<Субконто> - значение субконто - отбор проводок будет выполнен только для указанного корреспондирующего субконто.  Кроме того, в качестве значения данного параметра можно передавать ''Список значений''."
    },
    {"Item","A","ВыбратьПоЗначению","SelectByValue",
"ВыбратьПоЗначению(<?>,,,)",
"SelectByValue(<?>,,,)",
"@Синтаксис:
ВыбратьПоЗначению(<НачалоПериода>,<КонецПериода>,<ВидОтбора>,<ЗначениеОтбора>)
@Назначение:
Открывает выборку операций или проводок, отобранных по значению отбора.
Возвращает: 1 - действие выполнено и в выборке есть хотя бы одна операция  или проводка; 0 - действие не выполнено или в выборке нет ни одной операции или проводки.
@Параметры:
<НачалоПериода> - дата, документ или позиция начала периода выбора операций. Необязательный параметр.
<КонецПериода> - дата, документ или позиция конца периода выбора операций. Необязательный параметр.
<ВидОтбора> - символьная строка - название вида отбора. 
<ЗначениеОтбора> - значение отбора вида, указанного в параметре <ВидОтбора>."
    },
    {"Item","A","ВыбратьПроводки","SelectEntries",
"ВыбратьПроводки()",
"SelectEntries ()",
"@Синтаксис:
ВыбратьПроводки()
@Назначение:
Открывает выборку проводок текущей операции.
Возвращает: 1 - действие выполнено и в выборке есть хотя бы одна проводка;  0 -действие не выполнено или в выборке нет ни одной проводки."
    },
    {"Item","A","ПолучитьПроводку","GetEntry",
"ПолучитьПроводку()",
"GetEntry()",
"@Синтаксис:
ПолучитьПроводку()
@Назначение:
Получить проводку из выборки, открытой методом ''ВыбратьПроводки''.
Возвращает: 1 - следующая проводка выбрана успешно; 0 - следующая проводка не выбрана (отсутствует)."
    },
    {"Item","A","ПроводкаВыбрана","EntrySelected",
"ПроводкаВыбрана()",
"EntrySelected()",
"@Синтаксис:
ПроводкаВыбрана()
@Назначение:
определяет, спозиционирована ли в настоящий момент данная проводка в операции или нет.
Возвращает: 1 - проводка выбрана;  0 - проводка не выбрана."
    },
    {"Item","A","КоличествоПроводок","EntriesCount",
"КоличествоПроводок()",
"EntriesCount()",
"@Синтаксис:
КоличествоПроводок()
@Назначение:
Оперделяет количество проводок в операции, включая и проводки и корреспонденции.
Возвращает: целое число - количество проводок в текущей операции."
    },
    {"Item","A","ПолучитьПроводкуПоНомеру","GetEntryByNumber",
"ПолучитьПроводкуПоНомеру(<?>,)",
"GetEntryByNumber (<?>,)",
"@Синтаксис:
ПолучитьПроводкуПоНомеру(<НомерПроводки>,<НомерКорреспонденции>)
@Назначение:
Выбрать в качестве текущей проводку по ее номеру и номеру корреспонденции.
Возвращает: 0 - проводка не найдена; 1 - проводка найдена.
@Параметры:
<НомерПроводки> - номер проводки в операции. По умолчанию 1.
<НомерКорреспонденции> - номер корреспонденции в проводке. Параметр имеет смысл, если указан параметр <НомерПроводки>."
    },
    {"Item","A","Пров","Entry",
"Пров(<?>,)",
"Entry (<?>,)",
"@Синтаксис:
Пров(<НомерПроводки>,<НомерКорреспонденции>)
@Назначение:
Специальный метод, позволяющий обратиться непосредственно к данным проводки операции по номеру, без установки текущей проводки. Возвращаемое методом значение является ссылкой на проводку. Оно не может использоваться как значение, а предназначено только для доступа к атрибутам проводки. В основном метод ''Пров'' имеет смысл применять в формулах типовых операций. 
Возвращает: ссылка на указанную проводку.
@Параметры:
<НомерПроводки> - номер проводки в операции. По умолчанию 1.
<НомерКорреспонденции> - номер корреспонденции в проводке. Параметр имеет смысл, если указан параметр <НомерПроводки>."
    },
    {"Item","A","НомерПроводки","EntryNumber",
"НомерПроводки()",
"EntryNumber ()",
"@Синтаксис:
НомерПроводки()
@Назначение:
Определяет номер текущей проводки.
Возвращает: номер проводки (не абсолютный, а именно номер проводки без учета корреспонденций)."
    },
    {"Item","A","НомерКорреспонденции","CorrespondenceNumber",
"НомерКорреспонденции()",
"CorrespondenceNumber ()",
"@Синтаксис:
НомерКорреспонденции()
@Назначение:
Определяет номер текущей корреспонденции в операции.
Возвращает: номер корреспонденции, 1 - если проводка не сложная."
    },
    {"Item","A","СложнаяПроводка","ComplexEntry",
"СложнаяПроводка()",
"ComplexEntry()",
"@Синтаксис:
СложнаяПроводка()
@Назначение:
Определяет, является ли текущая проводка сложной.
Возвращает: 1 - текущая проводка является сложной; 0 - текущая проводка не является сложной."
    },
    {"Item","A","НомерСтрокиДокумента","DocLineNum",
"НомерСтрокиДокумента()",
"DocLineNum()",
"@Синтаксис:
НомерСтрокиДокумента()
@Назначение:
Выдает номер строки документа, по которой сформирована текущая проводка.
Возвращает: номер строки документа, сформировавшей данную проводку."
    },
    {"Item","A","ПредставлениеПроводки","EntryPresentation",
"ПредставлениеПроводки(<?>)",
"EntryPresentation(<?>)",
"@Синтаксис:
ПредставлениеПроводки(<ПоСубконто>)
@Назначение:
Получить представление для текущей проводки.
Возвращает: строку - представление для текущей проводки.
@Параметры:
<ПоСубконто> - необязательный параметр.  Режим включения в представление проводки представления субконто проводки. Число: 0 - не включать представление субконто; 1 - включать краткое представление субконто; 2 -  включать полное представление субконто. Значение по умолчанию: 0.
    Краткое представление субконто - представление значения субконто соответствующего типа, заданное в Конфигураторе, либо формируемое в соответствии с правилами преобразования типов. Например, для субконто типа ''Справочник'' краткое представление будет зависеть от свойства ''Основное представение'', определенного для этого справочника; для  субконто типа ''Перечисление'' краткое представление (впрочем, как и полное), будет представлением значения перечисления; для субконто типа ''Документ'' кратким представлением будет идентификатор или синоним документа, его номер и дата.
    Полное представление субконто - это представление, заданное в свойствах данного вида субконто в Конфигураторе. Для задания представления используются управляющие элемнты закладки ''Представление'' в палитре свойств."
    },
    {"Item","A","ПредставлениеСубконто","SubcontoPresentation",
"ПредставлениеСубконто()",
"SubcontoPresentation()",
"@Синтаксис:
ПредставлениеСубконто()
@Назначение:
Получить представление для субконто текущей проводки.
Возвращает: строку - представление субконто текущей проводки."
    },
    {"Item","A","Новая","New",
"Новая();",
"New();",
"@Синтаксис:
Новая()
@Назначение:
Создать новую операцию."
    },
    {"Item","A","НазначитьТип","SetType",
"НазначитьТип(<?>,,,)",
"SetType(<?>,,,)",
"@Синтаксис:
НазначитьТип(<ИмяРеквизита>,<ИмяТипа>,<Длина>,<Точность>)
@Назначение:
Назначить тип для реквизита неопределенного типа.
@Параметры: 
<ИмяРеквизита> - строка с наименованием реквизита неопределенного типа, как он назван в конфигураторе.
<ИмяТипа> - строковое выражение - название типа данных (или Вид субконто), который назначается реквизиту. Например, ''Строка'', ''Число'', ''Справочник.Товары'', ''Документ.РасходнаяНакладная'' и т.п.
<Длина> - необязательный параметр. Число - длина поля представления данных. Имеет смысл только при задании числового или строкового типа.
<Точность> - необязательный параметр. Число знаков после десятичной точки. Имеет смысл только при задании числового типа."
    },
    {"Item","A","Записать","Write",
"Записать();",
"Write();",
"@Синтаксис:
Записать()
@Назначение:
Записать измененную или новую операцию.
@Замечание: 
Этот метод может применяеться в Модуле формы операции непосредственно к операции локального контекста, в этом случае данный метод отрабатывает те же действия, что и интерактивное нажатие пользователем кнопки с формулой ''#Записать''.
При записи сложной проводки, если у главной корреспонденции сложной проводки не указана сумма (равна 0), то она автоматически вычисляется на основании подчиненных корреспонденций."
    },
    {"Item","A","ЗаписатьПроводки","WriteEntries",
"ЗаписатьПроводки();",
"WriteEntries();",
"@Синтаксис:
ЗаписатьПроводки()
@Назначение:
Предназначен для записи в информационную базу уже добавленных и заполненных проводок операции.
@Замечание:
Метод может использоваться только для атрибута ''Операция'' документа в момент проведения (в процедуре ОбработкаПроведения). При этом происходит обновление бухгалтерских итогов. Это позволяет при проведении документа обращаться к бухгалтерским итогам, уже измененным проводками, записанными этим документом. После выполнения метода ЗаписатьПроводки() и до окончания процедуры ОбработкаПроведение уже невозможно изменять или удалять проводки, добавленные до вызова этого метода.
Данный метод имеет смысл использовать, только в том случае, если существует необходимость обращения к итогам, измененным проводками записываемой операции. При записи сложной проводки, если у главной корреспонденции сложной проводки не указана сумма (равна 0), то она автоматически вычисляется на основании подчиненных корреспонденций."
    },
    {"Item","A","Удалить","Delete",
"Удалить(<?>);",
"Delete(<?>);",
"@Синтаксис:
Удалить(<Режим>)
@Назначение:
Удаление операции.
@Параметры:
<Режим> - числовое выражение:  1 - непосредственное удаление; 0 - пометка на удаление. Необязательный параметр. Значение по умолчанию - 1."
    },
    {"Item","A","ПометкаУдаления","DeleteMark",
"ПометкаУдаления()",
"DeleteMark()",
"@Синтаксис:
ПометкаУдаления()
@Назначение:
Проверяет наличие пометки на удаление текущей операции.
Возвращает: 1 - операция помечена на удаление;   0 - операция не помечена на удаление."
    },
    {"Item","A","СнятьПометкуУдаления","ClearDeleteMark",
"СнятьПометкуУдаления();",
"ClearDeleteMark();",
"@Синтаксис:
СнятьПометкуУдаления()
@Назначение:
Снять пометку удаления операции."
    },
    {"Item","A","ПолучитьВремя","GetTime",
"ПолучитьВремя(<?>,,)",
"GetTime(<?>,,)",
"@Синтаксис:
ПолучитьВремя(<Часы>,<Минуты>,<Секунды>)
@Назначение:
Получить время текущей операции.
Возвращает: строковое значение времени в виде 'ЧЧ.ММ.СС'.
@Параметры:
<Часы> - идентификатор переменной, в которую метод возвращает число - час времени операции. Необязательный параметр.
<Минуты> - идентификатор переменной, в которую метод возвращает число - минуты времени операции. Необязательный параметр.
<Секунды> - идентификатор переменной, в которую метод возвращает число - секунды времени операции. Необязательный параметр."
    },
    {"Item","A","УстановитьВремя","SetTime",
"УстановитьВремя(<?>,,);",
"SetTime(<?>,,);",
"@Синтаксис:
УстановитьВремя(<Часы>,<Минуты>,<Секунды>)
@Назначение:
Задает время текущей операции.
@Параметры:
<Часы> - число: час операции. Необязательный параметр.
<Минуты> - число: минуты операции. Необязательный параметр.
<Секунды> - число: секунды операции. Необязательный параметр."
    },
    {"Item","A","ПолучитьДокумент","GetDocument",
"ПолучитьДокумент()",
"GetDocument()",
"@Синтаксис:
ПолучитьДокумент()
@Назначение:
Получить документ, которому принадлежит операция.
Возвращает: значение типа ''Документ''."
    },
    {"Item","A","ВключитьПроводки","EntriesOn",
"ВключитьПроводки(<?>)",
"EntriesOn(<?>)",
"@Синтаксис:
ВключитьПроводки(<Флаг>)
@Назначение:
Включает/выключает проводки операции.
Возвращает: состояние на момент вызова метода. 1 - проводки операции включены; 0 - проводки операции выключены.
@Параметры:
<Флаг> - число: 1 - включить проводки операции; 0 - выключить проводки операции. Если параметр не передан - состояние не изменяется."
    },
    {"Item","A","НоваяПроводка","NewEntry",
"НоваяПроводка();",
"NewEntry();",
"@Синтаксис:
НоваяПроводка()
@Назначение:
Создать новую проводку для текущей операции. Новая проводка становится текущей."
    },
    {"Item","A","НоваяКорреспонденция","NewCorrespondence",
"НоваяКорреспонденция();",
"NewCorrespondence();",
"@Синтаксис:
НоваяКорреспонденция()
@Назначение:
Создает новую корреспонденцию проводки. Данный метод предназначен для формирования сложных проводок, состоящих из нескольких корреспонденций."
    },
    {"Item","A","ПроверитьПроводку","CheckEntry",
"ПроверитьПроводку();",
"CheckEntry();",
"@Синтаксис:
ПроверитьПроводку()
@Назначение:
Проверить проводку на соответствие корректным проводкам. Возвращает число: 1 - проводка соответствует корректным проводкам; 0 - не соответствует."
    },
    {"Item","A","УдалитьПроводку","DeleteEntry",
"УдалитьПроводку();",
"DeleteEntry();",
"@Синтаксис:
УдалитьПроводку()
@Назначение:
Удаляет текущую проводку или корреспонденцию операции."
    },
    },
 {"Folder","A","Модуль формы журнала проводок","",
 {"Folder","A","Методы","",
    {"Item","A","ВидыОтбора","KindsOfSelection",
"ВидыОтбора(<?>)",
"KindsOfSelection(<?>)",
"@Синтаксис:
ВидыОтбора(<СписокОтборов>)
@Назначение:
Установить доступные виды отборов журнала проводок для вызова их в интерактивном режиме.
Возвращает: строковое значение, содержащее текущий список имен отборов для журнала, разделенных запятыми (на момент до исполнения метода).
@Параметры: 
<СписокОтборов> - строка со списком имен отборов для журнала через запятую, или '*' - для всех видов отборов.
@Замечание:
Метод доступен только в контексте Модуля формы журнала проводок."
    },
    {"Item","A","ЗакладкиОтбора","TabCtrlSelection",
"ЗакладкиОтбора(<?>,,,);",
"TabCtrlSelection(<?>,,,);",
"@Синтаксис:
ЗакладкиОтбора(<ИмяОтбора>,<ВИнтервалеЖурнала>,<УстановитьНаЗначение>,<ЗначениеОтбора>)
@Назначение:
Установить в форме журнала проводок закладки для интерактивного осуществления отбора.
@Параметры: 
<ИмяОтбора - строка с именем отбора;
<ВИнтервалеЖурнала> - число: 1 - значения отбора выбираются по операциям в установленном интервале журнала, 0 - значения отбора выбираются по всем проводкам журнала;
<УстановитьНаЗначение> - число: 1 - сразу выбирается отбор по параметру <ЗначениеОтбора>;  0 - отбор устанавливается на первое существующее значение; По умолчанию - 0.
<ЗначениеОтбора> - значение отбора.
@Замечание:
Метод доступен только в контексте Модуля формы журнала проводок."
    },
    {"Item","A","УстановитьОтбор","SetSelection",
"УстановитьОтбор(<?>,);",
"SetSelection(<?>,);",
"@Синтаксис:
УстановитьОтбор(<ИмяОтбора>,<ЗначениеОтбора>)
@Назначение:
Установить отбор журнала проводок.
@Параметры: 
<ИмяОтбора> - строка с именем отбора (если пусто - отбор отключается);
<ЗначениеОтбора> - значение отбора.
@Замечание:
Метод доступен только в контексте Модуля формы журнала проводок."
    },
    {"Item","A","ПолучитьОтбор","GetSelection",
"ПолучитьОтбор(<?>,)",
"GetSelection(<?>,)",
"@Синтаксис:
ПолучитьОтбор(<ИмяОтбора>,<ЗначениеОтбора>)
@Назначение:
Возвратить текущее значение отбора журнала проводок.
Возвращает: 1 - отбор включен, 0 - отбор не включен.
@Параметры: 
<ИмяОтбора> - идентификатор переменной для приема строки с именем отбора;
<ЗначениеОтбора> - идентификатор переменной для приема значения отбора.
@Замечание:
Метод доступен только в контексте Модуля формы журнала проводок."
    },
    {"Item","A","УстановитьИнтервал","SetRange",
"УстановитьИнтервал(<?>,,);",
"SetRange(<?>,,);",
"@Синтаксис:
УстановитьИнтервал(<ДатаНач>,<ДатаКон>,<ФлагИзменения>)
@Назначение:
Установить интервал журнала операций.
@Параметры: 
<ДатаНач> - дата начала интервала журнала операций;
<ДатаКон> - дата конца интервала журнала операций.
<ФлагИзменения> - необязательный параметр. Этим флагом регулируется возможность интерактивного изменения интервала журнала. 1 - пользователь может изменить интервал журнала интерактивно, 0 - пользователь не может интерактивно изменить интервал журнала. 
@Замечание:
Метод доступен только в контексте Модуля формы журнала проводок."
    },
    {"Item","A","НачалоИнтервала","BegOfRange",
"НачалоИнтервала()",
"BegOfRange()",
"@Синтаксис:
НачалоИнтервала()
@Назначение:
Возвращает дату начала интервала журнала проводок.
@Замечание:
Метод доступен только в контексте Модуля формы журнала проводок."
    },
    {"Item","A","КонецИнтервала","EndOfRange",
"КонецИнтервала()",
"EndOfRange()",
"@Синтаксис:
КонецИнтервала()
@Назначение:
Возвращает дату конца интервала журнала проводок.
@Замечание:
Метод доступен только в контексте Модуля формы журнала проводок."
    },
    },
 {"Folder","A","Предопределенные","",
    {"Item","A","ПриУстановкеОтбора","OnSetSelectInJournal",
"Процедура ПриУстановкеОтбора(<?>,)
КонецПроцедуры",
"Procedure OnSetSelectInJournal(<?>,)
EndProcedure",
"@Синтаксис:
ПриУстановкеОтбора(<ИмяОтбора>,<ЗначениеОтбора>)
@Назначение:
Предопределенная процедура, вызываемая при установке отбора в форме журнала проводок.
@Параметры:
<ИмяОтбора> - строковое значение. Наименование графы отбора, которая выбрана пользователем при интерактивной установке отбора.
<ЗначениеОтбора> - значение отбора, которое выбрано пользователем при интерактивной установке отбора. 
@Замечание:
Данная процедура может располагаться только в модуле формы журнала проводок."
    },
    {"Item","A","ПриПоказеПроводокПоДокументу","OnShowEntrysByDoc",
"Процедура ПриПоказеПроводокПоДокументу(<?>)
КонецПроцедуры",
"Procedure OnShowEntrysByDoc(<?>)
EndProcedure",
"@Синтаксис:
ПриПоказеПроводокПоДокументу(<Документ>)
@Назначение:
Предопределенная процедура, вызываемая при показе проводок по документу (операции).
@Параметры:
<Документ> - документ по которому выводятся проводки.
@Замечание:
Данная процедура может располагаться только в модуле формы журнала проводок."
    },
    {"Item","A","ПриВыбореСтроки","OnSelectLine",
"Процедура ПриВыбореСтроки()
КонецПроцедуры",
"Procedure OnSelectLine()
EndProcedure",
"@Синтаксис:
ПриВыбореСтроки()
@Назначение:
Предопределенная процедура при выборе строки списка.
@Замечание:
Режим обработки выбора строки (двойной щелчок мыши или клавиша Enter) предопределенной процедурой ПриВыбореСтроки включается в форме списка справочника, журнала, счетов, журнала операций, журнала проводок при помощи метода Форма.ОбработкаВыбораСтроки(1). Данная процедура может располагаться только в программном модуле формы."
    },
    {"Item","AST","ПриУстановкеИнтервала","OnSetSelectInJournal",
"Процедура ПриУстановкеИнтервала(<?>,)
КонецПроцедуры",
"Procedure OnSetSelectInJournal(<?>,)
EndProcedure",
"@Синтаксис:
ПриУстановкеИнтервала(<ДатаНач>,<ДатаКон>)
@Назначение:
Предопределенная процедура при установке интервала журнала.
@Параметры:
<ДатаНач> - дата начала интервала журнала;
<ДатаКон> - дата конца интервала журнала.
@Замечание:
Данная процедура может располагаться только в модуле формы журнала документов."
    },
    },
    },
 {"Folder","A","Модуль формы операции","",
 {"Folder","A","Атрибуты","",
    {"Item","A","БИ","AT",
"БИ",
"AT",
"@Синтаксис:
БИ
@Назначение:
Атрибут содержит агрегатный объект типа ''БухгалтерскиеИтоги''."
    },
    },
 {"Folder","A","Методы","",
    {"Item","A","ПоТиповойОперации","ByTemplateOper",
"ПоТиповойОперации(<?>)",
"ByTemplateOper(<?>)",
"@Синтаксис:
ПоТиповойОперации(<Переменная>)
@Назначение:
Определяет, вводится ли новая операция с использованием типовой, и какая типовая операция используется.
Возвращает: число: 1 - если при вводе операции вручную использована типовая операция. 0 - если при вводе операции вручную не использовалась типовая операция.
@Параметры:
<Переменная> - имя переменной, в которую будет записано наименование типовой операции."
    },
    {"Item","A","ИспользоватьВалюту","UseCurrency",
"ИспользоватьВалюту(<?>)",
"UseCurrency(<?>)",
"@Синтаксис:
ИспользоватьВалюту(<Валюта>)
@Назначение:
Установка валюты, используемой в форме по умолчанию. Она будет автоматически подставляться в валюту вводимых проводок, если в проводках используются валютные счета. 
Возвращает: значение установки используемой валюты на момент до вызова метода.
@Параметры:
<Валюта> - значение типа ''Справочник'', имеющий вид, определенный при настройке валютного учета. Если параметр не задан, установка не изменяется."
    },
    {"Item","A","ИспользоватьКорСчет","UseCorAccount",
"ИспользоватьКорСчет(<?>)",
"UseCorAccount(<?>)",
"@Синтаксис:
ИспользоватьКорСчет(<Счет>)
@Назначение:
Установка корреспондирующего счета, используемого в форме по умолчанию. Он будет автоматически подставляться в проводку взамен не указанных пользователем счетов. 
Возвращает: значение установки используемого по умолчанию корреспондирующего счета на момент до вызова метода.
@Параметры:
<Счет> - значение типа ''Счет''. Если параметр не задан, установка не изменяется."
    },
    {"Item","A","ИспользоватьСубконто","UseSubconto",
"ИспользоватьСубконто(<?>,)",
"UseSubconto(<?>,)",
"@Синтаксис:
ИспользоватьСубконто(<ВидСубконто>,<Субконто>)
@Назначение:
Установка субконто, используемого в форме по умолчанию. Он будет автоматически подставляться в субконто проводок, если в проводках используются счета с этими видами субконто.
Возвращает: значение установки используемого по умолчанию субконто на момент до вызова метода.
@Параметры:
<ВидСубконто> - значение типа ''ВидСубконто''. 
<Субконто> - значение Субконто. Если параметр не задан, установка не изменяется."
    },
    {"Item","AST","ИзменениеПорядкаСтрок","ChangeLinesOrder",
"ИзменениеПорядкаСтрок(<?>);",
"ChangeLinesOrder(<?>);",
"@Синтаксис:
ИзменениеПорядкаСтрок(<Разрешить>)
@Назначение:
Разрешить/запретить изменять порядок строк в форме операции. Возвращает значение режима изменения порядка строк до исполнения метода. Число: 1 - разрешено изменение порядка строк в операции; 0 - запрещено.
@Параметры: 
<Разрешить> -  необязательный параметр. Число: 1 - разрешить изменение порядка строк в операции; 0 - запретить. Если параметр не задан, то режим не меняется.
@Замечание:
Метод доступен в Модуле формы операции и работает с операцией доступной в локальном контексте."
    },
    {"Item","A","Записать","Write",
"Записать();",
"Write();",
"@Синтаксис:
Записать()
@Назначение:
Записать новую операцию.
@Замечание: 
Этот метод может применяеться в Модуле формы операции непосредственно к операции локального контекста, в этом случае данный метод отрабатывает те же действия, что и интерактивное нажатие пользователем кнопки с формулой ''#Записать''.
При записи сложной проводки, если у главной корреспонденции сложной проводки не указана сумма (равна 0), то она автоматически вычисляется на основании подчиненных корреспонденций."
    },
    },
 {"Folder","A","Предопределенные","",
    {"Item","A","ВводНового","InputNew",
"Процедура ВводНового(<?>,)
КонецПроцедуры",
"Procedure InputNew(<?>,)
EndProcedure",
"@Синтаксис:
ВводНового(<ПризнКопирования>,<ОбъектКопирования>)
@Назначение:
Предопределенная процедура при интерактивном вводе новой операции.
@Параметры:
<ПризнКопирования> - признак того, что объект введен копированием. Число: 1 - объект введен копированием, 0 - просто новый объект. Данный признак может быть использован для анализа необходимости инициализации реквизитов нового объекта.
<ОбъектКопирования> - объект, который был скопирован.
@Замечание:
Данная процедура может располагаться только в программном модуле формы операции."
    },
    {"Item","A","ВводНаОсновании","InputCausedBy",
"Процедура ВводНаОсновании(<?>)
КонецПроцедуры",
"Procedure InputCausedBy(<?>)
EndProcedure",
"@Синтаксис:
ВводНаОсновании(<ДокументОснование>)
@Назначение:
Предопределенная процедура при интерактивном вводе новой операции на основании.
@Параметры:
<ДокументОснование> - значение документа, на основании которого вводится новая операция.
@Замечание:
Данная процедура может располагаться только в модуле формы операции."
    },
    {"Item","A","ПриЗаписи","OnWrite",
"Процедура ПриЗаписи()
КонецПроцедуры",
"Procedure OnWrite()
EndProcedure",
"@Синтаксис:
ПриЗаписи()
@Назначение:
Предопределенная процедура при интерактивной записи операции.
@Замечание:
Данная процедура может располагаться только в программном модуле формы операции."
    },
    {"Item","A","ПриВводеСтроки","OnNewLine",
"Процедура ПриВводеСтроки()
КонецПроцедуры",
"Procedure OnNewLine()
EndProcedure",
"@Синтаксис:
ПриВводеСтроки()
@Назначение:
Предопределенная процедура при интерактивном вводе новой проводки или корреспонденции операции.
@Замечание:
Данная процедура может располагаться только в модуле формы операции."
    },
    {"Item","A","ПриРедактированииНовойСтроки","OnEditNewLine",
"Процедура ПриРедактированииНовойСтроки()
КонецПроцедуры",
"Procedure OnEditNewLine()
EndProcedure",
"@Синтаксис:
ПриРедактированииНовойСтроки()
@Назначение:
Предопределенная процедура при интерактивном редактировании новой проводки или корреспонденции операции.
@Замечание:
Данная процедура может располагаться только в модуле формы операции."
    },
    {"Item","A","ПриНачалеРедактированияСтроки","OnStartEditLine",
"Процедура ПриНачалеРедактированияСтроки()
КонецПроцедуры",
"Procedure OnStartEditLine()
EndProcedure",
"@Синтаксис:
ПриНачалеРедактированияСтроки()
@Назначение:
Предопределенная процедура при начале интерактивного редактирования существующей проводки или корреспонденции операции.
@Замечание:
Данная процедура может располагаться только в модуле формы операции."
    },
    {"Item","AST","ПриИзмененииПорядкаСтрок","OnChangeLinesOrder",
"Процедура ПриИзмененииПорядкаСтрок(<?>)
КонецПроцедуры",
"Procedure OnChangeLinesOrder(<?>)
EndProcedure",
"@Синтаксис:
ПриИзмененииПорядкаСтрок(<Действие>)
@Назначение:
Предопределенная процедура при изменении порядка строк операции.
@Параметры:
<Действие> - число: -1(минус единица)  - перемещение строки вверх; 1 - перемещение строки вниз."
    },
    {"Item","A","ПриУдаленииСтроки","OnDeleteLine",
"Процедура ПриУдаленииСтроки()
КонецПроцедуры",
"Procedure OnDeleteLine()
EndProcedure",
"@Синтаксис:
ПриУдаленииСтроки()
@Назначение:
Предопределенная процедура при интерактивном удалении проводки или корреспонденции операции.
@Замечание:
Данная процедура может располагаться только в модуле формы операции."
    },
    },
    },
 {"Folder","A","Модуль формы журнала операций","",
 {"Folder","A","Методы","",
    {"Item","A","ВидыОтбора","KindsOfSelection",
"ВидыОтбора(<?>)",
"KindsOfSelection(<?>)",
"@Синтаксис:
ВидыОтбора(<СписокОтборов>)
@Назначение:
Установить доступные виды отборов журнала операций для вызова их в интерактивном режиме.
Возвращает:
Строковое значение, содержащее текущий список имен отборов для журнала, разделенных запятыми (на момент до исполнения метода).
@Параметры: 
<СписокОтборов> - строка со списком имен отборов для журнала через запятую, или '*' - для всех видов отборов.
@Замечание:
Метод доступен только в контексте Модуля формы журнала операций."
    },
    {"Item","A","ЗакладкиОтбора","TabCtrlSelection",
"ЗакладкиОтбора(<?>,,,);",
"TabCtrlSelection(<?>,,,);",
"@Синтаксис:
ЗакладкиОтбора(<ИмяОтбора>,<ВИнтервалеЖурнала>,<УстановитьНаЗначение>,<ЗначениеОтбора>)
@Назначение:
Установить в форме журнала операций закладки для интерактивного осуществления отбора.
@Параметры: 
<ИмяОтбора - строка с именем отбора;
<ВИнтервалеЖурнала> - число: 1 - значения отбора выбираются по операциям в установленном интервале журнала, 0 - значения отбора выбираются по всем операциям журнала;
<УстановитьНаЗначение> - число: 1 - сразу выбирается отбор по параметру <ЗначениеОтбора>;  0 - отбор устанавливается на первое существующее значение; По умолчанию - 0.
<ЗначениеОтбора> - значение отбора.
@Замечание:
Метод доступен только в контексте Модуля формы журнала операций."
    },
    {"Item","A","УстановитьОтбор","SetSelection",
"УстановитьОтбор(<?>,);",
"SetSelection(<?>,);",
"@Синтаксис:
УстановитьОтбор(<ИмяОтбора>,<ЗначениеОтбора>)
@Назначение:
Установить отбор журнала операций.
@Параметры: 
<ИмяОтбора> - строка с именем отбора (если пусто - отбор отключается);
<ЗначениеОтбора> - значение отбора.
@Замечание:
Метод доступен только в контексте Модуля формы журнала операций."
    },
    {"Item","A","ПолучитьОтбор","GetSelection",
"ПолучитьОтбор(<?>,)",
"GetSelection(<?>,)",
"@Синтаксис:
ПолучитьОтбор(<ИмяОтбора>,<ЗначениеОтбора>)
@Назначение:
Возвратить текущее значение отбора журнала операций.
Возвращает: 1 - отбор включен, 0 - отбор не включен.
@Параметры: 
<ИмяОтбора> - идентификатор переменной для приема строки с именем отбора;
<ЗначениеОтбора> - идентификатор переменной для приема значения отбора.
@Замечание:
Метод доступен только в контексте Модуля формы журнала операций."
    },
    {"Item","A","УстановитьИнтервал","SetRange",
"УстановитьИнтервал(<?>,,);",
"SetRange(<?>,,);",
"@Синтаксис:
УстановитьИнтервал(<ДатаНач>,<ДатаКон>,<ФлагИзменения>)
@Назначение:
Установить интервал журнала операций.
@Параметры: 
<ДатаНач> - дата начала интервала журнала операций;
<ДатаКон> - дата конца интервала журнала операций.
<ФлагИзменения> - необязательный параметр. Этим флагом регулируется возможность интерактивного изменения интервала журнала. 1 - пользователь может изменить интервал журнала интерактивно, 0 - пользователь не может интерактивно изменить интервал журнала. 
@Замечание:
Метод доступен только в контексте Модуля формы журнала операций."
    },
    {"Item","A","НачалоИнтервала","BegOfRange",
"НачалоИнтервала()",
"BegOfRange()",
"@Синтаксис:
НачалоИнтервала()
@Назначение:
Возвращает дату начала интервала журнала операций.
@Замечание:
Метод доступен только в контексте Модуля формы журнала операций."
    },
    {"Item","A","КонецИнтервала","EndOfRange",
"КонецИнтервала()",
"EndOfRange()",
"@Синтаксис:
КонецИнтервала()
@Назначение:
Возвращает дату конца интервала журнала операций.
@Замечание:
Метод доступен только в контексте Модуля формы журнала операций."
    },
    },
 {"Folder","A","Предопределенные","",
    {"Item","A","ПриУстановкеОтбора","OnSetSelectInJournal",
"Процедура ПриУстановкеОтбора(<?>,)
КонецПроцедуры",
"Procedure OnSetSelectInJournal(<?>,)
EndProcedure",
"@Синтаксис:
ПриУстановкеОтбора(<ИмяОтбора>,<ЗначениеОтбора>)
@Назначение:
Предопределенная процедура, вызываемая при установке отбора в форме журнала операций.
@Параметры:
<ИмяОтбора> - строковое значение. Наименование графы отбора, которая выбрана пользователем при интерактивной установке отбора.
<ЗначениеОтбора> - значение отбора, которое выбрано пользователем при интерактивной установке отбора. 
@Замечание:
Данная процедура может располагаться только в модуле формы журнала операций."
    },
    {"Item","A","ПриВыбореСтроки","OnSelectLine",
"Процедура ПриВыбореСтроки()
КонецПроцедуры",
"Procedure OnSelectLine()
EndProcedure",
"@Синтаксис:
ПриВыбореСтроки()
@Назначение:
Предопределенная процедура при выборе строки списка.
@Замечание:
Режим обработки выбора строки (двойной щелчок мыши или клавиша Enter) предопределенной процедурой ПриВыбореСтроки включается в форме списка справочника, журнала, счетов, журнала операций, журнала проводок при помощи метода Форма.ОбработкаВыбораСтроки(1). Данная процедура может располагаться только в программном модуле формы."
    },
    {"Item","A","ПриУстановкеИнтервала","OnSetRange",
"Процедура ПриУстановкеИнтервала(<?>,)
КонецПроцедуры",
"Procedure OnSetRange(<?>,)
EndProcedure",
"@Синтаксис:
ПриУстановкеИнтервала(<ДатаНач>,<ДатаКон>)
@Назначение:
Предопределенная процедура при установке интервала журнала.
@Параметры:
<ДатаНач> - дата начала интервала журнала;
<ДатаКон> - дата конца интервала журнала.
@Замечание:
Данная процедура может располагаться только в модуле формы журнала документов."
    },
    },
    },
    },
 {"Folder","A","Бухгалтерские итоги","Account totals",
 {"Folder","A","Общие методы","",
    {"Item","A","ИспользоватьПланСчетов","UseChartOfAccounts",
"ИспользоватьПланСчетов(<?>)",
"UseChartOfAccounts(<?>)",
"@Синтаксис:
ИспользоватьПланСчетов(<ПланСчетов>)
@Назначение:
Назначить план счетов, по которому будут выдаваться итоги.
Возвращает: значение данной установки до вызова метода.
@Параметры: 
<ПланСчетов> - значение типа ''План Счетов''. Если не задан, то установка не меняется."
    },
    {"Item","A","ИспользоватьРазделительУчета","UseAccountingDivision",
"ИспользоватьРазделительУчета(<?>)",
"UseAccountingDivision(<?>)",
"@Синтаксис:
ИспользоватьРазделительУчета(<РазделительУчета>)
@Назначение:
Установить значение разделителя учета.
Возвращает: значение данной установки до вызова метода.
@Параметры: 
<РазделительУчета> - значение разделителя учета. Если не задан, то установка не меняется."
    },
    {"Item","A","ОсновныеИтоги","MainTotals",
"ОсновныеИтоги();",
"MainTotals();",
"@Синтаксис:
ОсновныеИтоги()
@Назначение:
Переводит объект в режим работы с основными итогами. Вызов этого метода имеет смысл тогда, когда ранее был выполнен расчет временных итогов или запрос, и нужно вернуть объект к работе с основными итогами. При этом результаты запроса или расчета временных итогов теряются."
    },
    },
 {"Folder","A","Итоги","",
 {"Folder","A","Остатки и обороты","",
    {"Item","A","СНД","IDB",
"СНД(<?>,,,)",
"IDB(<?>,,,)",
"@Синтаксис:
СНД(<Счет>,<ТипСуммы>,<Валюта>,<Субконто1...>)
@Назначение:
Возвращает дебетовое сальдо по счету на начало периода.
@Параметры: 
<Счет> - значение типа ''Счет'' - счет расчета итогов. Может использоваться строка - код счета.
<ТипСуммы> - необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму.
<Валюта> - необязательный параметр. Значение типа ''Справочник.Валюты''. Если параметр не указан, то итоги выдаются без учета валюты.
<Субконто1...> - необязательные параметры. Значения субконто. Их количество зависит от настройки субконто для данного счета. Если параметры не указаны, то итоги выдаются без учета аналитики."
    },
    {"Item","A","СНК","ICB",
"СНК(<?>,,,)",
"ICB(<?>,,,)",
"@Синтаксис:
СНК(<Счет>,<ТипСуммы>,<Валюта>,<Субконто1...>)
@Назначение:
Возвращает кредитовое сальдо по счету на начало периода.
@Параметры: 
<Счет> - значение типа ''Счет'' - счет расчета итогов. Может использоваться строка - код счета.
<ТипСуммы> - необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму.
<Валюта> - необязательный параметр. Значение типа ''Справочник.Валюты''. Если параметр не указан, то итоги выдаются без учета валюты.
<Субконто1...> - необязательные параметры. Значения субконто. Их количество зависит от настройки субконто для данного счета. Если параметры не указаны, то итоги выдаются без учета аналитики."
    },
    {"Item","A","СКД","FDB",
"СКД(<?>,,,)",
"FDB(<?>,,,)",
"@Синтаксис:
СКД(<Счет>,<ТипСуммы>,<Валюта>,<Субконто1...>)
@Назначение:
Возвращает дебетовое сальдо по счету на конец периода.
@Параметры: 
<Счет> - значение типа ''Счет'' - счет расчета итогов. Может использоваться строка - код счета.
<ТипСуммы> - необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму.
<Валюта> - необязательный параметр. Значение типа ''Справочник.Валюты''. Если параметр не указан, то итоги выдаются без учета валюты.
<Субконто1...> - необязательные параметры. Значения субконто. Их количество зависит от настройки субконто для данного счета. Если параметры не указаны, то итоги выдаются без учета аналитики."
    },
    {"Item","A","СКК","FCB",
"СКК(<?>,,,)",
"FCB(<?>,,,)",
"@Синтаксис:
СКК(<Счет>,<ТипСуммы>,<Валюта>,<Субконто1...>)
@Назначение:
Возвращает кредитовое сальдо по счету на конец периода.
@Параметры: 
<Счет> - значение типа ''Счет'' - счет расчета итогов. Может использоваться строка - код счета.
<ТипСуммы> - необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму.
<Валюта> - необязательный параметр. Значение типа ''Справочник.Валюты''. Если параметр не указан, то итоги выдаются без учета валюты.
<Субконто1...> - необязательные параметры. Значения субконто. Их количество зависит от настройки субконто для данного счета. Если параметры не указаны, то итоги выдаются без учета аналитики."
    },
    {"Item","A","ДО","TD",
"ДО(<?>,,,)",
"TD(<?>,,,)",
"@Синтаксис:
ДО(<Счет>,<ТипСуммы>,<Валюта>,<Субконто1...>)
@Назначение:
Возвращает дебетовый оборот по счету за период.
@Параметры: 
<Счет> - значение типа ''Счет'' - счет расчета итогов. Может использоваться строка - код счета.
<ТипСуммы> - необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму.
<Валюта> - необязательный параметр. Значение типа ''Справочник.Валюты''. Если параметр не указан, то итоги выдаются без учета валюты.
<Субконто1...> - необязательные параметры. Значения субконто. Их количество зависит от настройки субконто для данного счета. Если параметры не указаны, то итоги выдаются без учета аналитики."
    },
    {"Item","A","КО","TC",
"КО(<?>,,,)",
"TC(<?>,,,)",
"@Синтаксис:
КО(<Счет>,<ТипСуммы>,<Валюта>,<Субконто1...>)
@Назначение:
Возвращает кредитовый оборот по счету за период.
@Параметры: 
<Счет> - значение типа ''Счет'' - счет расчета итогов. Может использоваться строка - код счета.
<ТипСуммы> - необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму.
<Валюта> - необязательный параметр. Значение типа ''Справочник.Валюты''. Если параметр не указан, то итоги выдаются без учета валюты.
<Субконто1...> - необязательные параметры. Значения субконто. Их количество зависит от настройки субконто для данного счета. Если параметры не указаны, то итоги выдаются без учета аналитики."
    },
    {"Item","A","ОБ","TO",
"ОБ(<?>,,,)",
"TO(<?>,,,)",
"@Синтаксис:
ОБ(<СчетДеб>,<СчетКред>,<ТипСуммы>,<Валюта>)
@Назначение:
Расчет оборотов между счетами.
Возвращает число - оборот с дебета счета  <СчетДеб> в кредит счета  <СчетКред>.
@Параметры: 
<СчетДеб>,<СчетКред> - значения типа ''Счет''  - счета дебета и кредита, для которых необходимо выдать перекрестные обороты. Может использоваться строка - код счета.
<ТипСуммы> - необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму.
<Валюта> - необязательный параметр. Значение типа ''Справочник.Валюты''. Если параметр не указан, то итоги выдаются без учета валюты."
    },
    },
 {"Folder","A","Разв. сальдо по субсчетам","",
    {"Item","A","СНДР","IDBR",
"СНДР(<?>,,)",
"IDBR(<?>,,)",
"@Синтаксис:
СНДР(<Счет>,<ТипСуммы>,<Валюта>)
@Назначение:
Возвращает дебетовое развернутое сальдо по субсчетам на начало периода.
@Параметры: 
<Счет> - значение типа ''Счет'' - счет, для которого необходимо рассчитать развернутое сальдо. Может использоваться строка - код счета.
<ТипСуммы> - необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму.
<Валюта> - необязательный параметр. Значение типа ''Справочник.Валюты''. Если параметр не указан, то итоги выдаются без учета валюты."
    },
    {"Item","A","СНКР","ICBR",
"СНКР(<?>,,)",
"ICBR(<?>,,)",
"@Синтаксис:
СНКР(<Счет>,<ТипСуммы>,<Валюта>)
@Назначение:
Возвращает кредитовое развернутое сальдо по субсчетам на начало периода.
@Параметры: 
<Счет> - значение типа ''Счет'' - счет, для которого необходимо рассчитать развернутое сальдо. Может использоваться строка - код счета.
<ТипСуммы> - необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму.
<Валюта> - необязательный параметр. Значение типа ''Справочник.Валюты''. Если параметр не указан, то итоги выдаются без учета валюты."
    },
    {"Item","A","СКДР","FDBR",
"СКДР(<?>,,)",
"FDBR(<?>,,)",
"@Синтаксис:
СКДР(<Счет>,<ТипСуммы>,<Валюта>)
@Назначение:
Возвращает дебетовое развернутое сальдо по субсчетам на конец периода.
@Параметры: 
<Счет> - значение типа ''Счет'' - счет, для которого необходимо рассчитать развернутое сальдо. Может использоваться строка - код счета.
<ТипСуммы> - необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму.
<Валюта> - необязательный параметр. Значение типа ''Справочник.Валюты''. Если параметр не указан, то итоги выдаются без учета валюты."
    },
    {"Item","A","СККР","FCBR",
"СККР(<?>,,)",
"FCBR(<?>,,)",
"@Синтаксис:
СККР(<Счет>,<ТипСуммы>,<Валюта>)
@Назначение:
Возвращает кредитовое развернутое сальдо по субсчетам на конец периода.
@Параметры: 
<Счет> - значение типа ''Счет'' - счет, для которого необходимо рассчитать развернутое сальдо. Может использоваться строка - код счета.
<ТипСуммы> - необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму.
<Валюта> - необязательный параметр. Значение типа ''Справочник.Валюты''. Если параметр не указан, то итоги выдаются без учета валюты."
    },
    },
 {"Folder","A","Разв. сальдо по субконто","",
    {"Item","A","СНДРС","IDBRS",
"СНДРС(<?>,,,,,,)",
"IDBRS(<?>,,,,,,)",
"@Синтаксис:
СНДРС(<Счет>,<ТипСуммы>,<Валюта>,<Субконто1>,<ТипФильтра1>,<Субконто2>,<ТипФильтра2>)
@Назначение:
Возвращает дебетовое развернутое сальдо по субконто на начало периода.
@Параметры: 
<Счет> - значение типа ''Счет'' - счет, для которого необходимо рассчитать развернутое сальдо. Может использоваться строка - код счета.
<ТипСуммы> - необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму.
<Валюта> - необязательный параметр. Значение типа ''Справочник.Валюты''. Если параметр не указан, то итоги выдаются без учета валюты.
<Субконто1>,<Субконто2>,... - значения субконто. 
<ТипФильтра1>,<ТипФильтра2>,... - тип использования субконто. (Строка или число). ''*'' (1) - разворачивать по данному субконто. ''!'' (2) - отбирать по данному субконто. '' '' (3) - не учитывать данный субконто. Значения по умолчанию: ''*'' (1) - для первого субконто, '' '' (3) - для остальных субконто."
    },
    {"Item","A","СНКРС","ICBRS",
"СНКРС(<?>,,,,,,)",
"ICBRS(<?>,,,,,,)",
"@Синтаксис:
СНКРС(<Счет>,<ТипСуммы>,<Валюта>,<Субконто1>,<ТипФильтра1>,<Субконто2>,<ТипФильтра2>)
@Назначение:
Возвращает кредитовое развернутое сальдо по субконто на начало периода.
@Параметры: 
<Счет> - значение типа ''Счет'' - счет, для которого необходимо рассчитать развернутое сальдо. Может использоваться строка - код счета.
<ТипСуммы> - необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму.
<Валюта> - необязательный параметр. Значение типа ''Справочник.Валюты''. Если параметр не указан, то итоги выдаются без учета валюты.
<Субконто1>,<Субконто2>,... - значения субконто. 
<ТипФильтра1>,<ТипФильтра2>,... - тип использования субконто. (Строка или число). ''*'' (1) - Разворачивать по данному субконто. ''!'' (2) - Отбирать по данному субконто. '' '' (3) - Не учитывать данный субконто. Значения по умолчанию: ''*'' (1) - для первого субконто, '' '' (3) - для остальных субконто."
    },
    {"Item","A","СКДРС","FDBRS",
"СКДРС(<?>,,,,,,)",
"FDBRS(<?>,,,,,,)",
"@Синтаксис:
СКДРС(<Счет>,<ТипСуммы>,<Валюта>,<Субконто1>,<ТипФильтра1>,<Субконто2>,<ТипФильтра2>)
@Назначение:
Возвращает дебетовое развернутое сальдо по субконто на конец периода.
@Параметры: 
<Счет> - значение типа ''Счет'' - счет, для которого необходимо рассчитать развернутое сальдо. Может использоваться строка - код счета.
<ТипСуммы> - необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму.
<Валюта> - необязательный параметр. Значение типа ''Справочник.Валюты''. Если параметр не указан, то итоги выдаются без учета валюты.
<Субконто1>,<Субконто2>,... - значения субконто. 
<ТипФильтра1>,<ТипФильтра2>,... - тип использования субконто. (Строка или число). ''*'' (1) - Разворачивать по данному субконто. ''!'' (2) - Отбирать по данному субконто. '' '' (3) - Не учитывать данный субконто. Значения по умолчанию: ''*'' (1) - для первого субконто, '' '' (3) - для остальных субконто."
    },
    {"Item","A","СККРС","FCBRS",
"СККРС(<?>,,,,,,)",
"FCBRS(<?>,,,,,,)",
"@Синтаксис:
СККРС(<Счет>,<ТипСуммы>,<Валюта>,<Субконто1>,<ТипФильтра1>,<Субконто2>,<ТипФильтра2>)
@Назначение:
Возвращает кредитовое развернутое сальдо по субконто на конец периода.
@Параметры: 
<Счет> - значение типа ''Счет'' - счет, для которого необходимо рассчитать развернутое сальдо. Может использоваться строка - код счета.
<ТипСуммы> - необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму.
<Валюта> - необязательный параметр. Значение типа ''Справочник.Валюты''. Если параметр не указан, то итоги выдаются без учета валюты.
<Субконто1>,<Субконто2>,... - значения субконто. 
<ТипФильтра1>,<ТипФильтра2>,... - тип использования субконто. (Строка или число). ''*'' (1) - Разворачивать по данному субконто. ''!'' (2) - Отбирать по данному субконто. '' '' (3) - Не учитывать данный субконто. Значения по умолчанию: ''*'' (1) - для первого субконто, '' '' (3) - для остальных субконто."
    },
    },
 {"Folder","A","Период итогов","",
    {"Item","A","ПериодД","PeriodD",
"ПериодД(<?>,);",
"PeriodD(<?>,);",
"@Синтаксис:
ПериодД(<ДатаНачалаПериода>,<ДатаКонцаПериода>)
@Назначение:
Устанавливает в качестве периода расчета итогов произвольное число месяцев.
@Параметры: 
<ДатаНачалаПериода> - начальная дата периода выдачи итогов. Должна быть равна дате начала месяца. Необязательный параметр.
<ДатаКонцаПериода> - конечная дата периода выдачи итогов. Должна быть равна дате конца месяца. Необязательный параметр."
    },
    {"Item","A","ПериодКВ","PeriodQ",
"ПериодКВ(<?>,);",
"PeriodQ(<?>,);",
"@Синтаксис:
ПериодКВ(<Дата>|<НомерКвартала>,<Год>)
@Назначение:
Устанавливает квартал в качестве периода расчета итогов.
@Параметры: 
<Дата> - любая дата из квартала, устанавливаемого в качестве периода расчета итогов.
<НомерКвартала> - число от 1 до 4 - порядковый номер квартала.
<Год> - год заданный числом (включая век). Используется только, если первый параметр - номер квартала."
    },
    {"Item","A","ПериодКВН","PeriodQAccumY",
"ПериодКВН(<?>,);",
"PeriodQAccumY(<?>,);",
"@Синтаксис:
ПериодКВН(<Дата>|<НомерКвартала>,<Год>)
@Назначение:
Устанавливает в качестве периода расчета итогов период с начала года до конца указанного квартала.
@Параметры: 
<Дата> - любая дата из квартала, устанавливаемого в качестве периода расчета итогов.
<НомерКвартала> - число от 1 до 4 - порядковый номер квартала.
<Год> - год заданный числом (включая век). Используется только, если первый параметр - номер квартала."
    },
    {"Item","A","ПериодМ","PeriodM",
"ПериодМ(<?>,);",
"PeriodM(<?>,);",
"@Синтаксис:
ПериодМ(<Дата>|<НомерМесяца>,<Год>)
@Назначение:
Устанавливает в качестве периода расчета итогов месяц.
@Параметры: 
<Дата> - любая дата из месяца, устанавливаемого в качестве периода расчета итогов.
<НомерМесяца> - число от 1 до 12 - порядковый номер месяца.
<Год> - год заданный числом (включая век). Используется только, если первый параметр - если первый параметр - номер месяца."
    },
    {"Item","A","ПериодМНК","PeriodMAccumQ",
"ПериодМНК(<?>,);",
"PeriodMAccumQ(<?>,);",
"@Синтаксис:
ПериодМНК(<Дата>|<НомерМесяца>,<Год>)
@Назначение:
Устанавливает в качестве периода расчета итогов период с начала квартала до конца указанного месяца.
@Параметры: 
<Дата> - любая дата из месяца, устанавливаемого в качестве периода расчета итогов.
<НомерМесяца> - число от 1 до 12 - порядковый номер месяца.
<Год> - год заданный числом (включая век). Используется только, если первый параметр - номер месяца."
    },
    {"Item","A","ПериодМНГ","PeriodMAccumY",
"ПериодМНГ(<?>,);",
"PeriodMAccumY(<?>,);",
"@Синтаксис:
ПериодМНГ(<Дата>|<НомерМесяца>,<Год>)
@Назначение:
Устанавливает в качестве периода расчета итогов период с начала года до конца указанного месяца.
@Параметры: 
<Дата> - любая дата из месяца, устанавливаемого в качестве периода расчета итогов.
<НомерМесяца> - число от 1 до 12 - порядковый номер месяца.
<Год> - год заданный числом (включая век). Используется только, если первый параметр - номер месяца."
    },
    {"Item","A","НачПериода","BeginOfPeriod",
"НачПериода()",
"BeginOfPeriod()",
"@Синтаксис:
НачПериода()
@Назначение:
Возвращает начальную дату установленного в данный момент периода основных итогов."
    },
    {"Item","A","КонПериода","EndOfPeriod",
"КонПериода()",
"EndOfPeriod()",
"@Синтаксис:
КонПериода()
@Назначение:
Возвращает конечную дату установленного в данный момент периода основных итогов."
    },
 {"Folder","A","Расчет врем. итогов","",
    {"Item","A","Рассчитать","Calculate",
"Рассчитать(<?>,,,,,)",
"Calculate(<?>,,,,,)",
"@Синтаксис:
Рассчитать(<НачалоПериода>,<КонецПериода>,<ФильтрПоСчетам>,<ТолькоСинтетика>,<ПланСчетов>,<РазделительУчета>)
@Назначение:
Расчет временных итогов.
Возвращает: 1 -  расчет выполнен; 0 -  расчет не выполнен.
@Параметры: 
<НачалоПериода> - дата, документ или позиция начала периода расчета временных итогов. Если этот параметр не указан, будут вычисляться конечные сальдо на момент, указанный в параметре <КонецПериода>.
<КонецПериода> - дата, документ или позиция конца периода расчета временных итогов. Если этот параметр не указан, будут вычисляться начальные сальдо момент, указанный в параметре <НачалоПериода>.
<ФильтрПоСчетам> - необязательный параметр. Счета, для которых будет выполняться временный расчет итогов. Задается значением типа ''Счет'' или объектом типа ''СписокЗначений'', содержащим значения типа ''Счет'',  либо строкой, содержащей список кодов счетов, разделенных символом '','' или '';''. 
<ТолькоСинтетика> - необязательный параметр: 1 - рассчитывать сальдо только по счетам; 0 - или не указан - рассчитывать сальдо по счетам и по субконто.
<ПланСчетов> - значение типа ''План Счетов''. Ограничение расчета одним планом счетов. Необязательный параметр.
<РазделительУчета> - значение разделителя учета. Ограничение расчета одним значением разделителя учета. Необязательный параметр."
    },
    {"Item","A","Актуальность","Actual",
"Актуальность(<?>)",
"Actual(<?>)",
"@Синтаксис:
Актуальность(<Флаг>)
@Назначение:
Устанавливает или сбрасывает признак актуальности временных итогов.
Возвращает: значение признака актуальности на момент до вызова функции.
@Параметры: 
<Флаг> - признак актуальности временного расчета итогов. Параметр может принимать значения: 1 - поддерживать временный расчет в актуальном состоянии; 0 - не поддерживать временный расчет в актуальном состоянии. Если не задан - значение не меняется."
    },
    },
 {"Folder","A","Режим запроса","",
    {"Item","A","ВыполнитьЗапрос","DoQuery",
"ВыполнитьЗапрос(<?>,,,,,,,)",
"DoQuery(<?>,,,,,,,)",
"@Синтаксис:
ВыполнитьЗапрос(<НачалоПериода>,<КонецПериода>,<Счет>,<КоррСчет>,<Валюта>,<ТипИтогов>,<Периодичность>,<ТипСуммы>)
@Назначение:
Выполнить отбор и расчет итогов по параметрам.
Возвращает число 1 -  запрос выполнен; 0 -  запрос не выполнен.
@Параметры: 
<НачалоПериода> - дата, документ или позиция начала периода запроса.
<КонецПериода> - дата, документ или позиция конца периода запроса.
<Счет> - необязательный параметр. Счета, для которых будут отбираться итоги в запросе. Задается значением типа ''Счет'' или объектом типа ''СписокЗначений'', содержащим значения типа ''Счет'',  либо строкой содержащей список кодов счетов, разделенных символом '','' или '';''. Если параметр не указан, отбор будет выполняться по всем счетам. 
<КоррСчет> - необязательный параметр. Значение типа ''Счет'' - корреспондирующий счет, в корреспонденции с которым будут отбираться итоги счета, указанного в параметре <Счет>. Задается значением типа ''Счет'' или объектом типа ''СписокЗначений'', содержащим значения типа ''Счет'',  либо строкой содержащей список кодов счетов, разделенных символом '','' или '';''. Если параметр не указан, будут отбираться итоги в корреспонденции со всеми счетами.
<Валюта> - зачение типа ''Справочник.Валюты''. Если параметр не указан итоги выдаются без учета валюты.
<ТипИтогов> - число - тип отбираемых итогов. Может принимать следующие значения: 1 - остатки и обороты по счету в целом; 2 - обороты между счетами; 3 - первое и второе вместе. По умолчанию: 1.
<Периодичность> - число или символьная строка (см. документацию).Позволяет получить дополнительный разрез итогов по периодам.  По умолчанию периодичность не задана.
<ТипСуммы> - число или строка - тип рассчитываемых итогов. Может принимать следующие значения (в скобках указаны строковые синонимы):
1 (''C'', ''S'') рассчитывать суммы;
2 (''В'', ''C'') рассчитывать валютные суммы;
4 (''К'', ''A'') рассчитывать количество.
Если требуется одновременно рассчитывать разные суммы, значение параметра получается путем сложения допустимых значений, например: 5 (1+4) - рассчитывать суммы и количество.
При указании параметра строкой в ней указываються все символы, которые обозначают типы сумм, которые нужно рассчитывать. По умолчанию рассчитываются все типы сумм.
@Замечание:
Подробнее см. в документации в гл. ''Работа с бухгалтерскими итогами''"
    },
    {"Item","A","ВключатьСубсчета","IncludeSubAccounts",
"ВключатьСубсчета(<?>,);",
"IncludeSubAccounts(<?>,);",
"@Синтаксис:
ВключатьСубсчета(<ФлагСчета>,<ФлагКоррСчета>)
@Назначение:
Устанавливает режим отбора итогов методом ''ВыполнитьЗапрос'' по субсчетам.
@Параметры: 
<ФлагСчета> - необязательный параметр. Признак развертывания сальдо по субсчетам основного счета. Число:
0 - не разворачить по субсчетам; 1 - разворачивать по субсчетам;  -1 (минус единица) - не выдавать итоги по счетам-группам. Значение по умолчанию - 0.
<ФлагКоррСчета> - необязательный параметр. Признак развертывания сальдо по субсчетам корреспондирующего счета. Число: 0 - не разворачить по субсчетам; 1 - разворачивать по субсчетам;  -1 (минус единица) - не выдавать итоги по корреспондирующим счетам-группам. Значение по умолчанию - 0."
    },
    {"Item","A","Опции","Options",
"Опции(<?>,)",
"Options(<?>,)",
"@Синтаксис:
Опции(<ВклЗабалансСуммы>,<ВклОборотСубкСуммы>)
@Назначение:
Устанавливает режим включения сумм в итоги.
@Параметры: 
<ВклЗабалансСуммы> - признак включения в итоги сумм по забалансовым счетам. Число: 0 - не включаются суммы по забалансовым счетам; 1 - включаются суммы по забалансовым счетам.
<ВклОборотСубкСуммы> -признак включения в итоги сумм по оборотным субконто. Число: 0 - не включаются суммы по оборотным суб-конто; 1 - включаются суммы по оборотным субконто."
    },
    {"Item","A","ИспользоватьСубконто","UseSubconto",
"ИспользоватьСубконто(<?>,,,)",
"UseSubconto(<?>,,,)",
"@Синтаксис:
ИспользоватьСубконто(<ВидСубконто>,<Субконто>,<ТипФильтра>,<ПоГруппам>)
@Назначение:
Устанавливает режим получения итогов методом ''ВыполнитьЗапрос'' в разрезе субконто.Метод слудет вызывать до вызова метода ''ВыполнитьЗапрос''. Метод может вызываться последовательно несколько раз. В этом случае установки, выполняемые этим методом  суммируются. 
@Параметры: 
<ВидСубконто> - значение типа ''ВидСубконто'' - расчет временных итогов будет выполнен только для субконто указанного вида.
<Субконто> - значение Субконто, по которому будут отобраны итоги по аналитике. Если параметр не задан - то считается пустым значением субконто.
<ТипФильтра> - число - тип фильтра по субконто. Может принимать следующие значения: 1 - разворачивать по данному субконто, 2 - отбирать по данному субконто, 3 - не учитывать это субконто вообще. По умолчанию 1.
<ПоГруппам> - число - группировка итогов по субконто. Параметр <ПоГруппам> имеет смысл, если параметр <ТипФильтра> равен 1, а вид субконто, заданный параметром <ВидСубконто>, имеет тип значения ''Справочник''. Параметр может принимать значения: 0 - не показывать итоги по группам справочника; 1 - показывать итоги по группам справочника. По умолчанию 0."
    },
    {"Item","A","ИспользоватьКорСубконто","UseCorSubconto",
"ИспользоватьКорСубконто(<?>,,,)",
"UseCorSubconto(<?>,,,)",
"@Синтаксис:
ИспользоватьКорСубконто(<ВидСубконто>,<Субконто>,<ТипФильтра>,<ПоГруппам>)
@Назначение:
Устанавливает режим получения итогов методом ''ВыполнитьЗапрос'' в разрезе корреспондирующих субконто.Метод слудет вызывать до вызова метода ''ВыполнитьЗапрос''. Метод может вызываться последовательно несколько раз. В этом случае установки, выполняемые этим методом  суммируются. 
@Параметры: 
<ВидСубконто> - значение типа ''ВидСубконто'' - расчет временных итогов будет выполнен только для субконто указанного вида.
<Субконто> - значение Субконто, по которому будут отобраны итоги по аналитике. Если параметр не задан - то считается пустым значением субконто.
<ТипФильтра> - число - тип фильтра по субконто. Может принимать следующие значения: 1 - разворачивать по данному субконто, 2 - отбирать по данному субконто, 3 - не учитывать это субконто вообще. По умолчанию 1.
<ПоГруппам> - число - группировка итогов по субконто. Параметр <ПоГруппам> имеет смысл, если параметр <ТипФильтра> равен 1, а вид субконто, заданный параметром <ВидСубконто>, имеет тип значения ''Справочник''. Параметр может принимать значения: 0 - не показывать итоги по группам справочника; 1 - показывать итоги по группам справочника. По умолчанию 0."
    },
 {"Folder","A","Выборка результатов","",
    {"Item","A","ВыбратьСчета","SelectAccounts",
"ВыбратьСчета(<?>,,,)",
"SelectAccounts(<?>,,,)",
"@Синтаксис:
ВыбратьСчета(<ФлагВсе>,<ФлагДК>,<Номер>,<РазвСальдо>)
@Назначение:
Открывает выборку счетов, для которых были получены итоги методом ''ВыполнитьЗапрос''. 
Возвращает  1 - если действие выполнено и в выборке есть хотя бы один счет; 0 - если действие не выполнено или в выборке нет ни одного счета.
@Параметры: 
<ФлагВсе> - число: 0 - отбирать те счета, которые имели итоги на этом уровне обхода итогов запроса; 1 - включить в выборку все счета, которые имели итоги в данном запросе; -1, -2 : включить в выборку счета, которые имели итоги в группировке n-го вышестоящего уровня. По умолчанию - 0.
<ФлагДК> - число: 1 - включать в выборку счета только с дебетовыми оборотами; 2 - включать в выборку счета только с кредито-выми оборотами. 0 - включать в выборку счета вне зависимости от дебетовых/кредитовых оборотов. По умолчанию 0.
<Номер> - число - номер выборки. Если параметр не указан, выборке присваивается номер 0.
<РазвСальдо> - признак необходимости рассчитывать развернутое сальдо по субконто. Используется только если в запросе участвуют субконто. 1 - рассчитывать развернутое сальдо. 0 - не рассчитыть развернутое сальдо; По умолчанию 0."
    },
    {"Item","A","ПолучитьСчет","GetAccount",
"ПолучитьСчет(<?>,)",
"GetAccount(<?>,)",
"@Синтаксис:
ПолучитьСчет(<Номер>,<Счет>)
@Назначение:
Получить из выборки следующий счет. Выборка должна быть предварительно открыта при помощи метода ''ВыбратьСчета''. 
Возвращает  1 - следующий счет выбран успешно; 0 - следующий счет не выбран (отсутствует).
@Параметры: 
<Номер> - число - номер выборки. Необязательный параметр.
<Счет> - значение счета, на которое нужно спозиционироваться."
    },
    {"Item","A","ВыбратьКорСчета","SelectCorAccounts",
"ВыбратьКорСчета(<?>,,)",
"SelectCorAccounts(<?>,,)",
"@Синтаксис:
ВыбратьКорСчета(<ФлагВсе>,<ФлагДК>,<Номер>)
@Назначение:
Открывает выборку корреспондирующих счетов, для которых были получены итоги методом  ''ВыполнитьЗапрос''. 
Возвращает  1 - если действие выполнено и в выборке есть хотя бы один счет; 0 - если действие не выполнено или в выборке нет ни одного счета.
@Параметры: 
<ФлагВсе> - число: 0 - отбирать те счета, которые имели итоги на этом уровне обхода итогов запроса; 1 - включить в выборку все счета, которые имели итоги в данном запросе; -1, -2 : включить в выборку счета, которые имели итоги в группировке n-го вышестоящего уровня. По умолчанию - 0.
<ФлагДК> - число: 1 - включать в выборку счета только с дебетовыми оборотами; 2 - включать в выборку счета только с кредито-выми оборотами. 0 - включать в выборку счета вне зависимости от дебетовых/кредитовых оборотов. По умолчанию 0.
<Номер> - число - номер выборки. Если параметр не указан, выборке присваивается номер 0."
    },
    {"Item","A","ПолучитьКорСчет","GetCorAccount",
"ПолучитьКорСчет(<?>,)",
"GetCorAccount(<?>,)",
"@Синтаксис:
ПолучитьКорСчет(<Номер>,<Счет>)
@Назначение:
Получить из выборки следующий корреспондирующий счет. Выборка должна быть предварительно открыта при помощи метода ''ВыбратьКорСчета''. 
Возвращает  1 - следующий счет выбран успешно; 0 - следующий счет не выбран (отсутствует).
@Параметры: 
<Номер> - число - номер выборки. Необязательный параметр.
<Счет> - значение счета, на которое нужно спозиционироваться."
    },
    {"Item","A","ВыбратьВалюты","SelectCurrencies",
"ВыбратьВалюты(<?>,,,,)",
"SelectCurrencies(<?>,,,,)",
"@Синтаксис:
ВыбратьВалюты(<ФлагВсе>,<ФлагДК>,<Номер>,<РазвСальдо>,<Сортировка>)
@Назначение:
Открывает выборку валют.
Возвращает  1 - если действие выполнено и в выборке есть хотя бы одна валюта; 0 - если действие не выполнено или в выборке нет ни одной валюты.
@Параметры: 
<ФлагВсе> - число: 0 - отбирать те счета, которые имели итоги на этом уровне обхода итогов запроса; 1 - включить в выборку все счета, которые имели итоги в данном запросе; -1, -2 : включить в выборку счета, которые имели итоги в группировке n-го вышестоящего уровня. По умолчанию - 0.
<ФлагДК> - число: 1 - включать в выборку счета только с дебетовыми оборотами; 2 - включать в выборку счета только с кредито-выми оборотами. 0 - включать в выборку счета вне зависимости от дебетовых/кредитовых оборотов. По умолчанию 0.
<Номер> - число - номер выборки. Если параметр не указан, выборке присваивается номер 0.
<РазвСальдо> - признак необходимости рассчитывать развернутое сальдо по субконто. Используется только если в запросе участвуют субконто. 1 - рассчитывать развернутое сальдо. 0 - не рассчитыть развернутое сальдо; По умолчанию 0.
<Сортировка> - строка - идентификатор реквизита справочника валют, который будет использован для упорядочивания обхода валют методом ''ПолучитьВалюту''. Если значение пустое - используется представление справочника."
    },
    {"Item","A","ПолучитьВалюту","GetCurrency",
"ПолучитьВалюту(<?>,)",
"GetCurrency(<?>,)",
"@Синтаксис:
ПолучитьВалюту(<Номер>,<Валюта>)
@Назначение:
Получить из выборки следующую валюту. Выборка должна быть предварительно открыта при помощи метода  ''ВыбратьВалюты''. 
Возвращает  1 - следующая валюта выбрана успешно;  0 - следующий валюта не выбрана (отсутствует).
@Параметры: 
<Номер> - число - номер выборки. Необязательный параметр.
<Валюта> - значение валюты, на которое нужно спозиционироваться."
    },
    {"Item","A","ВыбратьПериоды","SelectPeriods",
"ВыбратьПериоды(<?>,,,)",
"SelectPeriods(<?>,,,)",
"@Синтаксис:
ВыбратьПериоды(<ФлагВсе>,<ФлагДК>,<Номер>,<РазвСальдо>)
@Назначение:
Открывает выборку периодов.
Возвращает  1 - если действие выполнено и в выборке есть хотя бы один период; 0 - если действие не выполнено или в выборке нет ни одного периода.
@Параметры: 
<ФлагВсе> - число: 0 - отбирать те счета, которые имели итоги на этом уровне обхода итогов запроса; 1 - включить в выборку все счета, которые имели итоги в данном запросе; -1, -2 : включить в выборку счета, которые имели итоги в группировке n-го вышестоящего уровня. По умолчанию - 0.
<ФлагДК> - число: 1 - включать в выборку счета только с дебетовыми оборотами; 2 - включать в выборку счета только с кредито-выми оборотами. 0 - включать в выборку счета вне зависимости от дебетовых/кредитовых оборотов. По умолчанию 0.
<Номер> - число - номер выборки. Если параметр не указан, выборке присваивается номер 0.
<РазвСальдо> - признак необходимости рассчитывать развернутое сальдо по субконто. Используется только если в запросе участвуют субконто. 1 - рассчитывать развернутое сальдо. 0 - не рассчитыть развернутое сальдо; По умолчанию 0."
    },
    {"Item","A","ПолучитьПериод","GetPeriod",
"ПолучитьПериод(<?>,)",
"GetPeriod(<?>,)",
"@Синтаксис:
ПолучитьПериод(<Номер>,<ДатаНачалаПериода>)
@Назначение:
Получить из выборки следующий период. Выборка должна быть предварительно открыта при помощи метода ''ВыбратьПериоды''. 
Возвращает 1 - следующий период выбран успешно;  0 - следующий период не выбран (отсутствует).
@Параметры: 
<Номер> - число - номер выборки. Необязательный параметр.
<ДатаНачалаПериода> - значение даты начала периода, на который нужно спозиционироваться."
    },
    {"Item","A","ВыбратьСубконто","SelectSubconto",
"ВыбратьСубконто(<?>,,,,,,)",
"SelectSubconto(<?>,,,,,,)",
"@Синтаксис:
ВыбратьСубконто(<Индекс>,<ФлагВсе>,<ФлагДК>,<Номер>,<РазвСальдо>,<Сортировка>,<ОбратныйПорядок>)
@Назначение:
Открывает выборку по субконто.
Возвращает  1 - если действие выполнено и в выборке есть хотя бы одно субконто; 0 - если действие не выполнено или в выборке нет ни одного субконто.
@Параметры: 
<Индекс> - число: порядковый номер вызова метода ''ИспользоватьСубконто''.
<ФлагВсе> - число: 0 - отбирать те субконто, которые имели итоги на этом уровне обхода итогов запроса; 1 - включить в выборку все субконто, которые имели итоги в данном запросе; -1, -2 : включить в выборку субконто, которые имели итоги в группировке n-го вышестоящего уровня. По умолчанию - 0.
<ФлагДК> - число: 1 - включать в выборку счета только с дебетовыми оборотами; 2 - включать в выборку счета только с кредито-выми оборотами. 0 - включать в выборку счета вне зависимости от дебетовых/кредитовых оборотов. По умолчанию 0.
<Номер> - число - номер выборки. Если параметр не указан, выборке присваивается номер 0.
<РазвСальдо> - признак необходимости рассчитывать развернутое сальдо по субконто. Используется только если в запросе участвуют субконто. 1 - рассчитывать развернутое сальдо. 0 - не рассчитыть развернутое сальдо; По умолчанию 0.
<Сортировка> - cтрока - идентификатор реквизита субконто (если субконто - справочник или документ или счет), который будет использован для упорядочивания обхода субконто методом ''ПолучитьСубконто''. Если значение пустое - используется стандартное представление.
<ОбратныйПорядок> число: 0 - выборка в прямом порядке, 1  - выборка в обратном порядке; необязательный параметр. По умолчанию 0."
    },
    {"Item","A","ПолучитьСубконто","GetSubconto",
"ПолучитьСубконто(<?>,,)",
"GetSubconto(<?>,,)",
"@Синтаксис:
ПолучитьСубконто(<Индекс>,<Номер>,<Значение>)
@Назначение:
Получить из выборки следующее субконто. Выборка должна быть предварительно открыта при помощи метода ''ВыбратьСубконто''. 
Возвращает 1 - следующее субконто выбрано успешно; 0 - следующе субконто не выбрано (отсутствует).
@Параметры: 
<Индекс> - число: порядковый номер вызова метода ''ИспользоватьСубконто''.
<Номер> - число - номер выборки. Необязательный параметр.
<Значение> - значение субконто, на которое нужно спозиционироваться."
    },
    {"Item","A","ВыбратьКорСубконто","SelectCorSubconto",
"ВыбратьКорСубконто(<?>,,,,)",
"SelectCorSubconto(<?>,,,,)",
"@Синтаксис:
ВыбратьКорСубконто(<Индекс>,<ФлагВсе>,<ФлагДК>,<Номер>,<Сортировка>,<ОбратныйПорядок>)
@Назначение:
Открывает выборку по корреспондирующим субконто.
Возвращает  1 - если действие выполнено и в выборке есть хотя бы одно субконто; 0 - если действие не выполнено или в выборке нет ни одного субконто.
@Параметры: 
<Индекс> - число: порядковый номер вызова метода ''ИспользоватьКорСубконто''.
<ФлагВсе> - число: 0 - отбирать те субконто, которые имели итоги на этом уровне обхода итогов запроса; 1 - включить в выборку все субконто, которые имели итоги в данном запросе; -1, -2 : включить в выборку субконто, которые имели итоги в группировке n-го вышестоящего уровня. По умолчанию - 0.
<ФлагДК> - число: 1 - включать в выборку счета только с дебетовыми оборотами; 2 - включать в выборку счета только с кредито-выми оборотами. 0 - включать в выборку счета вне зависимости от дебетовых/кредитовых оборотов. По умолчанию 0.
<Номер> - число - номер выборки. Если параметр не указан, выборке присваивается номер 0.
<Сортировка> - cтрока - идентификатор реквизита субконто (если субконто - справочник или документ или счет), который будет использован для упорядочивания обхода субконто методом ''ПолучитьКорСубконто''. Если значение пустое - используется стандартное представление.
<ОбратныйПорядок> - число: 1 - выборка в прямом порядке, -1 (минус единица) - выборка в обратном порядке; необязательный параметр. По умолчанию 1."
    },
    {"Item","A","ПолучитьКорСубконто","GetSubconto",
"ПолучитьКорСубконто(<?>,)",
"GetSubconto(<?>,)",
"@Синтаксис:
ПолучитьКорСубконто(<Индекс>,<Номер>,<Значение>)
@Назначение:
Получить из выборки следующее субконто. Выборка должна быть предварительно открыта при помощи метода ''ВыбратьКорСубконто''. 
Возвращает 1 - следующее субконто выбрано успешно; 0 - следующе субконто не выбрано (отсутствует).
@Параметры: 
<Индекс> - число: порядковый номер вызова метода ''ИспользоватьКорСубконто''.
<Номер> - число - номер выборки. Необязательный параметр.
<Значение> - значение корсубконто, на которое нужно спозиционироваться."
    },
    },
 {"Folder","A","Обращение к результатам","",
 {"Folder","A","Атрибуты","",
    {"Item","A","Счет","Account",
"Счет",
"Account",
"@Синтаксис:
Счет
@Назначение:
Текущий счет результатов запроса."
    },
    {"Item","A","КорСчет","CorAccount",
"КорСчет",
"CorAccount",
"@Синтаксис:
КорСчет
@Назначение:
Корреспондирующий счет, для которого извлекаются результаты запроса."
    },
    {"Item","A","Валюта","Currency",
"Валюта",
"Currency",
"@Синтаксис:
Валюта
@Назначение:
Валюта, по которой извлекаются результаты запроса."
    },
    {"Item","A","НачДата","BegDate",
"НачДата",
"BegDate",
"@Синтаксис:
НачДата
@Назначение:
Начальная дата периода, за который извлекаются результаты запроса."
    },
    {"Item","A","КонДата","EndDate",
"КонДата",
"EndDate",
"@Синтаксис:
КонДата
@Назначение:
Конечная дата периода, за который извлекаются результаты запроса."
    },
    {"Item","A","Операция","Operation",
"Операция",
"Operation",
"@Синтаксис:
Операция
@Назначение:
Текущая операция, по которой выдаются итоги при использовании запроса."
    },
    },
 {"Folder","A","Методы","",
    {"Item","A","Субконто","Subconto",
"Субконто(<?>)",
"Subconto(<?>)",
"@Синтаксис:
Субконто(<Номер>|<ВидСубконто>)
@Назначение:
Возвращает значение субконто, соответствующее текущему итогу.
@Параметры: 
<Номер> - число: номер выборки субконто.
<ВидСубконто> - значение типа ''Вид субконто''."
    },
    {"Item","A","КорСубконто","CorSubconto",
"КорСубконто(<?>)",
"CorSubconto(<?>)",
"@Синтаксис:
КорСубконто(<Номер>|<ВидСубконто>)
@Назначение:
Возвращает значение корреспондирующего субконто, соответствующее текущему итогу.
@Параметры: 
<Номер> - число: номер выборки корреспондирующего субконто.
<ВидСубконто> - значение типа ''ВидCубконто''."
    },
    {"Item","A","ПредставлениеСубконто","SubcontoPresentation",
"ПредставлениеСубконто(<?>,)",
"SubcontoPresentation(<?>,)",
"@Синтаксис:
ПредставлениеСубконто(<Номер>|<ВидСубконто>,<Краткое>)
@Назначение:
Возвращает cтроковое представление для субконто, соответствующего текущему итогу.
@Параметры: 
<Номер> - число: номер выборки субконто.
<ВидСубконто> - значение типа ''ВидCубконто''.
<Краткое> - число: 0 - полное представление субконто; 1 - краткое представление субконто. По умолчанию - 0.
    Краткое представление субконто - представление значения субконто соответствующего типа, заданное в Конфигураторе, либо формируемое в соответствии с правилами преобразования типов. Например, для субконто типа ''Справочник'' краткое представление будет зависеть от свойства ''Основное представение'', определенного для этого справочника; для  субконто типа ''Перечисление'' краткое представление (впрочем, как и полное), будет представлением значения перечисления; для субконто типа ''Документ'' кратким представлением будет идентификатор или синоним документа, его номер и дата.
    Полное представление субконто - это представление, заданное в свойствах данного вида субконто в Конфигураторе. Для задания представления используются управляющие элемнты закладки ''Представление'' в палитре свойств."
    },
    {"Item","A","ПредставлениеКорСубконто","CorSubcontoPresentation",
"ПредставлениеКорСубконто(<?>,)",
"CorSubcontoPresentation(<?>,)",
"@Синтаксис:
ПредставлениеСубконто(<Номер>|<ВидСубконто>,<Краткое>)
@Назначение:
Возвращает cтроковое представление для корреспондирующего субконто, соответствующего текущему итогу.
@Параметры: 
<Номер> - число: номер выборки корреспондирующего субконто.
<ВидСубконто> - значение типа ''ВидCубконто''.
<Краткое> - число: 0 - полное представление субконто; 1 - краткое представление субконто. По умолчанию - 0.
    Краткое представление субконто - представление значения субконто соответствующего типа, заданное в Конфигураторе, либо формируемое в соответствии с правилами преобразования типов. Например, для субконто типа ''Справочник'' краткое представление будет зависеть от свойства ''Основное представение'', определенного для этого справочника; для  субконто типа ''Перечисление'' краткое представление 
(впрочем, как и полное), будет представлением значения перечисления; для субконто типа ''Документ'' кратким представлением будет идентификатор или синоним документа, его номер и дата.
    Полное представление субконто - это представление, заданное в свойствах данного вида субконто в Конфигураторе. Для задания представления используются управляющие элемнты закладки ''Представление'' в палитре свойств."
    },
    {"Item","A","ЭтоГруппа","IsGroup",
"ЭтоГруппа()",
"IsGroup()",
"@Синтаксис:
ЭтоГруппа()
@Назначение:
Определяет, является ли текущее значение группироки запроса по субконто группой или нет. Имеет смысл только для субконто типа ''справочник''.
Возвращает число: 1 - значение группировки по субконто является группой; 0 - значение группировки по субконто не является группой."
    },
    {"Item","A","ВыбранаПоДт","SelectedByKt",
"ВыбранаПоДт()",
"SelectedByKt()",
"@Синтаксис:
ВыбранаПоДт()
@Назначение:
Определяет, выбран ли итог по дебету.
Возвращает число: 0 -данный итог по дебету не выбран; 1 -данный итог по дебету выбран."
    },
    {"Item","A","ВыбранаПоКт","SelectedByDt",
"ВыбранаПоКт()",
"SelectedByDt()",
"@Синтаксис:
ВыбранаПоКт()
@Назначение:
Определяет, выбран ли итог по кредиту.
Возвращает число: 0 -данный итог по кредиту не выбран; 1 -данный итог по кредиту выбран."
    },
 {"Folder","A","Остатки и обороты","",
    {"Item","A","СНД","IDB",
"СНД(<?>)",
"IDB(<?>)",
"@Синтаксис:
СНД(<ТипСуммы>)
@Назначение:
Возвращает дебетовое сальдо на начало периода.
@Параметры: 
<ТипСуммы> - Необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму."
    },
    {"Item","A","СНК","ICB",
"СНК(<?>)",
"ICB(<?>)",
"@Синтаксис:
СНК(<ТипСуммы>)
@Назначение:
Возвращает кредитовое сальдо на начало периода.
@Параметры: 
<ТипСуммы> - Необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму."
    },
    {"Item","A","СКД","FDB",
"СКД(<?>)",
"FDB(<?>)",
"@Синтаксис:
СКД(<ТипСуммы>)
@Назначение:
Возвращает дебетовое сальдо на конец периода.
@Параметры: 
<ТипСуммы> - Необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму."
    },
    {"Item","A","СКК","FCB",
"СКК(<?>)",
"FCB(<?>)",
"@Синтаксис:
СКК(<ТипСуммы>)
@Назначение:
Возвращает кредитовое сальдо на конец периода.
@Параметры: 
<ТипСуммы> - Необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму."
    },
    {"Item","A","ДО","TD",
"ДО(<?>)",
"TD(<?>)",
"@Синтаксис:
ДО(<ТипСуммы>)
@Назначение:
Возвращает дебетовый оборот за период.
@Параметры: 
<ТипСуммы> - Необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму."
    },
    {"Item","A","КО","TC",
"КО(<?>)",
"TC(<?>)",
"@Синтаксис:
КО(<ТипСуммы>)
@Назначение:
Возвращает кредитовый оборот за период.
@Параметры: 
<ТипСуммы> - Необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму."
    },
    {"Item","A","КорДО","CorTD",
"КорДО(<?>)",
"CorTD(<?>)",
"@Синтаксис:
КорДО(<ТипСуммы>)
@Назначение:
Возвращает дебетовый оборот между корреспонденциями.
@Параметры: 
<ТипСуммы> - Необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму."
    },
    {"Item","A","КорКО","CorTC",
"КорКО(<?>)",
"CorTC(<?>)",
"@Синтаксис:
КорКО(<ТипСуммы>)
@Назначение:
Возвращает кредитовый оборот между корреспонденциями.
@Параметры: 
<ТипСуммы> - Необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму."
    },
    },
 {"Folder","A","Развернутое сальдо","",
    {"Item","A","СНДРС","IDBRS",
"СНДРС(<?>)",
"IDBRS(<?>)",
"@Синтаксис:
СНДРС(<ТипСуммы>)
@Назначение:
Возвращает дебетовое развернутое сальдо на начало периода.
@Параметры: 
<ТипСуммы> - Необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму."
    },
    {"Item","A","СНКРС","ICBRS",
"СНКРС(<?>)",
"ICBRS(<?>)",
"@Синтаксис:
СНКРС(<ТипСуммы>
@Назначение:
Возвращает кредитовое развернутое сальдо на начало периода.
@Параметры: 
<ТипСуммы> - Необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму."
    },
    {"Item","A","СКДРС","FDBRS",
"СКДРС(<?>)",
"FDBRS(<?>)",
"@Синтаксис:
СКДРС(<ТипСуммы>)
@Назначение:
Возвращает дебетовое развернутое сальдо на конец периода.
@Параметры: 
<ТипСуммы> - Необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму."
    },
    {"Item","A","СККРС","FCBRS",
"СККРС(<?>)",
"FCBRS(<?>)",
"@Синтаксис:
СККРС(<ТипСуммы>)
@Назначение:
Возвращает кредитовое развернутое сальдо на конец периода.
@Параметры: 
<ТипСуммы> - Необязательный параметр. Число или строка - тип возвращаемой суммы. Может принимать одно из следующих значений: 1 (''C'') - сумма; 2 (''В'') - валютная сумма; 3 (''К'') - количество. Если параметр не указан, метод возвращает сумму."
    },
    },
    },
    },
    },
    },
    },
    },
 {"Folder","AST","Корректные проводки","Correct entries",
 {"Folder","AST","Атрибуты","",
    {"Item","AST","Комментарий","Description",
"Комментарий",
"Description",
"@Синтаксис:
Комментарий
@Назначение:
Доступ к значению реквизита ''Комментарий'' выбранной корректной проводки."
    },
    {"Item","AST","СчетДт","AccountDt",
"СчетДт",
"AccountDt",
"@Синтаксис:
СчетДт
@Назначение:
Счет дебета корректной проводки."
    },
    {"Item","AST","СчетКт","AccountDt",
"СчетКт",
"AccounKt",
"@Синтаксис:
СчетКт
@Назначение:
Счет кредита корректной проводки."
    },
    },
 {"Folder","AST","Методы","",
    {"Item","AST","Выбрана","Selected",
"Выбрана()",
"Selected()",
"@Синтаксис:
Выбрана()
@Назначение:
Проверить факт: выбрана ли какая-нибудь корректная проводка. Возвращает: 1 - если корректная проводка выбрана, 0 - если не выбрана."
    },
    {"Item","AST","ВыбратьКорректныеПроводки","SelectCorrectEntries",
"ВыбратьКорректныеПроводки(<?>);",
"SelectCorrectEntries(<?>);",
"@Синтаксис:
ВыбратьКорректныеПроводки(<ПланСчетов>)
@Назначение:
Открыть выборку корректных проводок по плану счетов. Возвращает число: 1 - если есть хотя бы одна корректная проводка удовлетворяющая условию; 0 - нет ни одной корректной проводки.
@Параметры:
<ПланСчетов> - необязательный параметр. Значение типа ''План счетов''. Если не задан, то по всем."
    },
    {"Item","AST","ВыбратьКорректныеПроводкиПоСчету","SelectCorrectEntriesByAccount",
"ВыбратьКорректныеПроводкиПоСчету(<?>,,);",
"SelectCorrectEntriesByAccount(<?>,,);",
"@Синтаксис:
ВыбратьКорректныеПроводкиПоСчету(<Счет>,<ТипСчета>,<ПланСчетов>)
@Назначение:
Открыть выборку корректных проводок для указанного счета. Возвращает число: 1 - если есть хотя бы одна корректная проводка удовлетворяющая условию; 0 - нет ни одной корректной проводки.
@Параметры:
<Счет> - код счета или сам счет, для которого отбирать корректные проводки.
<ТипСчета> - необязательный параметр. Число: 0 -  переданный счет является счетом дебета; 1 - переданный счет является счетом кредита. Значение по умолчанию 0.
 <ПланСчетов> - необязательный параметр. Значение типа ''План счетов''. Значение по умолчанию  - главный план счетов."
    },
    {"Item","AST","ПолучитьКорректнуюПроводку","GetCorrectEntry",
"ПолучитьКорректнуюПроводку()",
"GetCorrectEntry()",
"@Синтаксис:
ПолучитьКорректнуюПроводку()
@Назначение:
Получить из выборки следующую корректную проводку в выборке, открытой перед этим при помощи метода ВыбратьКорректныеПроводки или ВыбратьКорректныеПроводкиПоСчету. Возвращает: число: 1 - корректная проводка получена; 0 - не получена (отсутствует)."
    },
    {"Item","AST","Новая","New",
"Новая()",
"New()",
"@Синтаксис:
Новая()
@Назначение:
Добавить новую корректную проводку."
    },
    {"Item","AST","Записать","Write",
"Записать()",
"Write()",
"@Синтаксис:
Записать()
@Назначение:
Записать измененную или новую корректную проводку. Возвращает:число: 1 - корректная проводка успешно записана; 0 - не записана."
    },
    {"Item","AST","Удалить","Delete",
"Удалить()",
"Delete()",
"@Синтаксис:
Удалить()
@Назначение:
Удалить корректную проводку. Возвращает:число: 1 - корректная проводка успешно удалена; 0 - не удалена."
    },
    },
    },
 {"Folder","S","Журнал расчетов","Calculation journal",
 {"Folder","S","Атрибуты","",
    {"Item","S","Документ","Document",
"Документ",
"Document",
"@Синтаксис:
Документ
@Назначение:
Документ-основание текущей записи журнала расчетов.
Атрибут только для чтения.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","РодительскийДокумент","ParentDocument",
"РодительскийДокумент",
"ParentDocument",
"@Синтаксис:
РодительскийДокумент
@Назначение:
Документ, который ввел текущую запись в журнал расчетов. 
Атрибут только для чтения.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","Объект","Object",
"Объект",
"Object",
"@Синтаксис:
Объект
@Назначение:
Элемент справочника, для которого введена текущая запись журнала расчетов.
Атрибут только для чтения.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","ВидРасч","Calc",
"ВидРасч",
"Calc",
"@Синтаксис:
ВидРасч
@Назначение:
Вид расчета текущей записи журнала расчетов. 
Атрибут только для чтения.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","ДатаНачала","DateOfBegin",
"ДатаНачала",
"DateOfBegin",
"@Синтаксис:
ДатаНачала
@Назначение:
Дата начала действия записи журнала расчетов.
Атрибут только для чтения.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","ДатаОкончания","DateOfEnd",
"ДатаОкончания",
"DateOfEnd",
"@Синтаксис:
ДатаОкончания
@Назначение:
Дата окончания действия записи журнала расчетов.
Атрибут только для чтения.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","ПериодДействия","EffectivePeriod",
"ПериодДействия",
"EffectivePeriod",
"@Синтаксис:
ПериодДействия
@Назначение:
Период действия записи журнала расчетов.
Атрибут только для чтения.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","ПериодРегистрации","RegistrationPeriod",
"ПериодРегистрации",
"RegistrationPeriod",
"@Синтаксис:
ПериодРегистрации
@Назначение:
Период регистрации записи журнала расчетов.
Атрибут только для чтения.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","Сторно","Storno",
"Сторно",
"Storno",
"@Синтаксис:
Сторно
@Назначение:
Признак сторнирующей записи. Атрибут типа 'число', принимает два значения: 1 - для сторнирующих записей журнала расчетов и 0 - для обычных записей. Признак 'сторно' равен 1 не только для простых сторно-записей, но и для рассчитанных, отредактированных вручную или зафиксированных (не подлежащих редактированию) сторно-записей. 
Если сторнирующая запись введена программным образом, т.е. атрибут Сторно задан за счет применения метода УстановитьРеквизит или непосредственным присвоением: 
ЖрнРасчета = СоздатьОбъект(''ЖурналРасчета.Зарплата'';
....
ЖрнРасчета.Сторно = 1;
...,
тогда он может быть переопределен программным образом.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","Рассчитана","Calculated",
"Рассчитана",
"Calculated",
"@Синтаксис:
Рассчитана
@Назначение:
Признак того, что запись рассчитана. Атрибут типа 'число' принимает два значения: 1 - для рассчитанных записей журнала расчетов и 0 - для нерассчитанных записей. 
Атрибут только для чтения.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","Исправлена","Updated",
"Исправлена",
"Updated",
"@Синтаксис:
Исправлена
@Назначение:
Признак того, что запись исправлена вручную. Атрибут типа '''число'' принимает два значения: 1 - для записей журнала расчетов, результат которых исправлен '''вручную'',  и 0 - для остальных записей. 
Атрибут только для чтения.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","Фиксирована","Locked",
"Фиксирована",
"Locked",
"@Синтаксис:
Фиксирована
@Назначение:
Признак того, что результат расчета записи защищен от исправления. Атрибут типа 'число' принимает два значения: 1 - для фиксированных записей журнала расчетов и 0 - для остальных записей.
Атрибут только для чтения.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","Перерасчет","Recalc",
"Перерасчет",
"Recalc",
"@Синтаксис:
Перерасчет
@Назначение:
Признак того, что запись является перерасчетом другой записи прошлого периода. Атрибут типа 'число' принимает два значения: 1 - для записей-перерасчетов и 0 - для остальных записей. 
Атрибут только для чтения.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","ПервичнаяЗапись","ParentRecord",
"ПервичнаяЗапись",
"ParentRecord",
"@Синтаксис:
ПервичнаяЗапись
@Назначение:
Первичная запись записи-перерасчета. Атрибут типа 'запись журнала расчетов'. 
Атрибут только для чтения.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","Результат","Result",
"Результат",
"Result",
"@Синтаксис:
Результат
@Назначение: 
Атрибут типа ''число''. Используется для доступа к результату расчета записи. Как правило, самым важным действием процедуры ''ПровестиРасчет''  модуля расчета является вычисление результата расчета и заполнение данного атрибута."
    },
    },
 {"Folder","S","Методы","",
    {"Item","S","НачалоТекущегоПериода","CurrentPeriodBegin",
"НачалоТекущегоПериода()",
"CurrentPeriodBegin()",
"@Синтаксис:
НачалоТекущегоПериода()
@Назначение:
Возвращает дату начала текущего расчетного периода журнала расчетов.
@Параметры: Нет.
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    {"Item","S","КонецТекущегоПериода","CurrentPeriodEnd",
"КонецТекущегоПериода()",
"CurrentPeriodEnd()",
"@Синтаксис:
КонецТекущегоПериода()
@Назначение:
Возвращает дату окончания текущего расчетного периода журнала расчетов.
@Параметры: Нет.
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    {"Item","S","НачалоПериодаПоДате","PeriodBeginByDate",
"НачалоПериодаПоДате(<?>)",
"PeriodBeginByDate(<?>)",
"@Синтаксис:
НачалоПериодаПоДате(<Дата>)
@Назначение:
Возвращает дату начала произвольного расчетного периода журнала расчетов.
@Параметры:
<Дата> - любая дата, которая попадает в требуемый период.
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    {"Item","S","КонецПериодаПоДате","PeriodEndByDate",
"КонецПериодаПоДате(<?>)",
"PeriodEndByDate(<?>)",
"@Синтаксис:
КонецПериодаПоДате(<Дата>)
@Назначение:
Возвращает дату окончания произвольного расчетного периода журнала расчетов.
@Параметры:
<Дата> - любая дата, которая попадает в требуемый период.
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    {"Item","S","ПериодПоДате","PeriodByDate",
"ПериодПоДате(<?>)",
"PeriodByDate(<?>)",
"@Синтаксис:
ПериодПоДате(<Дата>)
@Назначение:
Возвращает период журнала расчетов по дате.
@Параметры:
<Дата> -  значение типа ''дата''."
    },
    {"Item","S","УстановитьТекущийПериод","SetCurrentPeriod",
"УстановитьТекущийПериод(<?>,)",
"SetCurrentPeriod(<?>,)",
"@Синтаксис:
УстановитьТекущийПериод(<Период>,<Способ>)
@Назначение:
Устанавливает текущий период журнала расчетов. Возвращает  число: 1 - выполнено; 0 - не выполнено.
@Параметры:
<Период> - значение типа ''период журнала расчетов''.
<Способ> - необязательный параметр, число:  0 - не отрабатывать системные действия, связанные со сменой периода;  1 - отработать системные процедуры по умолчанию (например, отменить рассчитанность записей при откате назад или провести архивацию документов при смене периода ''вперед''). В этом режиме метод ведет себя как интерактивная смена периода, но без вопросов. Значение параметра по умолчанию 1."
    },
    {"Item","S","ТекущийПериод","CurrentPeriod",
"ТекущийПериод()",
"CurrentPeriod()",
"@Синтаксис:
ТекущийПериод()
@Назначение:
Возвращает значение типа 'Период журнала расчетов'."
    },
    {"Item","S","ПолучитьЗапись","GetRecord",
"ПолучитьЗапись()",
"GetRecord()",
"@Синтаксис:
ПолучитьЗапись()
@Назначение:
Получить из выборки следующую запись журнала расчетов.
Возвращает: числовое значение - 1, если очередная запись журнала расчетов найдена, и 0, если очередная запись журнала не найдена или отсутствует (выборка пуста).
@Параметры: Нет.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","ВыполнитьРасчет","RunCalculate",
"ВыполнитьРасчет()",
"RunCalculate()",
"@Синтаксис:
ВыполнитьРасчет()
@Назначение:
Выполнить расчет текущей записи журнала расчетов.
Возвращает: числовое значение - 1, если расчет записи выполнен успешно, и 0 - в противном случае (в том числе, при прерывании процедуры расчета пользователем путем нажатия клавиши Esc). 
@Параметры: Нет.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","ОписательПериода","PeriodDescriptor",
"ОписательПериода(<?>)",
"PeriodDescriptor(<?>)",
"@Синтаксис:
ОписательПериода(<Дата>)
@Назначение:
Возвращает строку-описатель расчетного периода.
@Параметры:
<Дата> - любая дата периода, описатель которого требуется получить.
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    {"Item","S","ТекущаяЗапись","CurrentRecord",
"ТекущаяЗапись()",
"CurrentRecord()",
"@Синтаксис:
ТекущаяЗапись()
@Назначение:
Возвращает значение текущей записи журнала расчетов.
@Параметры: Нет.
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    {"Item","S","НайтиЗапись","FindRecord",
"НайтиЗапись(<?>)",
"FindRecord(<?>)",
"@Синтаксис:
НайтиЗапись(<Запись>)
@Назначение:
Позиционирует в журнале расчетов заданную запись.
@Параметры:
<Запись> - запись журнала расчетов.
@Возвращаемое значение:
1 - если операция успешно выполнена, и  0 - в противном случае.
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    {"Item","S","ФиксироватьЗапись","LockRecord",
"ФиксироватьЗапись()",
"LockRecord()",
"@Синтаксис:
ФиксироватьЗапись()
@Назначение:
Фиксирует текущую запись журнала расчетов, предохраняя от редактирования результат ее расчета. После применения этого метода атрибут записи Фиксирована принимает значение 1. Фиксация записи, фактически, означает невозможность отредактировать результат ее расчета любым, в том числе программным, способом.
@Параметры: Нет.
@Возвращаемое значение:
1 - если операция успешно выполнена, и  0 - в противном случае.
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    {"Item","S","ОсвободитьЗапись","ReleaseRecord",
"ОсвободитьЗапись()",
"ReleaseRecord()",
"@Синтаксис:
ОсвободитьЗапись()
@Назначение:
Метод снимает фиксацию с текущей записи журнала расчетов. После применения этого метода атрибут записи Фиксирована принимает значение 0. Действие обратное фиксации записи, фактически, означает возможность редактирования результата ее расчета.
@Параметры: Нет.
@Возвращаемое значение:
1 - если операция успешно выполнена, и  0 - в противном случае.
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    {"Item","S","ВвестиПерерасчет","InsertRecalc",
"ВвестиПерерасчет()",
"InsertRecalc()",
"@Синтаксис:
ВвестиПерерасчет()
@Назначение:
Вводит перерасчет текущей записи журнала расчетов.
@Возвращаемое значение:
1 - если операция успешно выполнена, и  0 - в противном случае.
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    {"Item","S","ВвестиПерерасчетНаОсновании","InsertRecalcByReason",
"ВвестиПерерасчетНаОсновании(<?>)",
"InsertRecalcByReason(<?>)",
"@Синтаксис:
ВвестиПерерасчетНаОсновании(<Документ>)
@Назначение:
Вводит перерасчет текущей записи журнала расчетов на основании произвольного документа.
@Параметры:
<Документ> - документ, на основании которого вводится запись (или записи) в журнал расчетов.
@Возвращаемое значение:
1 - если операция успешно выполнена, и  0 - в противном случае.
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    {"Item","S","Вид","Kind",
"Вид()",
"Kind()",
"@Синтаксис:
Вид()
@Назначение:
Возвращает название журнала расчетов, как оно задано при конфигурировании журнала. 
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    {"Item","S","ПредставлениеВида","KindPresent",
"ПредставлениеВида()",
"KindPresent()",
"@Синтаксис:
ПредставлениеВида()
@Назначение:
Получить пользовательское представление вида журнала расчетов, как он задан в конфигураторе.
Возвращает строковое значение, содержащее пользовательское представление вида журнала расчетов."
    },
    {"Item","S","НазначитьТип","SetType",
"НазначитьТип(<?>,,,)",
"SetType(<?>,,,)",
"@Синтаксис:
НазначитьТип(<ИмяРеквизита>,<ИмяТипа>,<Длина>,<Точность>)
@Назначение:
Назначить тип для реквизита неопределенного вида.
@Параметры: 
<ИмяРеквизита> - строка с наименованием реквизита неопределенного типа, как он назван в конфигураторе.
<ИмяТипа> - строковое выражение - название типа данных (или Вид субконто), который назначается реквизиту. Например, ''Строка'', ''Число'', ''Справочник.Товары'', ''Документ.РасходнаяНакладная'' и т.п.
<Длина> - необязательный параметр. Число - длина поля представления данных. Имеет смысл только при задании числового или строкового типа.
<Точность> - необязательный параметр. Число знаков после десятичной точки. Имеет смысл только при задании числового типа."
    },
    {"Item","S","УстановитьРеквизит","SetAttribute",
"УстановитьРеквизит(<?>,);",
"SetAttribute (<?>,);",
"@Синтаксис:
УстановитьРеквизит(<ИмяРеквизита>,<Значение>)
@Назначение:
Установить значение реквизита журнала расчетов для записи.
@Параметры:
<ИмяРеквизита> - наименование реквизита журнала расчетов.
<Значение> - значение, устанавливаемое для записи в реквизит <ИмяРеквизита>.
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    {"Item","S","ВвестиРасчет","InsertCalculation",
"ВвестиРасчет(<?>,,,,)",
"InsertCalculation(<?>,,,,)",
"@Синтаксис:
ВвестиРасчет(<Объект>,<ВидРасчета>,<ДатаНачала>,<ДатаОкончания>,<Результат>)
@Назначение:
Ввести запись в журнал расчетов.
@Параметры:
<Объект> - объект расчета - элемент справочника, заданного при конфигурировании журнала расчетов.
<ВидРасчета> - вид вводимого расчета - ссылка на агрегатный объект ВидРасчета.
<ДатаНачала> - дата начала действия вводимого расчета. По умолчанию - дата начала текущего периода журнала расчетов. 
<ДатаОкончания> - дата окончания действия вводимого расчета. По умолчанию - дата окончания текущего периода журнала расчетов. 
<Результат> - результат расчета. По умолчанию - ноль. 
@Возвращаемое значение:
1 - если операция успешно выполнена, и  0 - в противном случае.
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    {"Item","S","ВвестиРасчетНаОсновании","InsertCalculationByReason",
"ВвестиРасчетНаОсновании(<?>,,,,,)",
"InsertCalculationByReason(<?>,,,,,)",
"@Синтаксис:
ВвестиРасчетНаОсновании(<Основание>,<Объект>,<ВидРасчета>,<ДатаНачала>,<ДатаОкончания>,<Результат>)
@Назначение:
Ввести запись в журнал расчетов на основании произвольного документа.
@Параметры:
<Основание> - документ, на основании которого вводится запись (или записи) в журнал расчетов.
<Объект> - объект расчета - элемент справочника, заданного при конфигурировании журнала расчетов.
<ВидРасчета> - вид вводимого расчета - ссылка на агрегатный объект ВидРасчета.
<ДатаНачала> - дата начала действия вводимого расчета. По умолчанию - дата начала текущего периода журнала расчетов. 
<ДатаОкончания> - дата окончания действия вводимого расчета. По умолчанию - дата окончания текущего периода журнала расчетов. 
<Результат> - результат расчета. По умолчанию - ноль. 
@Возвращаемое значение:
1 - если операция успешно выполнена, и  0 - в противном случае.
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    {"Item","S","ЗаписатьРасчет","EnterCalculation",
"ЗаписатьРасчет(<?>,,,,)",
"EnterCalculation(<?>,,,,)",
"@Синтаксис:
ЗаписатьРасчет(<Объект>,<ВидРасчета>,<ДатаНачала>,<ДатаОкончания>,<Результат>)
@Назначение:
Записать расчет в журнал расчетов.
@Параметры:
<Объект> - объект расчета - элемент справочника, заданного при конфигурировании журнала расчетов.
<ВидРасчета> - вид вводимого расчета - ссылка на агрегатный объект ВидРасчета.
<ДатаНачала> - дата начала действия вводимого расчета. По умолчанию - дата начала текущего периода журнала расчетов. 
<ДатаОкончания> - дата окончания действия вводимого расчета. По умолчанию - дата окончания текущего периода журнала расчетов. 
<Результат> - результат расчета. По умолчанию - ноль. 
@Возвращаемое значение:
1 - если операция успешно выполнена, и  0 - в противном случае.
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    {"Item","S","ЗаписатьРасчетНаОсновании","EnterCalculationByReason",
"ЗаписатьРасчетНаОсновании(<?>,,,,,)",
"EnterCalculationByReason(<?>,,,,,)",
"@Синтаксис:
ЗаписатьРасчетНаОсновании(<Основание>,<Объект>,<ВидРасчета>,<ДатаНачала>,<ДатаОкончания>,<Результат>)
@Назначение:
Ввести запись в журнал расчетов на основании произвольного документа.
@Параметры:
<Основание> - документ, на основании которого вводится запись (или записи) в журнал расчетов.
<Объект> - объект расчета - элемент справочника, заданного при конфигурировании журнала расчетов.
<ВидРасчета> - вид вводимого расчета - ссылка на агрегатный объект ВидРасчета.
<ДатаНачала> - дата начала действия вводимого расчета. По умолчанию - дата начала текущего периода журнала расчетов. 
<ДатаОкончания> - дата окончания действия вводимого расчета. По умолчанию - дата окончания текущего периода журнала расчетов. 
<Результат> - результат расчета. По умолчанию - ноль. 
@Возвращаемое значение:
1 - если операция успешно выполнена, и  0 - в противном случае.
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    {"Item","S","Рассчитать","Calculate",
"Рассчитать();",
"Calculate();",
"@Синтаксис:
Рассчитать()
@Назначение:
Провести расчет текущей записи журнала расчетов.
@Замечание:
Метод работает только для переменных, созданных функцией СоздатьОбъект.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","ВыбратьЗаписи","SelectRecords",
"ВыбратьЗаписи(<?>,)",
"SelectRecords(<?>,)",
"@Синтаксис:
ВыбратьЗаписи(<Начало>,<Окончание>)
@Назначение:
Выбрать записи, действующие в определенном временном интервале.
@Параметры:
<Начало> - дата начала периода.
<Окончание> - дата окончания периода.
@Возвращаемое значение:
1 - если операция успешно выполнена и выборка не пуста, т.е. содержит хоть одну запись, и 0 - в противном случае
@Замечание:
Метод работает только для переменных, созданных функцией СоздатьОбъект.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","ВыбратьПериод","SelectPeriod",
"ВыбратьПериод(<?>)",
"SelectPeriod(<?>)",
"@Синтаксис:
ВыбратьПериод(<Дата>)
@Назначение:
Выбрать записи, введенные в журнал в определенном расчетном периоде.
@Параметры:
<Дата> - дата, лежащая в выбираемом периоде.
@Возвращаемое значение:
1 - если операция успешно выполнена и выборка не пуста, т.е. содержит хоть одну запись, и 0 - в противном случае
@Замечание:
Метод работает только для переменных созданных, функцией СоздатьОбъект.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","ВыбратьЗаписиПоОбъекту","SelectRecordsByObject",
"ВыбратьЗаписиПоОбъекту(<?>,,);",
"SelectRecordsByObject(<?>,,);",
"@Синтаксис:
ВыбратьЗаписиПоОбъекту(<Объект>,<Начало>,<Окончание>)
@Назначение:
Выбрать записи по одному объекту расчета, действующие в определенном временном интервале.
@Параметры:
<Объект> - объект расчета, записи которого выбираются.
<Начало> - дата начала периода.
<Окончание> - дата окончания периода.
@Возвращаемое значение:
1 - если операция успешно выполнена и выборка не пуста, т.е. содержит хоть одну запись, и 0 - в противном случае
@Замечание:
Метод работает только для переменных, созданных функцией СоздатьОбъект.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","ВыбратьЗаписиПоДокументу","SelectRecordsByDocument",
"ВыбратьЗаписиПоДокументу(<?>)",
"SelectRecordsByDocument(<?>)",
"@Синтаксис:
ВыбратьЗаписиПоДокументу(<Документ>)
@Назначение:
Выбрать записи журнала расчетов по документу-основанию.
@Параметры:
<Документ> - документ расчета, который является документом-основанием для отбираемых записей.
@Возвращаемое значение:
1 - если операция успешно выполнена и выборка не пуста, т.е. содержит хоть одну запись, и 0 - в противном случае
@Замечание:
Метод работает только для переменных, созданных функцией СоздатьОбъект.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","ВыбратьПериодПоОбъекту","SelectPeriodByObject",
"ВыбратьПериодПоОбъекту(<?,>)",
"SelectPeriodByObject(<?,>)",
"@Синтаксис:
ВыбратьПериодПоОбъекту(<Объект>,<Дата>)
@Назначение:
Выбрать записи по одному объекту расчета, зарегистрированные в определенном расчетном периоде журнала расчетов.
@Параметры:
<Объект> - объект расчета, записи которого выбираются.
<Дата> - дата, лежащая в выбираемом периоде.
@Возвращаемое значение:
1 - если операция успешно выполнена и выборка не пуста, т.е. содержит хоть одну запись, и 0 - в противном случае
@Замечание:
Метод работает только для переменных, созданных функцией СоздатьОбъект.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","ВыбратьПоЗначению","SelectByValue",
"ВыбратьПоЗначению(<?>,,,)",
"SelectByValue(<?>,,,)",
"@Синтаксис:
ВыбратьПоЗначению(<ИмяОтбора>,<ЗначениеОтбора>,<ПериодНачала>,<ПериодОкончания>)
@Назначение:
Осуществляет выборку записей по значению в графе отбора в заданном периоде.
@Параметры:
<ИмяОтбора> - строковое значение. Наименование графы отбора, как она определена при конфигурировании.
<ЗначениеОтбора> - выбираемое значение. 
<ПериодНачала> - значение типа ''Период журнала расчетов''. 
<ПериодОкончания> - значение типа 'Период журнала расчетов'. 
@Возвращает: 
Числовое значение. 1 - если отбор успешно установлен, 0 - в противном случае..
@Замечание:
Метод работает только для переменных, созданных функцией СоздатьОбъект.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","Новая","New",
"Новая()",
"New()",
"@Синтаксис:
Новая()
@Назначение:
Метод инициализирует создание новой строки журнала расчетов. Собственно запись новой строки журнала расчетов происходит при вызове метода ''Записать''. После инициализации создания новой строки, как правило, производится заполнение ее реквизитов с последующим вызовом метода ''Записать''."
    },
    {"Item","S","Записать","Write",
"Записать()",
"Write()",
"@Синтаксис:
Записать()
@Назначение:
Метод вносит изменения записи или новую запись в журнал расчетов. Данный метод применяется после метода ''Новая'' и заполнения реквизитов журнала расчетов при помощи метода ''УстановитьРеквизит''. Данный метод проверяет корректность заполненных реквизитов журнала расчетов. При вводе новых записей журнала расчетов методами ''Новая'' и ''Записать'' обязательно должны быть заполнены некоторые реквизиты. При вводе новых записей в журнал расчетов методами ''Новая'' и ''Записать'' записи вводятся ''как есть''. Система не выполняет правила перерасчетов, а также правила взаимного вытеснения видов расчета. Подробнее см. в документации гл. ''Работа с Журналами расчетов''."
    },
    {"Item","S","УдалитьЗапись","DeleteRecord",
"УдалитьЗапись()",
"DeleteRecord()",
"@Синтаксис:
УдалитьЗапись()
@Назначение:
Удалить запись журнала расчетов.
@Возвращаемое значение:
1 - если операция успешно выполнена, 0 - в противном случае
@Замечание:
Метод работает только для переменных, созданных функцией СоздатьОбъект.
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","Исправить","Update",
"Исправить(<?>)",
"Update(<?>)",
"@Синтаксис:
Исправить(<НовРез>)
@Назначение:
Выполняет то же действие, что и интерактивная процедура исправления результата, т.е. при исправлении записи текущего расчетного периода просто редактируется результат и метится запись ''ручкой'',  а при исправлении записи прошлого периода - вводится сторно той записи и еще одну запись-исправление.
@Параметры:
<НовРез> - новый результат"
    },
    {"Item","S","ОтменитьИсправление","UndoUpdate",
"ОтменитьИсправление()",
"UndoUpdate()",
"@Синтаксис:
ОтменитьИсправление()
@Назначение:
Отменяет исправление, сделанное ранее интерактивно или из языка методом ''Исправить''."
    },
    },
 {"Folder","S","Период журнала расчетов","",
 {"Folder","S","Атрибуты","",
    {"Item","S","ДатаНачала","DateOfBegin",
"ДатаНачала",
"DateOfBegin",
"@Синтаксис:
ДатаНачала
@Назначение:
Дата начала периода журнала расчетов.
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    {"Item","S","ДатаОкончания","DateOfEnd",
"ДатаОкончания",
"DateOfEnd",
"@Синтаксис:
ДатаОкончания
@Назначение:
Дата окончания периода журнала расчетов.
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    {"Item","S","ОписательПериода","PeriodDescriptor",
"ОписательПериода",
"PeriodDescriptor",
"@Синтаксис:
ОписательПериода
@Назначение:
Строковое представление расчетного периода журнала расчетов.
Подробнее см. в документации, глава 'Работа с Журналами расчетов'"
    },
    },
 {"Folder","S","Методы","",
    {"Item","S","ПрибавитьПериод","AddPeriod",
"ПрибавитьПериод(<?>)",
"AddPeriod(<?>)",
"@Синтаксис:
ПрибавитьПериод(<Количество>)
@Назначение:
Возвращает очередной период журнала на базе текущего периода.
@Параметры:
<Количество> - число периодов, на которое отстоит текущий период от искомого. По умолчанию - 1 (т.е. метод возвращает следующий период). Если <Количество> положительное число, возвращаемое значение - будущий период, в противном случае - прошлый период.
@Возвращаемое значение:
Период журнала, отстоящий от заданного на определяемое параметром <Количество> число периодов.
@Замечание:
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    },
    },
 {"Folder","S","Модуль формы журнала расчетов","",
 {"Folder","S","Методы","",
    {"Item","S","УстановитьОтбор","SetSelection",
"УстановитьОтбор(<?,>)",
"SetSelection(<?,>)",
"@Синтаксис:
УстановитьОтбор(<ИмяГрафыОтбора>,<ЗначениеОтбора>)
@Назначение:
Установить выборку по графе отбора.
@Параметры:
<ИмяГрафыОтбора> - строковое значение. Наименование графы отбора, как она определена при конфигурировании.
<ЗначениеОтбора> - выбираемое значение. 
@Возвращает: 
Числовое значение. 1 - если отбор успешно установлен, 0 - в противном случае..
@Замечание:
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","ПолучитьОтбор","GetSelection",
"ПолучитьОтбор(<?>,)",
"GetSelection(<?>,)",
"@Синтаксис:
ПолучитьОтбор(<ИмяГрафыОтбора>,<ЗначениеОтбора>)
@Назначение:
Получить значение предварительно установленного отбора.
@Параметры:
<ИмяГрафыОтбора> - переменная, в которую будет возвращено строковое значение - наименование графы отбора, как она определена при конфигурировании.
<ЗначениеОтбора> - переменная, в которую будет возвращено ранее установленное значение отбора. 
@Возвращает:
Числовое значение: 1 - если отбор был установлен и <ИмяГрафыОтбора> и <ЗначениеОтбора> заполнены установками, сделанными ранее методом УстановитьОтбор; 0 - если отбор прежде не был установлен. 
@Замечание:
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","ВидыОтбора","KindsOfSelection",
"ВидыОтбора(<?>)",
"KindsOfSelection(<?>)",
"@Синтаксис:
ВидыОтбора(<СписокИменОтборов>)
@Назначение:
Установить доступные виды отборов журнала расчетов для вызова их в интерактивном режиме.
Возвращает:
Строковое значение, содержащее текущий список имен отборов, разделенных запятыми (на момент до исполнения метода).
@Параметры: 
<СписокИменОтборов> - строка со списком разрешенных имен отборов (через запятую), или ''*'' - для всех видов отборов.
@Замечание:
Метод доступен только в контексте Модуля формы журнала расчетов."
    },
    {"Item","S","ЗакладкиОтбора","TabCtrlSelection",
"ЗакладкиОтбора(<?,>)",
"TabCtrlSelection(<?,>)",
"@Синтаксис:
ЗакладкиОтбора(<ИмяОтбора>,<ЗначениеОтбора>)
@Назначение:
Установить в форме журнала расчетов закладки для интерактивного осуществления отбора.
@Параметры:
<ИмяОтбора> - строковое выражение, содержащее имя графы отбора, по которой будут созданы закладки.
<ЗначениеОтбора> - значение отбора, соответствующее закладке, устанавливаемой первоначально.
@Возвращает:
 1 - если операция успешно выполнена, и 0 - в противном случае.
@Замечание:
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","ГраницаПросмотра","ViewBound",
"ГраницаПросмотра(<?>)",
"ViewBound(<?>)",
"@Синтаксис:
ГраницаПросмотра(<Период>)
@Назначение:
Установить в форме журнала расчетов границу видимости записей.
@Параметры:
<Период> - значение типа 'Период журнала расчетов', которое устанавливается как граница видимости записей журнала расчетов.
@Возвращает:
Значение типа 'Период журнала расчетов'. Текущее значение границы просмотра записей журнала расчетов, установленное до вызова метода программным образом или интерактивно.
@Замечание:
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","УстановитьПредставление","SetPresentation",
"УстановитьПредставление(<?,>)",
"SetPresentation(<?,>)",
"@Синтаксис:
УстановитьПредставление(<Режим>,<Объект>)
@Назначение:
Установить в форме журнала расчетов режим представления записей.
@Параметры:
<Режим> - числовое значение - режим представления журнала расчетов. Значение  <Режим> может принимать следующие значения:
1 - Записи по всем объектам расчета	
2 - Записи по одному объекту расчета	
3 - Записи по одному документу-основанию	
<Объект> - объект, записи которого отображаются. Если устанавливаемый режим - ''по одному документу'', этот параметр должен иметь тип ''документ'', если режим устанавливаемого представления - ''по одному объекту'', этот параметр должен иметь тип ''элемент справочника''.
@Возвращает:
Числовое значение - 1, если представление успешно установлено; 0 - если представление по каким-либо причинам не установлено.
@Замечание:
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","АктивизироватьОбъект","ActivateObj",
"АктивизироватьОбъект(<?>);",
"ActivateObj(<?>);",
"@Синтаксис:
АктивизироватьОбъект(<Объект>)
@Назначение:
Активизировать объект в форме списка.
@Параметры:
<Объект> - выражение, содержащее запись журнала расчетов.
@Замечание:
Доступ к методу возможен только в контексте Модуля формы журнала расчетов."
    },
    {"Item","S","ПолучитьПредставление","GetPresentation",
"ПолучитьПредставление(<?,>)",
"GetPresentation(<?,>)",
"@Синтаксис:
ПолучитьПредставление(<Режим>,<Объект>)
@Назначение:
Получить установки представления журнала расчетов - режим представления и отображаемый объект. 
@Параметры:
<Режим> - переменная, в которую записывается числовое значение - текущий режим представления журнала расчетов. Параметр <Режим>, переданный по ссылке, в результате работы метода может принять следующие значения:
1 - Записи по всем объектам расчета	
2 - Записи по одному объекту расчета	
3 - Записи по одному документу-основанию	
<Объект> - переменная, в которую записывается объект, записи которого отображаются. Если текущий режим - ''по одному документу'', этот параметр примет значение типа ''документ'', если режим устанавливаемого представления - ''по одному объекту'', этот параметр примет значение типа ''элемент справочника''.
@Возвращает:
Числовое значение - 1, если представление успешно установлено; 0 - если представление по каким-либо причинам не установлено.
@Замечание:
Подробнее см. в документации, глава ''Работа с Журналами расчетов''"
    },
    {"Item","S","РассчитыватьПриОтменеИсправления","CalculateOnEditCancel",
"РассчитыватьПриОтменеИсправления(<?>)",
"CalculateOnEditCancel(<?>)",
"@Синтаксис:
РассчитыватьПриОтменеИсправления(<Флаг>)
@Назначение:
Устанавливает значение флага автоматического расчета записи журнала расчетов при интерактивной отмене ее исправления. Возвращает текущее значение этого флага.
@Параметры:
<Флаг> - необязательный параметр. Число: 1 - автоматически рассчитывать записи журнала расчетов при интерактивной отмене ее исправления; 0 - не рассчитывать автоматически.
@Замечание:
По умолчанию форма журнала расчетов всегда открывается со значением флага 0 (не рассчитывать записи журнала расчетов автоматически)."
    },
    },
 {"Folder","S","Предопределенные","",
    {"Item","S","ПриИсправленииРезультата","OnResultUpdate",
"Процедура ПриИсправленииРезультата(<?>)
КонецПроцедуры",
"Procedure OnResultUpdate(<?>)
EndProcedure",
"@Синтаксис:
ПриИсправленииРезультата(<Запись>)
@Назначение:
Предопределенная процедура при редактировании результата расчета записи журнала расчетов.
@Параметры:
<Запись> - ссылка на запись журнала расчетов, результат расчета которой исправляется. 
@Замечание:
Данная процедура может располагаться только в модуле формы журнала расчетов."
    },
    {"Item","S","ПриОтменеИсправления","OnUpdateCancel",
"Процедура ПриОтменеИсправления(<?>)
КонецПроцедуры",
"Procedure OnUpdateCancel(<?>)
EndProcedure",
"@Синтаксис:
ПриОтменеИсправления(<Запись>)
@Назначение:
Предопределенная процедура при отмене исправления результата расчета в журнале расчета.
@Параметры:
<Запись> - ссылка на запись журнала расчетов, исправление результата которой отменяется.
@Замечание:
Данная процедура может располагаться только в модуле формы журнала расчетов."
    },
    {"Item","S","ПриРасчете","OnCalculating",
"Процедура ПриРасчете(<?>)
КонецПроцедуры",
"Procedure OnCalculating(<?>)
EndProcedure",
"@Синтаксис:
ПриРасчете(<ОбъектРасчета>)
@Назначение:
Предопределенная процедура, вызываемая при расчете одной записи, записей объекта или записей документа в журнале расчетов.
@Параметры:
<ОбъектРасчета> - запись журнала расчетов или элемент справочника, являющийся объектом расчета, или документ, записи которого рассчитываются. Что в данный момент передается системой при вызове процедуры - зависит от выполняемого действия: расчет одной записи, расчет объекта или расчет документа. 
@Замечание:
Данная процедура может располагаться только в модуле формы журнала расчетов."
    },
    {"Item","S","ПриУстановкеОтбора","OnSetSelection",
"Процедура ПриУстановкеОтбора(<?>,)
КонецПроцедуры",
"Procedure OnSetSelection(<?>,)
EndProcedure",
"@Синтаксис:
ПриУстановкеОтбора(<ИмяОтбора>,<ЗначениеОтбора>)
@Назначение:
Предопределенная процедура, вызываемая при установке отбора в форме журнала расчетов.
@Параметры:
<ИмяОтбора> - строковое значение. Наименование графы отбора, которая выбрана пользователем при интерактивной установке отбора.
<ЗначениеОтбора> - значение отбора, которое выбрано пользователем при интерактивной установке отбора. 
@Замечание:
Данная процедура может располагаться только в модуле формы журнала расчетов."
    },
    {"Item","S","ПриУстановкеГраницыПросмотра","OnSetViewBound",
"Процедура ПриУстановкеГраницыПросмотра(<?>)
КонецПроцедуры",
"Procedure OnSetViewBound(<?>)
EndProcedure",
"@Синтаксис:
ПриУстановкеГраницыПросмотра(<Период>)
@Назначение:
Предопределенная процедура при установке границы просмотра журнала расчетов.
@Параметры:
<Период> - значение типа 'Период журнала расчетов'. Период, устанавливаемый пользователем как граница просмотра записей.
@Замечание:
Данная процедура может располагаться только в модуле формы журнала расчетов."
    },
    {"Item","S","ПриУстановкеПредставления","OnSetPresentation",
"Процедура ПриУстановкеПредставления(<?>)
КонецПроцедуры",
"Procedure OnSetPresentation(<?>)
EndProcedure",
"@Синтаксис:
ПриУстановкеПредставления(<Режим>)
@Назначение:
Предопределенная процедура при установке режима представления записей журнала расчетов.
@Параметры:
<Режим> - числовое значение - режим представления записей журнала расчетов, устанавливаемый пользователем.
@Замечание:
Данная процедура может располагаться только в модуле формы журнала расчетов."
    },
    {"Item","S","ПриВыбореВладельца","OnSetOwner",
"Процедура ПриВыбореВладельца(<?>)
КонецПроцедуры",
"Procedure OnSetOwner(<?>)
EndProcedure",
"@Синтаксис:
ПриВыбореВладельца(<Элемент>)
@Назначение:
Предопределенная процедура выбора элемента справочника, по которому будут выведены расчеты (при интерактивной смене владельца, т.е. смене позиции в ''главном'' справочнике, для которого создан журнал расчетов). 
@Параметры:
<Элемент> - значение устанавливаемого владельца - т.е. элемент справочника, по которому будут выведены расчеты.
@Замечание:
Процедура выполняется только в том случае, когда журнал расчетов выводится ''по объекту'', т.е. в нем отображаются записи по одному объекту расчета. 
Данная предопределенная процедура может располагаться только в модуле формы журнала расчетов."
    },
    },
    },
    },
 {"Folder","S","Вид расчетов","Calculation kind",
 {"Folder","S","Атрибуты","",
    {"Item","S","Код","Code",
"Код",
"Code",
"@Синтаксис:
Код
@Назначение:
Код вида расчета.
Подробнее см. в документации, глава 'Работа с Видами и Группами расчетов'."
    },
    {"Item","S","Наименование","Description",
"Наименование",
"Description",
"@Синтаксис:
Наименование
@Назначение:
Атрибут типа строка, соответствующая комментарию, заданному при конфигурировании вида расчета.
Подробнее см. в документации, глава 'Работа с Видами и Группами расчетов'."
    },
    {"Item","S","Очередность","Priority",
"Очередность",
"Priority",
"@Синтаксис:
Очередность
@Назначение:
Число, соответствующее очередности вида расчета, заданной при конфигурировании.
Подробнее см. в документации, глава 'Работа с Видами и Группами расчетов'."
    },
    {"Item","S","ПриоритетВытеснения","ReplacementPriority",
"ПриоритетВытеснения",
"ReplacementPriority",
"@Синтаксис:
ПриоритетВытеснения
@Назначение:
Число, соответствующее приоритету вытеснения вида расчета, заданному при конфигурировании.
Подробнее см. в документации, глава 'Работа с Видами и Группами расчетов'."
    },
    },
 {"Folder","S","Методы","",
    {"Item","S","ВходитВГруппу","BelongsToGroup",
"ВходитВГруппу(<?>)",
"BelongsToGroup(<?>)",
"@Синтаксис:
ВходитВГруппу(<Группа>)
@Назначение:
Определить входимость вида расчетов в группу видов расчета.
Возвращает: число 1, если вид расчета входит в группу <Группа> и 0 - в противном случае.
@Параметры:
<Группа> - группа расчетов, входимость в которую проверяется.
Подробнее см. в документации, глава ''Работа с Видами и Группами расчетов''."
    },
    {"Item","S","Выбран","Selected",
"Выбран()",
"Selected()",
"@Синтаксис:
Выбран()
@Назначение:
Возвратить признак того, выбран конкретный вид расчета или нет
Возвращает: число 1, если конкретный вид расчета выбран и 0 - в противном случае.
@Параметры: 
нет.
Подробнее см. в документации, глава ''Работа с Видами и Группами расчетов''."
    },
    {"Item","S","ВытесняетВидРасчета","DisplaceCalc",
"ВытесняетВидРасчета(<?>)",
"DisplaceCalc(<?>)",
"@Синтаксис:
ВытесняетВидРасчета(<ВидРасчета>)
@Назначение:
Определяет, вытесняет ли данный вид расчета, тот, который задан в качестве параметра. Возвращает: число 1, если вид расчета, метод которого вызывается, вытесняет заданный в качестве параметра <ВидРасчета> и 0 - в противном случае.
@Параметры:
<ВидРасчета> -  вид расчета, для которого проверяется, вытесняется ли он текущим видом расчета."
    },
    {"Item","S","ВытесняетсяВидомРасчета","DisplaceByCalc",
"ВытесняетсяВидомРасчета(<?>)",
"DisplaceByCalc(<?>)",
"@Синтаксис:
ВытесняетсяВидомРасчета(<ВидРасчета>)
@Назначение:
 Определяет, вытесняется ли текущий вид расчета заданным видом расчета. Возвращает: число 1, если вид расчета, метод которого вызывается, вытесняется видом расчета, заданным в качестве параметра <ВидРасчета> и 0 - в противном случае.
@Параметры:
<ВидРасчета> -  вид расчета, для которого проверяется, вытесняет ли он текущий вид расчета."
    },
    },
 {"Folder","S","Методы объекта ''ВидРасчета''","",
    {"Item","S","ПолучитьАтрибут","GetAttrib",
"ПолучитьАтрибут(<?>);",
"GetAttrib(<?>);",
"@Синтаксис:
ПолучитьАтрибут(<ИмяВидаРасч>)
@Назначение:
Получить значение конкретного вида расчета по идентификатору. Возвращает значение конкретного вида расчета.
@Параметры:
<ИмяВидаРасч> - строковое выражение, содержащее имя конкретного вида расчета , как оно задано в конфигураторе."
    },
    },
 {"Folder","S","Группа видов расчетов","Calculation group",
 {"Folder","S","Атрибуты","",
    {"Item","S","Код","Code",
"Код",
"Code",
"@Синтаксис:
Код
@Назначение:
Код группы видов расчета.
Подробнее см. в документации, глава 'Работа с Видами и Группами расчетов'."
    },
    {"Item","S","Наименование","Description",
"Наименование",
"Description",
"@Синтаксис:
Наименование
@Назначение:
Атрибут типа строка, соответствующая комментарию, заданному при конфигурировании группы видов расчета.
Подробнее см. в документации, глава 'Работа с Видами и Группами расчетов'."
    },
    },
 {"Folder","S","Методы","",
    {"Item","S","СодержитВидРасчета","ContainCalculationKind",
"СодержитВидРасчета(<?>)",
"ContainCalculationKind(<?>)",
"@Синтаксис:
СодержитВидРасчета(<ВидРасчета>)
@Назначение:
Определить, содержит ли группа вид расчета.
Возвращает: число 1, если <ВидРасчета> входит в группу и 0 - в противном случае.
@Параметры:
<ВидРасчета> - вид расчета, входимость которого проверяется.
Подробнее см. в документации, глава ''Работа с Видами и Группами расчетов''."
    },
    {"Item","S","Количество","Count",
"Количество();",
"Count();",
"@Синтаксис:
Количество()
@Назначение:
Определить количество видов расчета, включенных в группу видов расчета. 
Возвращает: целое положительное число - количество видов расчета, входящих в группу.
@Параметры: 
нет.
Подробнее см. в документации, глава ''Работа с Видами и Группами расчетов''."
    },
    {"Item","S","ПолучитьРасчет","GetCalculation",
"ПолучитьРасчет(<?>)",
"GetCalculation(<?>)",
"@Синтаксис:
ПолучитьРасчет(<Номер>)
@Назначение:
Получить ссылку на вид расчета, входящий в данную группу под определенным номером.
Возвращает: агрегатный объект типа 'ВидРасчета'.
@Параметры:
<Номер> - номер вида расчета в списке видов расчета данной группы.
Подробнее см. в документации, глава ''Работа с Видами и Группами расчетов''."
    },
    },
    },
 {"Folder","S","Модуль вида расчета","",
 {"Folder","S","Предопределенные процедуры","",
    {"Item","S","ПровестиРасчет","TransactCalculation",
"Процедура ПровестиРасчет()
КонецПроцедуры",
"Procedure TransactCalculation()
EndProcedure",
"@Синтаксис:
ПровестиРасчет()
@Назначение:
Предопределенная процедура расчета записи журнала расчетов.
@Параметры:
Нет
@Замечание:
Данная процедура может располагаться только в модуле вида расчета."
    },
    },
    },
    },
 {"Folder","S","Правила перерасчета","Recalculation rule",
 {"Folder","S","Атрибуты","",
    {"Item","S","Тип","Type",
"Тип",
"Type",
"@Синтаксис:
Тип
@Назначение:
Атрибут позволяет прочитать/установить значение типа  правила перерасчета. Данный атрибут может принимать следующие значения:
0 - при вводе записи журнала расчетов с любым периодом действия зависимые виды расчетов должны быть перерасчитаны только в текущем периоде журнала расчетов (фактически это приведет к снятию флажка ''рассчитанности'' записи);
1 - зависимые виды расчетов должны быть перерасчитаны в том же периоде, что и вводимая запись журнала расчетов;
2 - зависимые виды расчетов должны быть перерасчитаны в нескольких периодах, следующих за периодом действия вводимой записи журнала расчетов (количество периодов задано атрибутом КоличествоПериодов)."
    },
    {"Item","S","КоличествоПериодов","NumberOfPeriods",
"КоличествоПериодов",
"NumberOfPeriods",
"@Синтаксис:
КоличествоПериодов
@Назначение:
Атрибут позволяет прочитать/установить количество периодов перерасчета."
    },
    },
 {"Folder","S","Методы","",
    {"Item","S","КоличествоВедущих","NumberOfLeadings",
"КоличествоВедущих()",
"NumberOfLeadings()",
"@Синтаксис:
КоличествоВедущих()
@Назначение:
Возвращает количество ''ведущих'' видов расчета (при вводе которых в журнал расчетов необходимо произвести перерасчеты согласно данному правилу).
@Параметры:
Нет."
    },
    {"Item","S","ИмеетВедущий","HasLeading",
"ИмеетВедущий(<?>)",
"HasLeading(<?>)",
"@Синтаксис:
ИмеетВедущий(<ВидРасчета>)
@Назначение:
Установить принадлежность вида расчета к ведущим для правила перерасчета. Возвращает число: 1, если данное правило перерасчета имеет заданный вид расчета в качестве ведущего (т.е. при вводе этого вида расчета в журнал расчетов сработает данное правило перерасчета); 0, если данное правило перерасчета не имеет заданный вид расчета в качестве ведущего.
@Параметры:
<ВидРасчета> - Вид расчета."
    },
    {"Item","S","ПолучитьВедущий","GetLeading",
"ПолучитьВедущий(<?>)",
"GetLeading(<?>)",
"@Синтаксис:
ПолучитьВедущий(<НомерВР>)
@Назначение:
Возвращает Вид расчета с номером <НомерВР> из списка ''ведущих'' расчетов.
@Параметры:
<НомерВР> - номер вида расчета в списке ''ведущих'' расчетов."
    },
    {"Item","S","ДобавитьКакВедущий","AddAsLeading",
"ДобавитьКакВедущий(<?>)",
"AddAsLeading(<?>)",
"@Синтаксис:
ДобавитьКакВедущий(<ВидРасчета>)
@Назначение:
Добавляет вид расчета в список ''ведущих''.
@Параметры:
<ВидРасчета> - Вид расчета."
    },
    {"Item","S","УдалитьВсеВедущие","DeleteAllLeadings",
"УдалитьВсеВедущие()",
"DeleteAllLeadings()",
"@Синтаксис:
УдалитьВсеВедущие()
@Назначение:
Удаляет все виды расчета из списка ''ведущих''.
@Параметры:
Нет."
    },
    {"Item","S","КоличествоПодчиненных","NumberOfDependents",
"КоличествоПодчиненных()",
"NumberOfDependents()",
"@Синтаксис:
КоличествоПодчиненных()
@Назначение:
Возвращает количество ''подчиненных'' видов расчета (для которых необходимо произвести перерасчеты согласно данному правилу).
@Параметры:
Нет."
    },
    {"Item","S","ИмеетПодчиненный","HasDependent",
"ИмеетПодчиненный(<?>)",
"HasDependent(<?>)",
"@Синтаксис:
ИмеетПодчиненный(<ВидРасчета>)
@Назначение:
Установить принадлежность вида расчета к ''подчиненным'' для правила перерасчета. Возвращает число:1, если данное правило перерасчета имеет заданный вид расчета в качестве подчиненного (т.е. для этого вида расчета в журнале расчетов сработает данное правило перерасчета); 0, если данное правило перерасчета не имеет заданный вид расчета в качестве подчиненного.
@Параметры:
<ВидРасчета> - Вид расчета."
    },
    {"Item","S","ПолучитьПодчиненный","GetDependent",
"ПолучитьПодчиненный(<?>)",
"GetDependent(<?>)",
"@Синтаксис:
ПолучитьПодчиненный(<НомерВР>)
@Назначение:
Возвращает Вид расчета с номером <НомерВР> из списка ''подчиненных'' расчетов.
@Параметры:
<НомерВР> - номер вида расчета в списке ''подчиненных'' расчетов."
    },
    {"Item","S","ДобавитьКакПодчиненный","AddAsDependent",
"ДобавитьКакПодчиненный(<?>)",
"AddAsDependent(<?>)",
"@Синтаксис:
ДобавитьКакПодчиненный(<ВидРасчета>)
@Назначение:
Добавляет вид расчета в список ''подчиненных''
@Параметры:
<ВидРасчета> - Вид расчета."
    },
    {"Item","S","УдалитьВсеПодчиненные","DeleteAllDependents",
"УдалитьВсеПодчиненные()",
"DeleteAllDependents()",
"@Синтаксис:
УдалитьВсеПодчиненные()
@Назначение:
Удаляет все виды расчета из списка ''подчиненных''.
@Параметры:
Нет."
    },
    },
 {"Folder","S","Методы глобального атрибута ''ПравилоПерерасчета''","",
    {"Item","S","Применять","Use",
"Применять(<?>)",
"Use(<?>)",
"@Синтаксис:
Применять(<ФлагПрименения>)
@Назначение:
Устанавливает необходимость применять или не применять все правила перерасчетов при вводе новых записей в журнал расчетов. Возвращает текущее значение флага применения (до исполнения метода).
@Параметры:
<ФлагПрименения> - число: 1 - применять; 0 - не применять."
    },
    },
    },
 {"Folder","S","Календарь","Calendar",
 {"Folder","S","Атрибуты","",
    {"Item","S","Дата","Date",
"Дата",
"Date",
"@Синтаксис:
Дата
@Назначение:
Дата текущей строки календаря (только для чтения) ."
    },
    {"Item","S","Значение","Value",
"Значение",
"Value",
"@Синтаксис:
Значение
@Назначение:
Значение текущей (на которой позиционирована выборка) строки календаря - число с двумя знаками после запятой (доступно чтение и запись) ."
    },
    },
 {"Folder","S","Методы","",
    {"Item","S","Вид","Kind",
"Вид()",
"Kind()",
"@Синтаксис:
Вид()
@Назначение:
Возвращает идентификатор календаря, заданный при конфигурировании."
    },
    {"Item","S","Выбран","Selected",
"Выбран()",
"Selected()",
"@Синтаксис:
Выбран()
@Назначение:
Возвращает  флаг выбора календаря: 1 - если календарь выбран, 0 - если не выбран."
    },
    {"Item","S","Дней","Days",
"Дней(<?>,)",
"Days(<?>,)",
"@Синтаксис:
Дней(<ДатаНачала>,<ДатаОкончания>)
@Назначение:
Получить количество ''ненулевых'' дней за период. 
Возвращает: целое положительное число - количество дней.
@Параметры: 
<ДатаНачала> - дата начала периода, в котором определяется количество дней.
<ДатаОкончания> - дата окончания периода, в котором определяется количество дней.
@Замечание: 
Если <ДатаНачала> больше, чем <ДатаОкончания>, будет выведено сообщение об ошибке."
    },
    {"Item","S","Часов","Hours",
"Часов(<?>,)",
"Hours(<?>,)",
"@Синтаксис:
Часов(<ДатаНачала>,<ДатаОкончания>)
@Назначение:
Получить количество ''ненулевых'' часов за период. 
Возвращает: положительное число - сумма числовых значений соответствующих тем дням календаря, которые попадают в заданный период.
@Параметры: 
<ДатаНачала> - дата начала периода, в котором определяется сумма числовых значений, интерпретируемая как количество часов.
<ДатаОкончания> - дата окончания периода, в котором определяется сумма числовых значений, интерпретируемая как количество часов.
@Замечание: 
Если <ДатаНачала> больше, чем <ДатаОкончания>, будет выведено сообщение об ошибке."
    },
    {"Item","S","ПолучитьАтрибут","GetAttrib",
"ПолучитьАтрибут(<?>);",
"GetAttrib(<?>);",
"@Синтаксис:
ПолучитьАтрибут(<ИмяАтрибута>)
@Назначение:
Получить значение атрибута по имени идентификатора. Возвращает значение атрибута.
@Параметры:
<ИмяАтрибута> - строковое выражение, содержащее имя атрибута, как оно задано в конфигураторе.
@Замечание:
Доступные имена атрибутов - ''Дата'' и ''Значение''"
    },
    {"Item","AST","УстановитьАтрибут","SetAttrib",
"УстановитьАтрибут(<?>,);",
"SetAttrib(<?>,);",
"@Синтаксис:
УстановитьАтрибут(<ИмяАтрибута>,<Значение>)
@Назначение:
Установить значение атрибута по имени идентификатора.
@Параметры:
<ИмяАтрибута> - строковое выражение, содержащее имя атрибута, как оно задано в конфигураторе.
<Значение> - выражение, содержащее устанавливаемое значение атрибута.
@Замечание:
Доступные имена атрибутов - ''Дата'' и ''Значение''"
    },
    {"Item","S","ПолучитьДату","GetDate",
"ПолучитьДату(<?>,)",
"GetDate(<?>,)",
"@Синтаксис:
ПолучитьДату(<ДатаНачала>,<Количество>)
@Назначение:
Получить дату календаря. 
Возвращает: значение типа ''дата''.
@Параметры: 
<ДатаНачала> - дата начала периода, от которой будут отсчитываться дни.
<Количество> - количество дней, отсчитываемое от <ДатаНачала>."
    },
    {"Item","S","ВыбратьДаты","SelectDates",
"ВыбратьДаты(<?>,)",
"SelectDates(<?>,)",
"@Синтаксис:
ВыбратьДаты(<ДатаНачала>,<ДатаКонца>)
@Назначение:
Открывает выборку записей календаря. Возвращает:число: 1 - выборка открыта и в ней есть хоть одна запись; 0 - не обнаружено записей.
@Параметры: 
<ДатаНачала> - дата начала периода выборки.
<ДатаКонца> - дата конца периода выборки."
    },
    {"Item","S","СледующаяДата","NextDate",
"СледующаяДата()",
"NextDate()",
"@Синтаксис:
СледующаяДата()
@Назначение:
Выбирает следующий день календаря (позиционируется на очередной записи выборки) в порядке возрастания дат. Возвращает: число: 1 - получена очередная запись; 0 - не обнаружено очередной записи, т.е. конец выборки."
    },
    {"Item","S","Автозаполнение","Autolayout",
"Автозаполнение(<?>,);",
"Autolayout(<?>,);",
"@Синтаксис:
Автозаполнение(<ДатаНачала>,<ДатаКонца>)
@Назначение:
Выполняет автозаполнение календаря в заданном периоде. Возвращает число: 1 - получилось; 0 - не получилось.
@Параметры: 
<ДатаНачала> - дата начала периода автозаполнения.
<ДатаКонца> - дата конца периода автозаполнения."
    },
    {"Item","S","УчитыватьПраздники","UseHolidays",
"УчитыватьПраздники(<?>);",
"UseHolidays(<?>);",
"@Синтаксис:
УчитыватьПраздники(<Флаг>)
@Назначение:
Установка флага учета праздников при автозаполнении. Возвращает: число: 1 - учитываются праздники при автозаполнении; 0 - не учитываются.
@Параметры: 
<Флаг> - необязательный параметр. Число: 1 - учитываются праздники при автозаполнении; 0 - не учитываются."
    },
    },
 {"Folder","S","Праздники","Holidays",
 {"Folder","S","Атрибуты","",
    {"Item","S","Дата","Date",
"Дата",
"Date",
"@Синтаксис:
Дата
@Назначение:
Дата текущей строки праздников (только для чтения) ."
    },
    {"Item","S","Значение","Value",
"Значение",
"Value",
"@Синтаксис:
Значение
@Назначение:
Значение текущей (на которой позиционирована выборка) строки праздников - число с двумя знаками после запятой (доступно чтание и запись)."
    },
    },
 {"Folder","S","Методы","",
    {"Item","AST","Новый","New",
"Новый(<?>,);",
"New(<?>,);",
"@Синтаксис:
Новый(<Дата>,<Значение>)
@Назначение:
Ввести  новый ''праздничный'' день.
@Назначение:
<Дата> - дата нового праздника.
<Значение> - число с двумя знаками после запятой (не более 100). Поскольку объект ''Праздники'', как правило, используется для ввода выходных праздничных дней по календарям, то значение, как правило, задают равным нулю."
    },
    {"Item","AST","Удалить","Delete",
"Удалить(<?>);",
"Delete(<?>);",
"@Синтаксис:
Удалить(<Дата>)
@Назначение:
Удаляет ''праздничный'' день.
@Назначение:
<Дата> - дата удаляемой строки (праздника)."
    },
    {"Item","S","ВыбратьДаты","SelectDates",
"ВыбратьДаты(<?>,)",
"SelectDates(<?>,)",
"@Синтаксис:
ВыбратьДаты(<ДатаНачала>,<ДатаКонца>)
@Назначение:
Открывает выборку записей праздников. Возвращает число: 1 - выборка открыта и в ней есть хоть одна запись; 0 - не обнаружено записей.
@Параметры: 
<ДатаНачала> - дата начала периода выборки.
<ДатаКонца> - дата конца периода выборки."
    },
    {"Item","S","СледующаяДата","NextDate",
"СледующаяДата()",
"NextDate()",
"@Синтаксис:
СледующаяДата()
@Назначение:
Выбирает следующий день праздников (позиционируется на очередной записи выборки) в порядке возрастания дат. Возвращает: число: 1 - получена очередная запись; 0 - не обнаружено очередной записи, т.е. конец выборки."
    },
    {"Item","S","ПолучитьАтрибут","GetAttrib",
"ПолучитьАтрибут(<?>);",
"GetAttrib(<?>);",
"@Синтаксис:
ПолучитьАтрибут(<ИмяАтрибута>)
@Назначение:
Получить значение атрибута по имени идентификатора. Возвращает значение атрибута.
@Параметры:
<ИмяАтрибута> - строковое выражение, содержащее имя атрибута, как оно задано в конфигураторе.
@Замечание:
Доступные имена атрибутов - ''Дата'' и ''Значение''"
    },
    {"Item","S","УстановитьАтрибут","SetAttrib",
"УстановитьАтрибут(<?>,);",
"SetAttrib(<?>,);",
"@Синтаксис:
УстановитьАтрибут(<ИмяАтрибута>,<Значение>)
@Назначение:
Установить значение атрибута по имени идентификатора.
@Параметры:
<ИмяАтрибута> - строковое выражение, содержащее имя атрибута, как оно задано в конфигураторе.
<Значение> - выражение, содержащее устанавливаемое значение атрибута.
@Замечание:
Доступные имена атрибутов - ''Дата'' и ''Значение''"
    },
    },
    },
 {"Folder","S","Атрибуты и методы объекта ''Календари''","",
    {"Item","T","<ИмяКалендаря>","<Name>",
"<ИмяКалендаря>",
"<Name>",
"@Синтаксис:
<ИмяКалендаря>
@Назначение:
Доступ к объекту календаря конкретного вида."
    },
    {"Item","T","ПолучитьАтрибут","GetAttrib",
"ПолучитьАтрибут(<?>);",
"GetAttrib(<?>);",
"@Синтаксис:
ПолучитьАтрибут(<ИмяКалендаря>)
@Назначение:
Получить значение календаря конкретного вида по идентификатору. Возвращает значение календаря конкретного вида.
@Параметры:
<ИмяКалендаря> - строковое выражение, содержащее имя календаря конкретного вида, как оно задано в конфигураторе."
    },
    },
    },
 {"Folder","AT","Последовательность","Sequence",
    {"Item","AT","ПолучитьПозицию","GetPosition",
"ПолучитьПозицию();",
"GetPosition();",
"@Синтаксис:
ПолучитьПозицию()
@Назначение:
Получить позицию Границы Последовательности.
Возвращает 32-х символьное строковое значение позиции Границы Последовательности."
    },
    {"Item","AT","Получить","Get",
"Получить();",
"Get();",
"@Синтаксис:
Получить()
@Назначение:
Получить строку описания Границы Последовательности."
    },
    {"Item","AT","ПолучитьДокумент","GetDocument",
"ПолучитьДокумент();",
"GetDocument();",
"@Синтаксис:
ПолучитьДокумент()
@Назначение:
Получить документ Границы Последовательности."
    },
    {"Item","AT","ПолучитьДату","GetDate",
"ПолучитьДату();",
"GetDate();",
"@Синтаксис:
ПолучитьДату()
@Назначение:
Получить дату Границы Последовательности."
    },
    {"Item","AT","ПолучитьВремя","GetTime",
"ПолучитьВремя(<?>,,);",
"GetTime(<?>,,);",
"@Синтаксис:
ПолучитьВремя(<Часы>,<Минуты>,<Секунды>)
@Назначение:
Прочитать время Границы Последовательности. Возвращает время ГП в переданные для этого переменные <Часы>, <Минуты>, <Секунды>.
Возвращает строковое значение времени ГП в виде 'ЧЧ.ММ.СС'.
@Параметры: 
<Часы> - переменная для приема часа записи ГП;
<Минуты> - переменная для приема минут записи ГП;
<Секунды> - переменная для приема секунд записи ГП."
    },
    {"Item","AT","Установить","Set",
"Установить(<?>);",
"Set(<?>);",
"@Синтаксис:
Установить(<ПоложениеГП>)
@Назначение:
Установить ГП (границу последовательности) на новую дату, документ или позицию.
@Параметры: 
<ПоложениеГП> - дата, документ или позиция документа, на которые устанавливается ГП."
    },
    {"Item","AT","Сравнить","Compare",
"Сравнить(<?>);",
"Compare(<?>);",
"@Синтаксис:
Сравнить(<Докум>)
@Назначение:
Сравнить ГП (границу последовательности) с датой, документом или позицией.
Возвращает число:  -1 (минус единица), если ГП меньше (раньше); 0 если равны; 1 если ГП больше (позже). 
@Параметры: 
<Докум> - дата, документ или позиция документа, с которым сравнивается ГП."
    },
    {"Item","AT","ПринадлежитПоследовательности","BelongToSequence",
"ПринадлежитПоследовательности(<?>);",
"BelongToSequence(<?>);",
"@Синтаксис:
ПринадлежитПоследовательности(<Докум>)
@Назначение:
Определить, принадлежит ли последовательности заданный документ или вид, заданный строкой.
Возвращает число:  1 - если документ принадлежит последовательности; 0 - если не принадлежит.
@Параметры: 
<Докум> - выражение типа документ или строка, определяющая вид документа."
    },
    {"Item","AT","Проверить","Validate",
"Проверить(<?>);",
"Validate(<?>);",
"@Синтаксис:
Проверить(<Докум>)
@Назначение:
Проверяет, является ли последовательность непрерывной от ГП (границы последовательности) до заданного документа.
Возвращает число:  1- если последовательность непрерывна; 0 - если есть проведенные документы между ГП и документом.
@Параметры: 
<Докум> - выражение типа дата, документ или позиция документа, от которой проверяется непрерывность последовательности."
    },
 {"Folder","AT","Метод глобального атрибута ''Последовательность''","",
    {"Item","AST","ПолучитьАтрибут","GetAttrib",
"ПолучитьАтрибут(<?>);",
"GetAttrib(<?>);",
"@Синтаксис:
ПолучитьАтрибут(<ИмяПоследовательности >)
@Назначение:
Получить значение последовательности по имени. Возвращает значение последовательности.
@Параметры:
<ИмяПоследовательности> - строковое выражение, содержащее имя последовательности, как оно задано в конфигураторе."
    },
    },
    },
 {"Folder","AST","Периодический","Periodic",
 {"Folder","AST","Атрибуты","",
    {"Item","AST","Значение","Value",
"Значение",
"Value",
"@Синтаксис:
Значение
@Назначение:
Доступ к значению периодического реквизита справочника или константы."
    },
    {"Item","AST","ДатаЗнач","DateVal",
"ДатаЗнач",
"DateVal",
"@Синтаксис:
ДатаЗнач
@Назначение:
Доступ к дате значения периодического реквизита справочника или константы."
    },
    },
 {"Folder","AST","Методы","",
    {"Item","AST","ИспользоватьОбъект","UseObject",
"ИспользоватьОбъект(<?>)",
"UseObject(<?>)",
"@Синтаксис:
ИспользоватьОбъект(<ИмяРеквизита>,<Объект>)
@Назначение:
Сопоставляет объект типа 'Периодический' периодическому реквизиту справочника или периодической константе.
Возвращает: 1 - если вызов метода закончился успешно, 0 - иначе.
@Параметры:
<ИмяРеквизита> - строка с названием периодического реквизита справочника или периодической константы;
<Объект> - значение элемента справочника, для которого задается применение периодического реквизита (для констант не нужен).
@Замечание:
Если наименование реквизита пустая строка и передан объект справочника, то выборка будет осуществляться по всем реквизитам справочника."
    },
    {"Item","AST","НазначитьТип","SetType",
"НазначитьТип(<?>,,)",
"SetType(<?>,,)",
"@Синтаксис:
НазначитьТип(<ИмяТипа>,<Длина>,<Точность>)
@Назначение:
Назначить тип для периодического реквизита справочника или периодической константы неопределенного типа.
@Параметры: 
<ИмяТипа> - строковое выражение - название типа данных (или Вид субконто), который назначается реквизиту. Например, ''Строка'', ''Число'', ''Справочник.Товары'', ''Документ.РасходнаяНакладная'' и т.п.
<Длина> - необязательный параметр. Число - длина поля представления данных. Имеет смысл только при задании числового или строкового типа.
<Точность> - необязательный параметр. Число знаков после десятичной точки. Имеет смысл только при задании числового типа."
    },
    {"Item","AST","ЗначениеНаДату","ValueOnDate",
"ЗначениеНаДату(<?>)",
"ValueOnDate(<?>)",
"@Синтаксис:
ЗначениеНаДату(<Дата>)
@Назначение:
Возвращает актуальное значение на заданную дату.
@Параметры:
<Дата> - дата, на которую требуется получить периодический реквизит справочника или периодическую константу."
    },
    {"Item","AST","НайтиЗначение","FindValue",
"НайтиЗначение(<?>,)",
"FindValue(<?>,)",
"@Синтаксис:
НайтиЗначение(<Дата>,<Режим>)
@Назначение:
Находит периодическое значение на заданную дату.
Возвращает: 1 - если вызов метода закончился успешно, 0 - иначе.
@Параметры:
<Дата> - дата, на которую требуется найти периодический реквизит справочника или периодическую константу;
<Режим> - режим поиска на тот случай, когда на заданную дату не существует значения периодического реквизита:
 -1, возвращается значение на предыдущую дату;
  0, возвращается код завершения неуспешной операции;
  1, возвращается значение на последующую дату."
    },
    {"Item","AST","ВыбратьЗначения","SelectValues",
"ВыбратьЗначения(<?>)",
"SelectValues(<?>)",
"@Синтаксис:
ВыбратьЗначения(<ДатаНачала>,<ДатаКонца>)
@Назначение:
Открыть выборку периодических значений по датам.
Возвращает: 1 - если вызов метода закончился успешно, 0 - иначе.
@Параметры:
<ДатаНачала> - дата начала периода выборки периодических значений (необязателен, если не задан - выборка начинается с самой ранней имеющейся даты);
<ДатаКонца> - дата конца периода выборки периодических значений (необязателен, если не задан - выборка заканчивается самой последней имеющейся датой)."
    },
    {"Item","AST","ВыбратьПоДокументу","SelectByDoc",
"ВыбратьПоДокументу(<?>)",
"SelectByDoc(<?>)",
"@Синтаксис:
ВыбратьПоДокументу(<Документ>)
@Назначение:
Открыть выборку всех периодических значений (по всем справочникам и реквизитам), заданных документом.
Возвращает: 1 - если вызов метода закончился успешно, 0 - иначе.
@Параметры:
<Документ> - значение типа документ."
    },
    {"Item","AST","ПолучитьЗначение","GetValue",
"ПолучитьЗначение()",
"GetValue()",
"@Синтаксис:
ПолучитьЗначение()
@Назначение:
Получить из выборки следующий элемент справочника.
Возвращает: 1 - если элемент выбран, 0 - иначе.
@Замечание:
Значение содержится в атрибуте Значение, а дата - в атрибуте ДатаЗнач.
Метод ТекущийДокумент дает доступ к документу,
метод ТекущийОбъект дает доступ к текущему элементу справочника,
метод ТекущийРеквизит позволяет определить наименование текущего реквизита справочника."
    },
    {"Item","AST","ОбратныйПорядок","BackwardOrder",
"ОбратныйПорядок(<?>)",
"BackwardOrder(<?>)",
"@Синтаксис:
ОбратныйПорядок(<Режим>)
@Назначение:
Установить порядок выборки периодических значений.
Возвращает: 1 - если вызов метода закончился успешно, 0 - иначе.
@Параметры:
<Режим> - порядок выборки: 0 - прямой, иначе - обратный (необязателен, по умолчанию - 1).
@Замечание:
Метод используется до вызова метода ВыбратьЗначения."
    },
    {"Item","AST","ТекущийДокумент","CurrentDocument",
"ТекущийДокумент()",
"CurrentDocument()",
"@Синтаксис:
ТекущийДокумент()
@Назначение:
Возвращает документ, который задал значение периодического реквизита.
@Замечание:
Метод используется после получения очередного значения из выборки."
    },
    {"Item","AST","ТекущийОбъект","CurrentObj",
"ТекущийОбъект()",
"CurrentObj()",
"@Синтаксис:
ТекущийОбъект()
@Назначение:
Возвращает значение текущего элемента справочника.
@Замечание:
Метод используется после получения очередного значения из выборки."
    },
    {"Item","AST","ТекущийРеквизит","CurrentAttrubute",
"ТекущийРеквизит()",
"CurrentAttrubute()",
"@Синтаксис:
ТекущийРеквизит()
@Назначение:
Возвращает наименование текущего реквизита справочника.
@Замечание:
Метод используется после получения очередного значения из выборки."
    },
    {"Item","AST","НомерСтроки","LineNum",
"НомерСтроки()",
"LineNum()",
"@Синтаксис:
НомерСтроки()
@Назначение:
Возвращает номер строки текущего документа, изменившего периодическое значение.
@Замечание:
Метод можно использовать только для переменных, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","Записать","Write",
"Записать()",
"Write()",
"@Синтаксис:
Записать()
@Назначение:
Записать (обновить) периодическое значение на заданную дату.
Возвращает: 1 - если вызов метода закончился успешно, 0 - иначе.
@Замечание:
Значение должно быть задано в атрибуте Значение, а дата - в атрибуте ДатаЗнач."
    },
    {"Item","AST","Удалить","Delete",
"Удалить()",
"Delete()",
"@Синтаксис:
Удалить()
@Назначение:
Удалить периодическое значение на заданную дату.
Возвращает: 1 - если вызов метода закончился успешно, 0 - иначе.
@Замечание:
До вызова данного метода периодическое значение следует выбрать при помощи методов ПолучитьЗначение или НайтиЗначение."
    },
    },
    },
 {"Folder","AST","Список значений","Value list",
    {"Item","AST","ДобавитьЗначение","AddValue",
"ДобавитьЗначение(<?>,);",
"AddValue(<?>,);",
"@Синтаксис:
ДобавитьЗначение(<Значение>,<Строка>)
@Назначение:
Добавить значение в список.
@Параметры:
<Значение> - значение, которое добавляется в список;
<Строка> - символьное представление значения (необязателен, по умолчанию - стандартное символьное представление объекта).
@Замечание:
В список нельзя добавить значение неопределенного типа, т.е. когда 
ТипЗначения(<Значение>)=0,
то никаких действий метод не выполняет."
    },
    {"Item","AST","ВставитьЗначение","InsertValue",
"ВставитьЗначение(<?>,);",
"InsertValue(<?>,);",
"@Синтаксис:
ВставитьЗначение(<Позиция>,<Значение>,<Строка>,<Клв>)
@Назначение:
Вставить значение в указанную позицию списка.
@Параметры:
<Позиция> - номер позиции в списке, в которую вставляется значение (изменяется от 1 до РазмерСписка+1);
<Значение> - значение, которое вставляется в список;
<Строка> - строка с символьным представлением вставляемого значения (необязателен, по умолчанию - стандартное символьное представление объекта);
<Клв> - число повторов вставляемого значения (необязателен, по умолчанию - 1).
Подробнее см. в документации, глава ''Работа со Списком Значений''."
    },
    {"Item","AST","РазмерСписка","GetListSize",
"РазмерСписка()",
"GetListSize()",
"@Синтаксис:
РазмерСписка()
@Назначение:
Возвращает число элементов в списке."
    },
    {"Item","AST","УстановитьЗначение","SetValue",
"УстановитьЗначение(<?>,,,);",
"SetValue(<?>,,,);",
"@Синтаксис:
УстановитьЗначение(<Позиция>,<Знач>,<Строка>,<Клв>)
@Назначение:
Установить значение в указанной позиции списка.
@Параметры:
<Позиция> - номер позиции в списке, в которой установливается значение (изменяется от 1 до РазмерСписка);
<Знач> - значение, которое устанавливается в позиции;
<Строка> - строка с символьным представлением устанавливаемого значения (необязателен, по умолчанию - стандартное символьное представление объекта);
<Клв> - число повторов устанавливаемого значения (необязателен, по умолчанию - 1).
Подробнее см. в документации, глава ''Работа со Списком Значений''."
    },
    {"Item","AST","Установить","Set",
"Установить(<?>,);",
"Set(<?>,);",
"@Синтаксис:
Установить(<Строка>,<Знач>)
@Назначение:
Устанавливает в списке значение с указанным представлением. Если значение с таким представлением уже есть - изменяется значение, если нет - добавляется в конец списка значение с указанным представлением.
@Параметры:
<Строка> - строка с символьным представлением устанавливаемого значения;
<Знач> - значение, которое устанавливается в позиции;
Подробнее см. в документации, глава ''Работа со Списком Значений''."
    },
    {"Item","AST","Сортировать","Sort",
"Сортировать(<?>,);",
"Sort(<?>,);",
"@Синтаксис:
Сортировать(<Направление>,<ДокПоДате>)
@Назначение:
Отсортировать список по значениям.
@Параметры:
<Направление> - 0 - сортировка по возрастанию, иначе по убыванию (необязателен, по умолчанию - 0).
<ДокПоДате> - необязательный параметр. Имеет смысл только в том случае, если значениями списка значений являются документы. В этом случае можно задавать сортировку документов по их хронологии. Число: 1 - сортировка по хронологии документов; 0 - нет. Значение по умолчанию - 0."
    },
    {"Item","AST","СортироватьПоПредставлению","SortByPresent",
"СортироватьПоПредставлению(<?>);",
"SortByPresent(<?>);",
"@Синтаксис:
СортироватьПоПредставлению(<Направление>)
@Назначение:
Отсортировать список по символьному представлению.
@Параметры:
<Направление> - 0 - сортировка по возрастанию, иначе по убыванию (необязателен, по умолчанию - 0).
Подробнее см. в документации, глава ''Работа со Списком Значений''."
    },
    {"Item","AST","Принадлежит","Belong",
"Принадлежит(<?>)",
"Belong(<?>)",
"@Синтаксис:
Принадлежит(<Значение>)
@Назначение:
Проверяет вхождение в список значений указанного значения, т.е. , является ли значение подмножеством списка значений 
Возвращает число: 1 - если проверяемое значение входит в список значений; 0 - если не входит.
@Параметры:
<Значение> - значение, проверяемое на вхождение в список значений.
@Замечание:
Если на принадлежность проверяется значение типа элемент справочника, то проверка выполняется с учетом его возможного вхождения в группы справочников, которые являются значениями списка значений. Данный метод оптимизирует проверку принадлежности при массовых последовательных сравнениях, если между сравнениями сам список значений не меняется."
    },
    {"Item","AST","НайтиЗначение","FindValue",
"НайтиЗначение(<?>)",
"FindValue(<?>)",
"@Синтаксис:
НайтиЗначение(<Значение>)
@Назначение:
Возвращает номер позиции в списке с искомым значением (0 - если не найдено).
@Параметры:
<Значение> - значение, которое необходимо найти в списке."
    },
    {"Item","AST","ПолучитьЗначение","GetValue",
"ПолучитьЗначение(<?>,)",
"GetValue(<?>,)",
"@Синтаксис:
ПолучитьЗначение(<Позиция>,<Строка>)
@Назначение:
Получить значение из указанной позиции списка.
Возвращает значение из списка.
@Параметры:
<Позиция> - номер позиции в списке, из которой возвращается значение (изменяется от 1 до РазмерСписка);
<Строка> - идентификатор переменной, в которой возвращается символьное представление получаемого значения."
    },
    {"Item","AST","Получить","Get",
"Получить(<?>)",
"Get(<?>)",
"@Синтаксис:
Получить(<Строка>)
@Назначение:
Получить значение по указанному представлению.
Возвращает значение по указанному представлению. Если значения с таким представлением нет, то возвращается пустое значение.
@Параметры:
<Строка> - символьное представление получаемого значения."
    },
    {"Item","AST","ИзСтрокиСРазделителями","FromSeparatedString",
"ИзСтрокиСРазделителями(<?>)",
"FromSeparatedString(<?>)",
"@Синтаксис:
ИзСтрокиСРазделителями(<Строка>)
@Назначение:
Заполняет СписокЗначений значениями из переданной в качестве параметра строки, содержащей разделенные запятыми значения: числа и строки в двойных кавычках.
@Параметры:
<Строка> - символьная строка, в которой значения разделены запятыми. В качестве значений могут быть числа и строковые значения - они записываются в двойных кавычках."
    },
    {"Item","AST","ВСтрокуСРазделителями","ToSeparatedString",
"ВСтрокуСРазделителями()",
"ToSeparatedString()",
"@Синтаксис:
ВСтрокуСРазделителями()
@Назначение:
Преобразует СписокЗначений в строку, содержащую, разделенные запятыми числа и строки в двойных кавычках.
Возвращает результирующую строку."
    },
    {"Item","AST","ВыбратьЗначение","ChooseValue",
"ВыбратьЗначение(<?>,,,,)",
"ChooseValue(<?>,,,,)",
"@Синтаксис:
ВыбратьЗначение(<Значение>,<Заголовок>>,<Позиция>,<Таймаут>,<СпособВыбора>)
@Назначение:
Открыть окно для интерактивного выбора значения из списка.
Возвращает:  -1 (минус единица) - закончилось время <Таймаут> ожидания отклика пользователя, 1 - если выбор произведен, 0 - иначе.
@Параметры:
<Значение> - идентификатор переменной, куда помещается результат выбора;
<Заголовок> - строка заголовка диалогового окна.
<Позиция> - идентификатор переменной, куда помещается номер позиции выбранного значения в списке.
<Таймаут> - необязательный параметр. Числовое выражение, значение которого задает время ожидания системы (в секундах) на отклик пользователя.
<СпособВыбора> - необязательный параметр. Число, значение которого задает способ выбора значения. 0 - в виде диалога; 1 - выбор производится в виде меню, которое подстраивается по месту текущего элемента диалога или ячейки таблицы; 2 - выбор маленьким списком (список похож на выбор значения перечисления), также привязанным к позиции элемента диалога
Значение по умолчанию - 0.
@Замечание:
Метод может использоваться только для переменных, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","ОтметитьЗначения","CheckValues",
"ОтметитьЗначения(<?>,,,)",
"CheckValues(<?>,,,)",
"@Синтаксис:
ОтметитьЗначения(<Значение>,<Заголовок>,<Позиция>,<Таймаут>)
@Назначение:
Открыть окно для интерактивной пометки значений списка.
Возвращает:  -1 (минус единица) - закончилось время <Таймаут> ожидания отклика пользователя, 1 - если выбор произведен, 0 - иначе.
@Параметры:
<Значение> - идентификатор переменной, куда помещается результат выбора;
<Заголовок> - строка заголовка диалогового окна.
<Позиция> - необязательный параметр. Идентификатор переменной, куда помещается номер позиции выбранного значения в списке.
<Таймаут> - необязательный параметр. Числовое выражение, значение которого задает время ожидания системы (в секундах) на отклик пользователя.
@Замечание:
Возможность выбора значения - это дополнительная возможность, предоставляемая данным методом. Параметр <Значение> указывает на значение того элемента списка, на котором будет установлен курсор при открытии окна пометки. В этот же параметр возвращается последнее выбранное значение. В параметр <Позиция> возвращается номер позиции последнего выбранного значения в списке. Если выбор отменен, то значения параметров не меняются. Метод может использоваться только для переменных, созданных функцией СоздатьОбъект."
    },
    {"Item","AST","Пометка","Check",
"Пометка(<?>,)",
"Check(<?>,)",
"@Синтаксис:
Пометка(<Позиция>,<Пометка>)
@Назначение:
Пометить значение списка. Возвращает: значение метки до выполнения метода. Число: 1 - отметка установлена; 0 -  отметка не установлена.
@Параметры:
<Позиция> - номер позиции выбранного значения в списке.
<Пометка> - необязательный параметр. Число: 1 - установить отметку; 0 - снять отметку. Если данный параметр опущен, то отметка значения списка не изменяется."
    },
    {"Item","AST","ТекущаяСтрока","CurSel",
"ТекущаяСтрока(<?>)",
"CurSel(<?>)",
"@Синтаксис:
ТекущаяСтрока(<ИндексСтроки>)
@Назначение:
Установить/определить текущий элемент списка в поле диалога.
Возвращает номер текущей строки поля диалога (до его изменения).
@Параметры:
<ИндексСтроки> - номер строки поля диалога, на которую требуется установить курсор (необязателен. Если не задан, то положение курсора не меняется).
@Замечание:
Метод можно использовать только для полей диалога типа ''Список'' или ''Поле со списком''.
Подробнее см. в документации, глава ''Работа со Списком Значений''."
    },
    {"Item","AST","УдалитьЗначение","RemoveValue",
"УдалитьЗначение(<?>);",
"RemoveValue(<?>);",
"@Синтаксис:
УдалитьЗначение(<Позиция>,<Клв>)
@Назначение:
Удалить значения с указанной позиции списка.
@Параметры:
<Позиция> - номер позиции в списке, начиная с которой будут удалены значения (изменяется от 1 до РазмерСписка);
<Клв> - число удаляемых значений (необязателен, по умолчанию - 1).
Подробнее см. в документации, глава ''Работа со Списком Значений''."
    },
    {"Item","AST","УдалитьВсе","RemoveAll",
"УдалитьВсе();",
"RemoveAll();",
"@Синтаксис:
УдалитьВсе()
@Назначение:
Удалить все элементы списка.
Подробнее см. в документации, глава ''Работа со Списком Значений''."
    },
    {"Item","AST","СдвинутьЗначение","MoveValue",
"СдвинутьЗначение(<?>,);",
"MoveValue(<?>,);",
"@Синтаксис:
СдвинутьЗначение(<Колич>,<НомерПоз>)
@Назначение:
Переместить значение списка значений на новую позицию.
@Параметры:
<Колич> - количество позиций, на которое надо переместить значение. Если число положительное, то значение сдвигается вниз, если отрицательное, то вверх.
<НомерПоз> - номер позиции, значение которой надо переместить."
    },
    {"Item","AST","Выгрузить","Unload",
"Выгрузить(<?>,,);",
"Unload(<?>,,);",
"@Синтаксис:
Выгрузить(<Знач>,<НачПоз>,<Колич>)
@Назначение:
Выгрузить список значений в другой список значений или таблицу значений. При выгрузке в таблицу значений, в ней в конце добавляется новая колонка.
@Параметры:
<Знач> - значение типа ''Таблица значений'' или ''Список значений'', в которое нужно выгрузить данные. Если переданное значение пустое, тогда система сама создаст объект типа ''Список значений''.
<НачПоз> - необязательный параметр. Номер начальной позиции, с которой надо начинать выгрузку. Значение по умолчанию 1.
<Колич> - необязательный параметр. Количество выгружаемых значений. Если не указан, то все."
    },
    },
 {"Folder","AST","Таблица значений","Value table",
 {"Folder","AST","Атрибуты","",
    {"Item","AST","НомерСтроки","LineNum",
"НомерСтроки",
"LineNum",
"@Синтаксис:
НомерСтроки
@Назначение:
Номер текущей строки таблицы значений.
@Замечание:
(только для чтения)"
    },
    {"Item","AST","<ИдетификаторКолонки>","<Attribute>",
"<ИдетификаторКолонки>",
"<Attribute>",
"@Синтаксис:
<ИдетификаторКолонки>
@Назначение:
Значение элемента таблицы в текущей строке и в колонке, заданной идентификатором.
@Замечание:
В тексте программного модуля используется идентификатор конкретной колонки, который задается при создании колонки при помощи методов НоваяКолонка и ВставитьКолонку. Если при создании колонки идентификатор колонки не указан, то обращение к колонке возможно только по номеру."
    },
    },
 {"Folder","AST","Методы","",
    {"Item","AST","КоличествоКолонок","ColumnCount",
"КоличествоКолонок(<?>);",
"ColumnCount(<?>);",
"@Синтаксис:
КоличествоКолонок(<Колич>)
@Назначение:
Устанавливает/возвращает количество колонок.
@Параметры:
<Колич> - необязательный параметр. Числовое выражение, которое указывает новое количество колонок."
    },
    {"Item","AST","НоваяКолонка","NewColumn",
"НоваяКолонка(<?>,,,,,,,);",
"NewColumn(<?>,,,,,,,);",
"@Синтаксис:
НоваяКолонка(<Идентификатор>,<Тип>,<Длина>,<Точность>,<Заголовок>,<Ширина>,<Формат>,<Положение>)
@Назначение:
Добавить в конец таблицы значений новую колонку. Возвращает номер новой колонки.
@Параметры:
<Идентификатор> - необязательный параметр. Идентификатор колонки. Если не указан, то обращение к колонке возможно только по номеру.
<Тип> - необязательный параметр. Строка или вид субконто, задающий тип колонки. Если не указан, то можно хранить любой тип.
<Длина> - необязательный параметр. Длина для числовой или строковой колонки.
<Точность> - необязательный параметр. Точность (длина дробной части) для числовой колонки.
<Заголовок> - необязательный параметр. Строковое выражение, содержащее заголовок колонки в элементе диалога типа ''ТаблицаЗначений''.
<Ширина> - необязательный параметр. Числовое выражение, содержащее ширину колонки (в символах) для представления колонки в элементе диалога типа ''ТаблицаЗначений''.
<Формат> - необязательный параметр. Строковое выражение,     содержащее форматную строку, которая будет использована при визуальном отображении значений данной колонки.
<Положение> - необязательный параметр. Определяет вариант выравнивания при визуальном отображении значений данной колонки. Число: 1 - слева; 2 - справа."
    },
    {"Item","AST","ВставитьКолонку","InsertColumn",
"ВставитьКолонку(<?>,,,,,,,,);",
"InsertColumn(<?>,,,,,,,,);",
"@Синтаксис:
ВставитьКолонку(<Идентификатор>,<НомерКолонки>,<Тип>,<Длина>,<Точность>,<Заголовок>,<Ширина>,<Формат>,<Положение>)
@Назначение:
Вставить новую колонку в таблицу значений в указанную позицию. Возвращает номер новой колонки.
@Параметры:
<Идентификатор> - необязательный параметр. Идентификатор колонки. Если не указан, то обращение к колонке возможно только по номеру.
<НомерКолонки> - необязательный параметр. Числовое выражение, содержащее позицию, в которую вставляется новая колонка.
<Тип> - необязательный параметр. Строка или вид субконто, задающий тип колонки. Если не указан, то можно хранить любой тип.
<Длина> - необязательный параметр. Длина для числовой или строковой колонки.
<Точность> - необязательный параметр. Точность (длина дробной части) для числовой колонки.
<Заголовок> - необязательный параметр. Строковое выражение, содержащее заголовок колонки в элементе диалога типа ''ТаблицаЗначений''.
<Ширина> - необязательный параметр. Числовое выражение, содержащее ширину колонки (в символах) для представления колонки в элементе диалога типа ''ТаблицаЗначений''.
<Формат> - необязательный параметр. Строковое выражение,     содержащее форматную строку, которая будет использована при визуальном отображении значений данной колонки.
<Положение> - необязательный параметр. Определяет вариант выравнивания при визуальном отображении значений данной колонки. Число: 1 - слева; 2 - справа."
    },
    {"Item","AST","УдалитьКолонку","DeleteColumn",
"УдалитьКолонку(<?>);",
"DeleteColumn(<?>);",
"@Синтаксис:
УдалитьКолонку(<Колонка>)
@Назначение:
Удаляет колонку из таблицы значений.
@Параметры:
<Колонка> - номер или идентификатор удаляемой колонки."
    },
    {"Item","AST","УстановитьПараметрыКолонки","SetColumnParameters",
"УстановитьПараметрыКолонки(<?>,,,,,,,);",
"SetColumnParameters(<?>,,,,,,);",
"@Синтаксис:
УстановитьПараметрыКолонки(<Колонка>,<Тип>,<Длина>,<Точность>,<Заголовок>,<Ширина>,<Формат>,<Положение>)
@Назначение:
Устанавливает новые значения параметров колонки (только те, которые указаны). Если какой либо параметр при вызове метода не задан, то данный параметр колонки не изменяется.
@Параметры:
<Колонка> - номер или код колонки, для которой будут установлены новые параметры.
<Тип> - необязательный параметр. Строка или вид субконто, задающий тип колонки. Если не указан, то можно хранить любой тип.
<Длина> - необязательный параметр. Длина для числовой или строковой колонки.
<Точность> - необязательный параметр. Точность (длина дробной части) для числовой колонки.
<Заголовок> - необязательный параметр. Строковое выражение, содержащее заголовок колонки в элементе диалога типа ''ТаблицаЗначений''.
<Ширина> - необязательный параметр. Числовое выражение, содержащее ширину колонки (в символах) для представления колонки в элементе диалога типа ''ТаблицаЗначений''.
<Формат> - необязательный параметр. Строковое выражение,     содержащее форматную строку, которая будет использована при визуальном отображении значений данной колонки.
<Положение> - необязательный параметр. Определяет вариант выравнивания при визуальном отображении значений данной колонки. Число: 1 - слева; 2 - справа."
    },
    {"Item","AST","ПолучитьПараметрыКолонки","GetColumnParameters",
"ПолучитьПараметрыКолонки(<?>,,,,,,,);",
"GetColumnParameters(<?>,,,,,,,);",
"@Синтаксис:
ПолучитьПараметрыКолонки(<Колонка>,<Тип>,<Длина>,<Точность>,<Заголовок>,<Ширина>,<Формат>,<Положение>)
@Назначение:
Получить значения параметров колонки. Возвращает номер или код колонки. Если в параметре <Колонка> задан номер колонки, то возвращается код колонки, и наоборот.
@Параметры:
<Колонка> - номер или код колонки, для которой требуется получить параметры.
<Тип> - необязательный параметр. Идентификатор переменной, в которую метод вернет строку, описывающую тип колонки или вид субконто.
<Длина> - необязательный параметр. Идентификатор переменной, в которую метод вернет длину для строковых и числовых значений.
<Точность> - необязательный параметр. Идентификатор переменной, в которую метод вернет точность для числовых значений колонки.
<Заголовок> - необязательный параметр. Идентификатор переменной, в которую метод вернет строку, описывающую заголовок колонки для показа.
<Ширина> - необязательный параметр. Идентификатор переменной, в которую метод вернет ширину колонки в таблице.
<Формат> - необязательный параметр.  Идентификатор переменной, в которую метод вернет форматную строку, которая используется при визуальном отображении значений данной колонки.
<Положение> - необязательный параметр.  Идентификатор переменной, в которую метод вернет вариант выравнивания при визуальном отображении значений данной колонки. Число: 1 - слева; 2 - справа."
    },
    {"Item","AST","КоличествоСтрок","LinesCnt",
"КоличествоСтрок(<?>);",
"LinesCnt(<?>);",
"@Синтаксис:
КоличествоСтрок(<Колич>)
@Назначение:
Устанавливает/возвращает количество строк в таблице значений.
@Параметры:
<Колич> - необязательный параметр. Новое количество строк в таблице значений."
    },
    {"Item","AST","НоваяСтрока","NewLine",
"НоваяСтрока(<?>);",
"NewLine(<?>);",
"@Синтаксис:
НоваяСтрока(<НомерСтроки>)
@Назначение:
Добавляет новую строку в таблицу значений.
@Параметры:
<НомерСтроки> - необязательный параметр. Числовое выражение, содержащее позицию, в которую следует вставить новую строку."
    },
    {"Item","AST","УдалитьСтроку","DeleteLine",
"УдалитьСтроку(<?>);",
"DeleteLine(<?>);",
"@Синтаксис:
УдалитьСтроку(<НомерСтроки>)
@Назначение:
Удаляет строку из таблицы значений.
@Параметры:
<НомерСтроки> - необязательный параметр. Номер строки. Если не указан, то удаляется текущая строка."
    },
    {"Item","AST","УдалитьСтроки","DeleteLines",
"УдалитьСтроки();",
"DeleteLines();",
"@Синтаксис:
УдалитьСтроки()
@Назначение:
Удаляет все строки из таблицы значений."
    },
    {"Item","AST","ВыбратьСтроки","SelectLines",
"ВыбратьСтроки();",
"SelectLines();",
"@Синтаксис:
ВыбратьСтроки()
@Назначение:
Открывает выборку строк таблицы значений. Дальнейшая выборка осуществляется при помощи метода ПолучитьСтроку."
    },
    {"Item","AST","ПолучитьСтроку","GetLine",
"ПолучитьСтроку()",
"GetLine()",
"@Синтаксис:
ПолучитьСтроку()
@Назначение:
Получить из выборки следующую строку таблицы значений в последовательности выборки, открытой перед этим при помощи метода ВыбратьСтроки.
Возвращает: 1 - если очередная строка выбрана, 0 - если не выбрана."
    },
    {"Item","AST","ВыбратьСтроку","ChooseLine",
"ВыбратьСтроку(<?>,,);",
"ChooseLine(<?>,,);",
"@Синтаксис:
ВыбратьСтроку(<Строка>,<Заголовок>,<Таймаут>)
@Назначение:
Открыть окно для интерактивного выбора строки в таблице значений.
Возвращает число: 1 - если выбор произведен (нажата кнопка ОК); 0 - если выбор не произведен (нажата кнопка ''ОТМЕНА''); -1 (минус единица) - закончилось время <Таймаут> ожидания отклика пользователя.
@Параметры:
<Строка> - необязательный параметр. Идентификатор переменной, куда помещается значение - номер выбранной строки. При вызове метода здесь можно передавать значение начального номера строки.
<Заголовок> - необязательный параметр. Строковое выражение, значение которого отображается в заголовке диалогового окна. Может использоваться для подсказки пользователю.
<Таймаут> - необязательный параметр. Числовое выражение, значение которого задает время ожидания системы (в секундах) на отклик пользователя. Если не задано, то время ожидания бесконечно."
    },
    {"Item","AST","ПолучитьСтрокуПоНомеру","GetLineByNumber",
"ПолучитьСтрокуПоНомеру(<?>);",
"GetLineByNumber(<?>);",
"@Синтаксис:
ПолучитьСтрокуПоНомеру(<НомерСтроки>)
@Назначение:
Получить строку таблицы значений по номеру. Указанная строка становится текущей.
@Параметры:
<НомерСтроки> - номер строки, на которую следует переместиться."
    },
    {"Item","AST","СдвинутьСтроку","MoveLine",
"СдвинутьСтроку(<?>,);",
"MoveLine(<?>,);",
"@Синтаксис:
СдвинутьСтроку(<КоличСтрок>,<НомерСтроки>)
@Назначение:
Переместить строку таблицы значений на новую позицию.
@Параметры:
<КоличСтрок> - число строк, на которое надо переместить строку. Если число положительное, то строка сдвигается вниз, если отрицательное, то вверх.
<НомерСтроки> - необязательный параметр. Номер строки, которую надо переместить. Если не задан, то текущая."
    },
    {"Item","AST","УстановитьЗначение","SetValue",
"УстановитьЗначение(<?>,,);",
"SetValue(<?>,,);",
"@Синтаксис:
УстановитьЗначение(<Строка>,<Колонка>,<Знач>)
@Назначение:
Установить значение ячейки таблицы значений.
@Параметры:
<Строка> - номер строки.
<Колонка> - номер или идентификатор колонки.
<Знач> - устанавливаемое значение в ячейке таблицы."
    },
    {"Item","AST","ПолучитьЗначение","GetValue",
"ПолучитьЗначение(<?>,);",
"GetValue(<?>,);",
"@Синтаксис:
ПолучитьЗначение(<Строка>,<Колонка>)
@Назначение:
Получить значение заданной ячейки таблицы значений. Возвращает значение заданной ячейки.
@Параметры:
<Строка> - номер строки.
<Колонка> - номер или идентификатор колонки."
    },
    {"Item","AST","НайтиЗначение","FindValue",
"НайтиЗначение(<?>,,);",
"FindValue(<?>,,);",
"@Синтаксис:
НайтиЗначение(<Знач>,<Строка>,<Колонка>)
@Назначение:
Найти заданное значение в таблице значений. Возвращает число: 0 - значение не найдено; 1 - значение найдено
@Параметры:
<Знач> - значение для поиска.
<Строка> - идентификатор переменной, куда возвращается номер найденной строки. Если при вызове метода передать в этот параметр номер строки, то поиск будет осуществляться только по указанной строке.
<Колонка> - номер или идентификатор колонки, возвращает номер найденной колонки. Идентификатор переменной, куда возвращается номер найденной колонки. Если при вызове метода передать в этот параметр номер или идентификатор колонки, то поиск будет осуществляться только по указанной колонке."
    },
    {"Item","AST","Сортировать","Sort",
"Сортировать(<?>,);",
"Sort(<?>,);",
"@Синтаксис:
Сортировать(<Колонки>,<ДокумПоДате>)
@Назначение:
Сортировать таблицу значений по колонкам.
@Параметры:
<Колонки> - строковое выражение, которое определяет колонки, порядок и направление сортировки. Формат передаваемой строки - это разделенные запятыми номера или идентификаторы колонок со знаком направления сортировки ( ''+''    - сортировать по  возрастанию; ''- ''  - сортировать по убыванию; ''*'' - сортировать по внутреннему значению). Знак направления сортировки можно указывать до или после обозначения колонки через пробел или без пробела. По умолчанию направление сортировки принимается по возрастанию.
<ДокумПоДате> - необязательный параметр. Имеет смысл только в том случае, если значениями таблицы значений являются документы. В этом случае можно задавать сортировку документов по их хронологии. Число: 1 - сортировка по хронологии документов; 0 - нет. Значение по умолчанию - 0."
    },
    {"Item","AST","Очистить","Clear",
"Очистить();",
"Clear();",
"@Синтаксис:
Очистить()
@Назначение:
Очистить таблицу значений и удалить колонки."
    },
    {"Item","AST","Итог","Total",
"Итог(<?>);",
"Total(<?>);",
"@Синтаксис:
Итог(<Колонка>)
@Назначение:
Вычислить сумму по колонке таблицы значений.
@Параметры:
<Колонка> - номер или идентификатор колонки, по которой считать сумму."
    },
    {"Item","AST","Заполнить","Fill",
"Заполнить(<?>,,,);",
"Fill(<?>,,,);",
"@Синтаксис:
Заполнить(<Знач>,<НачСтрока>,<КонСтрока>,<Колонки>)
@Назначение:
Заполнить соответствующие ячейки таблицы значений переданным значением.
@Параметры:
<Знач> - значение одиночное или список значений или таблица значений.
<НачСтрока> - необязательный параметр. Номер начальной строки, с которой надо начинать заполнение. Значение по умолчанию 1.
<КонСтрока> - необязательный параметр. Номер последней строки, по которую надо заполнять. Если не указана, то до последней.
<Колонки> - необязательный параметр. Номера или идентификаторы колонок, которые надо заполнять. Если параметр не задан, то заполняются все колонки."
    },
    {"Item","AST","Свернуть","GroupBy",
"Свернуть(<?>,);",
"GroupBy(<?>,);",
"@Синтаксис:
Свернуть(<ГруппКолонки>,<СуммКолонки>)
@Назначение:
Позволяет свернуть таблицу значений по соответствующим значениям колонок, т.е. заменяет на одну строку все дублирующие (по значениям группировочных колонок)  строки, суммируя значения по суммируемым колонкам.
@Параметры:
<ГруппКолонки> - группировочные колонки (номера или идентификаторы колонок через запятую), по которым группировать данные.
<СуммКолонки> - суммируемые колонки (номера или идентификаторы колонок через запятую), по которым суммировать данные."
    },
    {"Item","AST","Выгрузить","Unload",
"Выгрузить(<?>,,,);",
"Unload(<?>,,,);",
"@Синтаксис:
Выгрузить(<Знач>,<НачСтрока>,<КонСтрока>,<Колонки>)
@Назначение:
Выгрузить соответствующие ячейки таблицы значений. 
@Параметры:
<Знач> - значение типа ''Таблица значений'' или ''Список значений'', в которое нужно выгрузить данные. Если переданное значение пустое, тогда система сама создаст объект типа ''Таблица значений''.
<НачСтрока> - необязательный параметр. Номер начальной строки, с которой надо начинать выгрузку. Значение по умолчанию 1.
<КонСтрока> - необязательный параметр. Номер последней строки, по которую надо выгружать. Если не указан, то до последней.
<Колонки> - необязательный параметр. Номера или идентификаторы колонок, которые надо выгружать. Если параметр не задан, то выгружаются все колонки."
    },
    {"Item","AST","Загрузить","Load",
"Загрузить(<?>);",
"Load(<?>);",
"@Синтаксис:
Загрузить(<ТаблицаЗначений>)
@Назначение:
Скопировать структуру и значения таблицы значений. Прежняя структура колонок таблицы значений при этом очищается.
@Параметры:
<ТаблицаЗначений> - значение типа ''Таблица значений''. Структура и значения для загрузки."
    },
    {"Item","AST","ТекущаяСтрока","CurrentLine",
"ТекущаяСтрока(<?>);",
"CurrentLine(<?>);",
"@Синтаксис:
ТекущаяСтрока(<Строка>)
@Назначение:
Установить/определить текущую строку таблицы в элементе диалога типа ''ТаблицаЗначений''. Возвращает число, соответствующее индексу текущей строки поля диалога (до его изменения), или 0, если текущей строки нет.
@Параметры:
<Строка> - необязательный параметр. Числовое выражение с задаваемым индексом строки для элемента диалога типа ''ТаблицаЗначений'', на которую требуется установить курсор. Если параметр не задан, то положение курсора в поле диалога не меняется."
    },
    {"Item","AST","ТекущаяКолонка","CurrentColumn",
"ТекущаяКолонка(<?>,);",
"CurrentColumn(<?>,);",
"@Синтаксис:
ТекущаяКолонка(<НоваяКолонка>,<ТекущаяКолонка>)
@Назначение:
Установить/определить текущую колонку таблицы в элементе диалога типа ''ТаблицаЗначений''. Возвращает код текущей колонки поля диалога (до его изменения) или '''' (пустая строка), если текущей колонки нет.
@Параметры:
<НоваяКолонка> - необязательный параметр. Номер или код колонки для элемента диалога типа ''ТаблицаЗначений'', на которую требуется установить курсор. Если параметр не задан, то текущая колонка в поле диалога не меняется.
<ТекущаяКолонка> - необязательный параметр. Идентификатор переменной, куда система возвращает номер текущей колонки.
@Замечание:
Данный метод можно использовать только для объектов, которые созданы при помощи визуальных средств конфигуратора (в форму вставлены элементы диалога ''ТаблицаЗначений'', а идентификаторы этих элементов доступны в контексте программного модуля этой формы как уже существующие объекты типа ''ТаблицаЗначений'')."
    },
    {"Item","AST","ВидимостьКолонки","ColumnVisibility",
"ВидимостьКолонки(<?>,,);",
"ColumnVisibility(<?>,,);",
"@Синтаксис:
ВидимостьКолонки(<Колонки>,<Видимость>,<Позиция>)
@Назначение:
Показать/скрыть колонки таблицы значений в визуальном представлении таблицы значений.
@Параметры:
<Колонки> - строковое выражение, которое определяет список колонок. Формат передаваемой строки - это разделенные запятыми номера или идентификаторы колонок, для которых применяется данный метод. 
<Видимость> - необязательный параметр. Число: 1 - показать колонки; 0 - скрыть колонки. Значение по умолчанию 1.
<Позиция> - необязательный параметр. Позиция, в которой показывать колонку. Если параметр не задан, то колонки отображаются в соответствии с порядком колонок в таблице."
    },
    {"Item","AST","Фиксировать","Fix",
"Фиксировать(<?>,);",
"Fix(<?>,);",
"@Синтаксис:
Фиксировать(<КолСтрок>,<КолКолонок>)
@Назначение:
Фиксировать в  элементе диалога типа ''ТаблицаЗначений''  колонки и строки.
@Параметры:
<КолСтрок> - необязательный параметр. Количество фиксируемых строк. Если не указан, то не изменять фиксацию.
<КолКолонок> - необязательный параметр. Количество фиксируемых колонок. Если не указан, то не изменять фиксацию."
    },
    {"Item","AST","ВыводитьПиктограммы","ShowImages",
"ВыводитьПиктограммы(<?>,);",
"ShowImages(<?>,);",
"@Синтаксис:
ВыводитьПиктограммы(<Колонка>,<Пиктограмма>)
@Назначение:
Выводить в элементе диалога типа ''ТаблицаЗначений'' пиктограммы.
@Параметры:
<Колонка> - номер или идентификатор колонки, которая содержит номера пиктограмм.
<Пиктограмма> - необязательный параметр. Начальный номер пиктограммы. По умолчанию 1.
@Замечание:
Метод устанавливает режим, при котором в колонке выводится не текст, а пиктограмма. Пиктограмма будет браться из картинки, назначенной элементу диалога ''ТаблицаЗначений'' в закладке ''Картинка'' в конфигураторе. Картинка должна быть формата .bmp, содержать все пиктограммы для этой таблицы значений и состоять из последовательности пиктограмм размером 16х15 пикселей. Пиктограммы будут выбираться из картинки по номеру, взятому из числового значения данной колонки в текущей строке."
    },
    },
    },
 {"Folder","AST","Таблица","Table",
 {"Folder","AST","Атрибуты","",
    {"Item","AST","ТекущийОбъект","CurrentObj",
"ТекущийОбъект",
"CurrentObj",
"@Синтаксис:
ТекущийОбъект
@Назначение:
Атрибут (только для чтения) содержит значение встроенного объекта таблицы типа ''Картинка'', ''Диаграмма'' или ''OLE объект''. Он доступен только в выражении (и в теле процедур, которые вызываются в выражении), которое записывается в конфигураторе в свойствах встроенного объекта таблицы типа ''Картинка'', ''Диаграмма'' или ''OLE объект'' (''Свойства''-''Дополнительные''-''Текст''). Этот атрибут  позволяет использовать в программном модуле полученное значение объекта для манипуляции с ним. Например, для взаимодействия с внешним приложением через механизм OLE Automation."
    },
    },
 {"Folder","AST","Методы таблиц","",
    {"Item","AST","ИсходнаяТаблица","SourceTable",
"ИсходнаяТаблица(<?>);",
"SourceTable(<?>);",
"@Синтаксис:
ИсходнаяТаблица(<Строка>)
@Назначение:
Переназначает в качестве исходной таблицы-шаблона одну из таблиц той формы, в программном модуле которой запущена данная процедура. Имя таблицы сначала ищется в форме модуля, потом в общих таблицах. Если такой таблицы нет, то переданное имя будет рассматриваться как имя файла, содержащего данную таблицу. 
@Параметры:
<Строка> - задает имя таблицы формы или имя файла содержащего таблицу."
    },
    {"Item","AST","ИспользоватьФормат","DefaultFormat",
"ИспользоватьФормат(<?>);",
"DefaultFormat(<?>);",
"@Синтаксис:
ИспользоватьФормат(<СтрокаФормата>)
@Назначение:
Устанавливает формат по умолчанию для вывода выражений секций таблицы. Возвращает: строковое значение, содержащее текущую форматную строку по умолчанию для таблицы (на момент до исполнения метода).
@Параметры:
<СтрокаФормата> - необязательный параметр. Строковое выражение, содержащее форматную строку (см. метод Формат).
@Замечание:
В ячейках таблицы, при выводе которых требуется формат, отличный от установленного данным методом, должен быть установлен формат явным образом. Форматная строка записывается через символ ''#'' после выражения, заданного для ячейки. Если выражение, заданное для ячейки просто завершается символом ''#'',  то будет использоваться системный формат по умолчанию."
    },
    {"Item","AST","Открыть","Open",
"Открыть(<?>);",
"Open(<?>);",
"@Синтаксис:
Открыть(<ИмяФайла>)
@Назначение:
Открыть таблицу из файла.
@Параметры:
<ИмяФайла> - строковое выражение с именем файла."
    },
    {"Item","AST","Вывести","Put",
"Вывести();",
"Put();",
"@Синтаксис:
Вывести()
@Назначение:
Перенести всю назначенную исходную таблицу-шаблон в результирующую таблицу."
    },
    {"Item","AST","ПолучитьСекцию","GetSection",
"ПолучитьСекцию(<?>);",
"GetSection(<?>);",
"@Синтаксис:
ПолучитьСекцию(<ИмяСекции>)
@Назначение:
Возвращает именованную секцию исходной таблицы-шаблона. При получении секции, ячейки секции, имеющие тип ''Шаблон'' и ''Выражение'' будут заполнены соответствующими данными.
@Параметры:
<ИмяСекции> - выражение, задающее секцию.
Имя секции задается строковым выражением следующего формата:
ИдентификаторСекции1[<|>|-][|ИдентификаторСекции2[<|>|-]]
Символы ''<'' , ''>'' , ''-'' после идентификатора секции указывают на то, что выбирается только часть секции. ''<'' -	заголовочная часть (с начала секции до начала вложенной секции). ''>'' - подвальная часть (с конца вложенной секции до конца секции). ''-'' - средняя часть (собственно вложенная секция).
В выражении можно задавать имена двух секций, разделенных знаком ''|''. При этом будет получена область исходной таблицы, являющаяся пересечением первой и второй указанных секций. При этом одна секция может быть горизонтальной (состоять из строк), а другая - вертикальной (состоять из колонок). В результате получится прямоугольная область таблицы."
    },
    {"Item","AST","ВывестиСекцию","PutSection",
"ВывестиСекцию(<?>);",
"PutSection(<?>);",
"@Синтаксис:
ВывестиСекцию(<ИмяСекции>)
@Назначение:
Перенести секцию исходной таблицы-шаблона в результирующую таблицу.
@Параметры:
<ИмяСекции> - выражение типа строка, задающее имя выводимой секции, или значение типа секция, полученное при помощи метода ПолучитьСекцию.
Имя секции задается строковым выражением следующего формата:
ИдентификаторСекции1[<|>|-][|ИдентификаторСекции2[<|>|-]]
Символы ''<'' , ''>'' , ''-'' после идентификатора секции указывают на то, что выбирается только часть секции. ''<'' -	заголовочная часть (с начала секции до начала вложенной секции). ''>'' - подвальная часть (с конца вложенной секции до конца секции). ''-'' - средняя часть (собственно вложенная секция).
В выражении можно задавать имена двух секций, разделенных знаком ''|''. При этом будет получена область исходной таблицы, являющаяся пересечением первой и второй указанных секций. При этом одна секция может быть горизонтальной (состоять из строк), а другая - вертикальной (состоять из колонок). В результате получится прямоугольная область таблицы."
    },
    {"Item","AST","ПрисоединитьСекцию","AttachSection",
"ПрисоединитьСекцию(<?>);",
"AttachSection(<?>);",
"@Синтаксис:
ПрисоединитьСекцию(<ИмяСекции>)
@Назначение:
Присоединить секцию исходной таблицы-шаблона к текущей таблице.
@Параметры:
<ИмяСекции> - выражение типа строка, задающее имя присоединяемой секции, или значение типа секция, полученное при помощи метода ПолучитьСекцию.
Имя секции задается строковым выражением следующего формата:
ИдентификаторСекции1[<|>|-][|ИдентификаторСекции2[<|>|-]]
Символы ''<'' , ''>'' , ''-'' после идентификатора секции указывают на то, что присоединяется только часть секции. ''<'' -	заголовочная часть (с начала секции до начала вложенной секции). ''>'' - подвальная часть (с конца вложенной секции до конца секции). ''-'' - средняя часть (собственно вложенная секция).
В выражении можно задавать имена двух секций, разделенных знаком ''|''. При этом будет получена область исходной таблицы, являющаяся пересечением первой и второй указанных секций. При этом одна секция может быть горизонтальной (состоять из строк), а другая - вертикальной (состоять из колонок). В результате получится прямоугольная область таблицы."
    },
    {"Item","AST","НоваяСтраница","NewPage",
"НоваяСтраница(<?>);",
"NewPage(<?>);",
"@Синтаксис:
НоваяСтраница(<Ном>)
@Назначение:
Вставить в результирующую таблицу разделитель страниц.
@Параметры:
<Ном> - необязательный параметр. Номер строки, после которой начинать новую страницу. Если параметр не указан, то новая страница вставляется по текущей высоте таблицы."
    },
    {"Item","AST","НоваяКолонка","NewColumn",
"НоваяКолонка(<?>);",
"NewColumn(<?>);",
"@Синтаксис:
НоваяКолонка(<Ном>)
@Назначение:
Вставить в результирующую таблицу разделитель колонок.
@Параметры:
<Ном> - необязательный параметр. Номер столбца, после которого установить разделитель колонок. Если параметр не указан, то разделитель колонок вставляется по текущей ширине таблицы. Разделитель колонок используется для принудительного разделения при печати страниц по вертикали."
    },
    {"Item","AST","ШиринаТаблицы","TableWidth",
"ШиринаТаблицы()",
"TableWidth()",
"@Синтаксис:
ШиринаТаблицы()
@Назначение:
Возвращает число столбцов в сформированной результирующей таблице."
    },
    {"Item","AST","ВысотаТаблицы","TableHeight",
"ВысотаТаблицы()",
"TableHeight()",
"@Синтаксис:
ВысотаТаблицы()
@Назначение:
Возвращает число строк в сформированной результирующей таблице."
    },
    {"Item","AST","ШиринаСекции","SectionWidth",
"ШиринаСекции(<?>)",
"SectionWidth(<?>)",
"@Синтаксис:
ШиринаСекции(<ИмяСекции>)
@Назначение:
Возвращает число столбцов в секции таблицы-шаблона.
@Параметры:
<ИмяСекции> - выражение типа строка, задающее имя выводимой секции.
Имя секции задается строковым выражением следующего формата:
ИдентификаторСекции1[<|>|-][|ИдентификаторСекции2[<|>|-]]
Символы ''<'' , ''>'' , ''-'' после идентификатора секции указывают на то, что выбирается только часть секции. ''<'' -	заголовочная часть (с начала секции до начала вложенной секции). ''>'' - подвальная часть (с конца вложенной секции до конца секции). ''-'' - средняя часть (собственно вложенная секция).
В выражении можно задавать имена двух секций, разделенных знаком ''|''. При этом будет получена область исходной таблицы, являющаяся пересечением первой и второй указанных секций. При этом одна секция может быть горизонтальной (состоять из строк), а другая - вертикальной (состоять из колонок). В результате получится прямоугольная область таблицы."
    },
    {"Item","AST","ВысотаСекции","SectionHeight",
"ВысотаСекции(<?>)",
"SectionHeight(<?>)",
"@Синтаксис:
ВысотаСекции(<ИмяСекции>)
@Назначение:
Возвращает число строк в секции таблицы-шаблона.
@Параметры:
<ИмяСекции> - выражение типа строка, задающее имя выводимой секции.
Имя секции задается строковым выражением следующего формата:
ИдентификаторСекции1[<|>|-][|ИдентификаторСекции2[<|>|-]]
Символы ''<'' , ''>'' , ''-'' после идентификатора секции указывают на то, что выбирается только часть секции. ''<'' -	заголовочная часть (с начала секции до начала вложенной секции). ''>'' - подвальная часть (с конца вложенной секции до конца секции). ''-'' - средняя часть (собственно вложенная секция).
В выражении можно задавать имена двух секций, разделенных знаком ''|''. При этом будет получена область исходной таблицы, являющаяся пересечением первой и второй указанных секций. При этом одна секция может быть горизонтальной (состоять из строк), а другая - вертикальной (состоять из колонок). В результате получится прямоугольная область таблицы."
    },
    {"Item","AST","ТолькоПросмотр","ReadOnly",
"ТолькоПросмотр(<?>)",
"ReadOnly(<?>)",
"@Синтаксис:
ТолькоПросмотр(<Флаг>)
@Назначение:
Установить флаг режима редактирования таблицы. Возвращает: текущее числовое значение режима редактирования таблицы (на момент до исполнения метода).
@Параметры:
<Флаг> - необязательный параметр. Режим редактирования. Число: -  1 - только просмотр, 0 - допускается редактирование."
    },
    {"Item","AST","Показать","Show",
"Показать(<?>,,);",
"Show(<?>,,);",
"@Синтаксис:
Показать(<Заголовок>,<ИмяФайла>,<Активизировать>)
@Назначение:
Открыть окно редактирования таблицы.
@Параметры:
<Заголовок> - необязательный параметр. Заголовок окна редактирования. Если параметр не задан, в заголовке будет выдаваться слово ''Таблица''.
<ИмяФайла> - необязательный параметр. Имя файла для сохранения таблицы. Если параметр задан, то при закрытии окна табличного документа система будет предлагать сохранить документ в файле с указанным именем. Если файла с таким именем не существует, то будет создан новый файл с таким именем. Если параметр опущен или имеет пустое значение, то при закрытии окна табличного документа система не будет предлагать сохранить данные в файле. 
<Активизировать> - необязательный параметр. Признак активизации. Число: 1 - активизировать окно табличного документа; 0 - не активизировать окно табличного документа;  -1 (минус единица) - закрыть окно если оно открыто; по умолчанию  1. (необязателен)."
    },
    {"Item","AST","Очистить","Clear",
"Очистить();",
"Clear();",
"@Синтаксис:
Очистить()
@Назначение:
Очищает содержимое табличного документа уже открытого в окне методом Показать. Использование данного метода имеет смысл, если сам объект типа ''Таблица'' не уничтожался после первого заполнения."
    },
    {"Item","AST","Защита","Protection",
"Защита(<?>)",
"Protection(<?>)",
"@Синтаксис:
Защита(<Флаг>)
@Назначение:
Защитить таблицу от изменений (редактирования и копирования, в том числе через буфер обмена). Возвращает: текущее числовое значение флага защиты таблицы (на момент до исполнения метода).
@Параметры:
<Флаг> - флаг защиты таблицы от изменений: 1 - установить защиту, 0 - снять."
    },
    {"Item","AST","Записать","Write",
"Записать(<?>,);",
"Write(<?>,);",
"@Синтаксис:
Записать(<ИмяФайла>,<ТипФайла>)
@Назначение:
Записать таблицу в файл.
@Параметры:
<ИмяФайла> - имя файла.
<ТипФайла> - необязательный параметр. Числовое или строковое выражение, определяющее тип файла:
· отсутствует, 0 или ''MXL'' - формат 1C;
· 1 или ''XLS'' - формат Ms Excel;
· 2 или ''HTM'' или ''HTML'' - формат HTML;
· 3 или ''TXT'' - формат TXT.
@Замечание:
Метод может использоваться при работе с таблицей в режиме ввода данных."
    },
    {"Item","AST","Область","Area",
"Область(<?>)",
"Area(<?>)",
"@Синтаксис:
Область(<Адрес>)
@Назначение:
Возвращает значение типа ''ОбластьТаблицы'' области выходной таблицы или таблицы в режиме ввода данных. 
@Параметры:
<Адрес> - необязательный параметр. Строковое выражение, задающее имя области или адрес в формате ''R1C1:R2C2''. Если метод вызван без параметров, то область задана всей таблицей.
@Замечание:
Метод может использоваться при работе с таблицей в режиме ввода данных."
    },
    {"Item","AST","Область","Area",
"Область(<?>)",
"Area(<?>)",
"@Синтаксис:
Область(<R1>,<C1>,<R2>,<C2>)
@Назначение:
Возвращает значение типа ''ОбластьТаблицы'' области выходной таблицы или таблицы в режиме ввода данных. 
@Параметры:
<R1> - необязательный параметр. Номер первой строки области.
<C1> - необязательный параметр. Номер первого столбца области.
<R2> - необязательный параметр. Номер последней строки области.
<C2> - необязательный параметр. Номер последнего столбца области.
@Замечание:
Если последняя строка и последний столбец отсутствуют, то область задана единственной ячейкой. Если строки или столбцы отсутствуют, то область задана диапазоном столбцов или строк соответственно. Если метод вызван без параметров, то область задана всей таблицей.
@Замечание:
Метод может использоваться при работе с таблицей в режиме ввода данных."
    },
    {"Item","AST","ПовторятьПриПечатиСтроки","RepeatRowsWhilePrinting",
"ПовторятьПриПечатиСтроки(<?>,);",
"RepeatRowsWhilePrinting(<?>,);",
"@Синтаксис:
ПовторятьПриПечатиСтроки(<НачСтрока>,<КонСтрока>)
@Назначение:
Задать строки результирующей таблицы, повторяющиеся при печати в начале каждой страницы. 
@Параметры:
<НачСтрока> - номер первой строки повторения.
<КонСтрока> - номер последней строки повторения.
@Замечание:
Метод может использоваться при работе с таблицей в режиме ввода данных."
    },
    {"Item","AST","ПовторятьПриПечатиСтолбцы","RepeatColsWhilePrinting",
"ПовторятьПриПечатиСтолбцы(<?>,);",
"RepeatColsWhilePrinting(<?>,);",
"@Синтаксис:
ПовторятьПриПечатиСтолбцы(<НачСтолбец>,<КонСтолбец>)
@Назначение:
Задать столбцы результирующей таблицы, повторяющиеся при печати на каждой странице слева.
@Параметры:
<НачСтолбец> - номер первого столбца повторения.
<КонСтолбец> - номер последнего столбца повторения.
@Замечание:
Метод может использоваться при работе с таблицей в режиме ввода данных."
    },
    {"Item","AST","Опции","Options",
"Опции(<?>,,,,);",
"Options(<?>,,,,);",
"@Синтаксис:
Опции(<ВыводСетки>,<ВыводЗаголовков>,<ФиксСтрок>,<ФиксСтолбцов>,<ИмяОпцийПечати>,<ИмяСохрРазмОкна>,<ФлагЧБПросмотра>,<НаправлПерехода>)
@Назначение:
Установить флаги вывода сетки, заголовков, фиксации строк и столбцов, набор опций печати.
@Параметры:
<ВыводСетки> - флаг вывода сетки: 1 - показывать, 0 - не показывать (необязателен, умолчание - 1);
<ВыводЗаголовков> - флаг вывода заголовков строк и столбцов: 1 - показывать, 0 - не показывать (необязателен, по умолчанию - 1);
<ФиксСтрок> - число фиксируемых строк (необязателен, по умолчанию - 0);
<ФиксСтолбцов> - число фиксируемых столбцов (необязателен, по умолчанию - 0);
@Замечание:
Метод может использоваться при работе с таблицей в режиме ввода данных. 
<ИмяОпцийПечати> - строковый идентификатор набора опций печати (необязателен, умолчание - пустая строка, в этом случае используются системные опции печати по умолчанию).
<ИмяСохрРазмОкна> - строковый идентификатор сохраняемых параметров размера окна (необязателен, по умолчанию - пустая строка, в этом случае размеры окна не запоминаются). Если этот параметр указан, то система будет сохранять размер окна и использовать его при следующем открытии табличного документа. 
<ФлагЧБПросмотра> - необязательный параметр. Число: 1 - черно-белый просмотр; 0 - обычный режим просмотра. Значение по умолчанию - 0.
<НаправлПерехода> - необязательный параметр. Число:  1 - по строкам, т.е. при вводе данных в ячейки при нажатии клавиши <Enter> будет автоматически выполняться переход к следующей вводимой ячейке в этой строке, а если таковых нет, то к самой левой вводимой ячейке следующей строки; 2 - по столбцам, т.е. при вводе данных в ячейки при нажатии клавиши <Enter> будет автоматически выполняться переход к следующей вводимой ячейке в этом столбце, а если таковых нет, то к самой верхней вводимой ячейке следующего столбца; 3 - при вводе данных в ячейки автоматический переход при нажатии клавиши <Enter> выполняться не будет. Значение по умолчанию 1."
    },
    {"Item","AST","ОбластьПечати","PrintRange",
"ОбластьПечати(<?>,,,);",
"PrintRange(<?>,,,);",
"@Синтаксис:
ОбластьПечати(<Верх>,<Лево>,<Низ>,<Право>)
@Назначение:
Устанавливает из языка область печати табличного документа.
@Параметры:
<Верх> - номер верхней печатаемой строки;
<Лево> - номер крайнего левого печатаемого столбца;
<Низ> -  номер нижней печатаемой строки;
<Право> - номер крайнего правого печатаемого столбца.
@Замечание:
Метод может использоваться при работе с таблицей в режиме ввода данных."
    },
    {"Item","AST","ПараметрыСтраницы","PageSetup",
"ПараметрыСтраницы(<?>,,,,,,,,,,,);",
"PageSetup(<?>,,,,,,,,,,,);",
"@Синтаксис:
ПараметрыСтраницы(<Ориентация>,<Масштаб>,<РежимПечатиКопий>,<ПолеСлева>,<ПолеСправа>,<ПолеСверху>,<ПолеСнизу>,<КолонтитулСверху>,<КолонтитулСнизу>,<Автомасштаб>,<ФлагЧБПечати>,<ИмяПринтера>)
@Назначение:
Установить параметры страницы.
Возвращаемого значения нет.
@Параметры:
<Ориентация> - необязательный параметр. Ориентация вывода на печать: число:  1 -  портрет; 2 - ландшафт.
<Масштаб> - необязательный параметр. Числовое выражение - масштаб (в процентах) вывода на печать.
<РежимПечатиКопий> - необязательный параметр. Числовое выражение - режим вывода нескольких копий на печать: 0 -  (collate) выводить сначала первые страницы всех копий,  затем вторые и т.д.; 1 - (разобрать) выводить страницы копий по порядку.
<ПолеСлева> - необязательный параметр. Числовое выражение - расстояние (в миллиметрах) от левого края страницы.
<ПолеСправа> - необязательный параметр. Числовое выражение - расстояние (в миллиметрах) от правого края страницы.
<ПолеСверху> - необязательный параметр. Числовое выражение - расстояние (в миллиметрах) от верхнего края страницы.
<ПолеСнизу> - необязательный параметр. Числовое выражение - расстояние (в миллиметрах) от нижнего края страницы.
<КолонтитулСверху> - необязательный параметр. Числовое выражение - размер (в миллиметрах) верхнего колонтитула.
<КолонтитулСнизу> - необязательный параметр. Числовое выражение - размер (в миллиметрах) нижнего колонтитула.
<Автомасштаб> - необязательный параметр. Режим автоматического подбора масштаба для размещения документа при печати на листе по ширине. 1 - включить; 0 - выключить; по умолчанию - 0.
<ФлагЧБПечати> - необязательный параметр. Число: 1 - черно-белая печать; 0 - обычный режим печати. Значение по умолчанию - 0.
<ИмяПринтера> - необязательный параметр. Строка имени принтера, как в стандартном диалоге печати Windows.
@Замечание:
Метод может использоваться при работе с таблицей в режиме ввода данных."
    },
    {"Item","AST","КоличествоЭкземпляров","NumberOfCopies",
"КоличествоЭкземпляров(<?>)",
"NumberOfCopies(<?>)",
"@Синтаксис:
КоличествоЭкземпляров(<Колво>)
@Назначение:
Определить количество печатаемых экземпляров. Возвращает: текущее числовое значение количества печатаемых экземпляров (на момент до исполнения метода).
@Параметры:
<Колво> - число печатаемых экземпляров.
@Замечание:
Метод может использоваться при работе с таблицей в режиме ввода данных."
    },
    {"Item","AST","ЭкземпляровНаСтранице","CopyesPerPage",
"ЭкземпляровНаСтранице(<?>)",
"CopyesPerPage(<?>)",
"@Синтаксис:
ЭкземпляровНаСтранице(<Колво>)
@Назначение:
Определить количество печатаемых экземпляров на странице. Возвращает: текущее числовое значение количества печатаемых экземпляров на странице (на момент до исполнения метода).
@Параметры:
<Колво> - число печатаемых экземпляров на странице. Может принимать значения:
1 - один экземпляр на странице
2 - два экземпляра на странице
0 - автоматический режим размещения двух экземпляров на странице исходя из размеров документа.
@Замечание:
Метод может использоваться при работе с таблицей в режиме ввода данных."
    },
    {"Item","AST","Напечатать","Print",
"Напечатать(<?>);",
"Print(<?>);",
"@Синтаксис:
Напечатать(<Флаг>)
@Назначение:
Напечатать таблицу без предварительного просмотра (печать без открытия окна редактирования).
@Параметры:
<Флаг> - необязательный параметр. Режим запроса диалога печати: 1 - запрашивать диалог печати (по умолчанию), 0 - не запрашивать.
@Замечание:
Метод может использоваться при работе с таблицей в режиме ввода данных."
    },
    {"Item","AST","ЗначениеТекущейЯчейки","ValueOfCurrentCell",
"ЗначениеТекущейЯчейки(<?>)",
"ValueOfCurrentCell(<?>)",
"@Синтаксис:
ЗначениеТекущейЯчейки(<Адрес>)
@Назначение:
Возвращает вычисленное значение текущей ячейки таблицы (задается в конфигураторе: ''Свойства'' ячейки, ''Текст'', ''Расшифровка''), перенесенное в табличный документ.
@Параметры:
<Адрес> - необязательный параметр. Идентификатор переменной, куда система возвратит адрес текущей ячейки в формате ''RnCn''."
    },
    {"Item","AST","КоличествоСтраниц","PageCount",
"КоличествоСтраниц()",
"PageCount()",
"@Синтаксис:
КоличествоСтраниц()
@Назначение:
Возвращает количество страниц, занимаемое таблицей при выводе на печать."
    },
    },
 {"Folder","AST","Атрибуты и методы СекцииТаблицы","",
    {"Item","AST","<ИмяОбласти>","<NameReg>",
"<ИмяОбласти>",
"<NameReg>",
"@Синтаксис:
<ИмяОбласти>
@Назначение:
Атрибут позволяет обращаться к поименованной области секции. Для обращения к конкретной области секции следует указать ее идентификатор, заданный для этой области в конфигураторе."
    },
    {"Item","AST","Область","Area",
"Область(<?>)",
"Area(<?>)",
"@Синтаксис:
Область(<Адрес>)
@Назначение:
Возвращает значение типа ''ОбластьТаблицы'' области секции таблицы или секции таблицы в режиме ввода данных. 
@Параметры:
<Адрес> - необязательный параметр. Строковое выражение, задающее имя области или адрес в формате ''R1C1:R2C2''. Если метод вызван без параметров, то область задана всей секцией."
    },
    {"Item","AST","Область","Area",
"Область(<?>)",
"Area(<?>)",
"@Синтаксис:
Область(<R1>,<C1>,<R2>,<C2>)
@Назначение:
Возвращает значение типа ''ОбластьТаблицы'' области выходной секции таблицы или секции таблицы в режиме ввода данных. 
@Параметры:
<R1> - необязательный параметр. Номер первой строки области.
<C1> - необязательный параметр. Номер первого столбца области.
<R2> - необязательный параметр. Номер последней строки области.
<C2> - необязательный параметр. Номер последнего столбца области.
@Замечание:
Если последняя строка и последний столбец отсутствуют, то область задана единственной ячейкой. Если строки или столбцы отсутствуют, то область задана диапазоном столбцов или строк соответственно. Если метод вызван без параметров, то область задана всей секцией."
    },
    },
 {"Folder","AST","Атрибуты и методы ОбластиТаблицы","",
    {"Item","AST","Текст","Text",
"Текст",
"Text",
"@Синтаксис:
Текст
@Назначение:
Атрибут позволяет прочитать/установить значение текста области (аналогично тому, как в конфигураторе интерактивно задают значение формулы в свойствах ячейки таблицы ''Свойства''- закладка ''Текст'')."
    },
    {"Item","AST","Расшифровка","Details",
"Расшифровка(<?>,);",
"Details(<?>,);",
"@Синтаксис:
Расшифровка(<Значение>,<РежимИспользования>)
@Назначение:
Установить расшифровку области. Возвращает текущее значение расшифровки.
@Параметры:
<Значение> -  необязательный параметр. Новое значение расшифровки области.
<РежимИспользования> - необязательный параметр. Число: 0 - обычный режим; 1 - установить данную расшифровку для всей строки; 2 - не вызывать расшифровку для данной ячейки.  Значение по умолчанию - 0.
@Замечание:
Данный метод нельзя использовать при работе с областью таблицы в режиме ввода данных."
    },
    {"Item","AST","Объединить","Merge",
"Объединить()",
"Merge()",
"@Синтаксис:
Объединить()
@Назначение:
Объединить ячейки области.
@Замечание:
Данный метод нельзя использовать при работе с областью таблицы в режиме ввода данных."
    },
    {"Item","AST","Шрифт","Font",
"Шрифт(<?>)",
"Шрифт(<?>)",
"@Синтаксис:
Шрифт(<ИмяШрифта>)
@Назначение:
Получить/установить шрифт области. Возвращает имя шрифта до исполнения метода.
@Параметры:
<ИмяШрифта> - необязательный параметр. Строковое выражение, задающее имя шрифта или ''имя, набор символов'', где основные наборы символов: 204 - русский; 238 - европейский;  186 - балтийский; 161 - греческий; 162 - турецкий. Если параметр опущен, то шрифт области не изменяется."
    },
    {"Item","AST","РазмерШрифта","FontSize",
"РазмерШрифта(<?>)",
"FontSize(<?>)",
"@Синтаксис:
РазмерШрифта(<Размер>)
@Назначение:
Получить/установить размер шрифта области. Возвращает размер шрифта до исполнения метода.
@Параметры:
<Размер> - необязательный параметр. Числовое выражение, задающее размер шрифта. Если параметр опущен, то размер шрифта области не изменяется."
    },
    {"Item","AST","Полужирный","Bold",
"Полужирный(<?>)",
"Bold(<?>)",
"@Синтаксис:
Полужирный(<Жирный>)
@Назначение:
Получить/установить признак  жирного шрифта области. Возвращает признак  жирного шрифта до исполнения метода.
@Параметры:
<Жирный> - необязательный параметр. Число: 1 - жирный шрифт; 0 - не жирный шрифт. Если параметр опущен, то жирность шрифта области не изменяется."
    },
    {"Item","AST","Курсив","Italic",
"Курсив(<?>)",
"Italic(<?>)",
"@Синтаксис:
Курсив(<Курсив>)
@Назначение:
Получить/установить признак шрифта курсив  области. Возвращает признак шрифта курсив  до исполнения метода.
@Параметры:
<Курсив> - необязательный параметр. Число: 1 - шрифт курсив; 0 - шрифт не курсив. Если параметр опущен, то признак курсив шрифта области не изменяется."
    },
    {"Item","AST","Подчеркнутый","Underline",
"Подчеркнутый(<?>)",
"Underline(<?>)",
"@Синтаксис:
Подчеркнутый(<Подч>)
@Назначение:
Получить/установить признак подчеркнутого шрифта области. Возвращает признак подчеркнутого шрифта до исполнения метода.
@Параметры:
<Подч> - необязательный параметр. Число: 1 - шрифт подчеркнутый; 0 - шрифт не подчеркнутый. Если параметр опущен, то признак подчеркнутого шрифта области не изменяется."
    },
    {"Item","AST","ВертикальноеПоложение","VerticalAlign",
"ВертикальноеПоложение(<?>)",
"VerticalAlign(<?>)",
"@Синтаксис:
ВертикальноеПоложение(<Положение>)
@Назначение:
Получить/установить признак вертикального выравнивания текста области. Возвращает признак вертикального выравнивания текста до исполнения метода.
@Параметры:
<Положение> - необязательный параметр. Число: 1 - снизу; 2 - сверху; 3 - по центру. Если параметр опущен, то признак вертикального выравнивания текста области не изменяется."
    },
    {"Item","AST","ГоризонтальноеПоложение","HorizontalAlign",
"ГоризонтальноеПоложение(<?>)",
"HorizontalAlign(<?>)",
"@Синтаксис:
ГоризонтальноеПоложение(<Положение>)
@Назначение:
Получить/установить признак горизонтального выравнивания текста области. Возвращает признак горизонтального выравнивания текста до исполнения метода.
@Параметры:
<Положение> - необязательный параметр. Число: 1 - слева; 2 - справа; 3 - по центру; 4 - по ширине. (5 - 8) - по выделенным столбцам: слева/справа/по центру/по ширине. Если параметр опущен, то признак горизонтального выравнивания текста области не изменяется."
    },
    {"Item","AST","Контроль","Control",
"Контроль(<?>)",
"Control(<?>)",
"@Синтаксис:
Контроль(<Контроль>)
@Назначение:
Получить/установить признак контроля текста области. Возвращает признак контроля  текста до исполнения метода.
@Параметры:
<Контроль> - необязательный параметр. Число: 1 - Авто; 2 - Обрезать; 3 - Забивать; 4 - Переносить; 5 - Красный; 6 - Забивать+Красный. Если параметр опущен, то признак контроля  текста области не изменяется."
    },
    {"Item","AST","РамкаСверху","TopBorder",
"РамкаСверху(<?>)",
"TopBorder(<?>)",
"@Синтаксис:
РамкаСверху(<Рамка>)
@Назначение:
Получить/установить рамку сверху области. Возвращает рамку сверху до исполнения метода.
@Параметры:
<Рамка> - необязательный параметр. Число: 0 - нет; 1 -  тонкая точечная; 2 - очень тонкая ; 3 - тонкая сплошная; 4 - средняя сплошная; 5 - толстая сплошная; 6 - двойная; 7 - тонкая средний пунктир; 8 - тонкая длинный пунктир; 9 - толстая пунктир. Если параметр опущен, то рамка сверху области не изменяется."
    },
    {"Item","AST","РамкаСнизу","BottomBorder",
"РамкаСнизу(<?>)",
"BottomBorder(<?>)",
"@Синтаксис:
РамкаСнизу(<Рамка>)
@Назначение:
Получить/установить рамку снизу области. Возвращает рамку снизу до исполнения метода.
@Параметры:
<Рамка> - необязательный параметр. Число: 0 - нет; 1 -  тонкая точечная; 2 - очень тонкая; 3 - тонкая сплошная; 4 - средняя сплошная; 5 - толстая сплошная; 6 - двойная; 7 - тонкая средний пунктир; 8 - тонкая длинный пунктир; 9 - толстая пунктир. Если параметр опущен, то рамка снизу области не изменяется."
    },
    {"Item","AST","РамкаСлева","LeftBorder",
"РамкаСлева(<?>)",
"LeftBorder(<?>)",
"@Синтаксис:
РамкаСлева(<Рамка>)
@Назначение:
Получить/установить рамку слева области. Возвращает рамку слева до исполнения метода.
@Параметры:
<Рамка> - необязательный параметр. Число: 0 - нет; 1 -  тонкая точечная; 2 - очень тонкая; 3 - тонкая сплошная; 4 - средняя сплошная; 5 - толстая сплошная; 6 - двойная; 7 - тонкая средний пунктир; 8 - тонкая длинный пунктир; 9 - толстая пунктир. Если параметр опущен, то рамка слева области не изменяется."
    },
    {"Item","AST","РамкаСправа","RightBorder",
"РамкаСправа(<?>)",
"RightBorder(<?>)",
"@Синтаксис:
РамкаСправа(<Рамка>)
@Назначение:
Получить/установить рамку справа области. Возвращает рамку справа до исполнения метода.
@Параметры:
<Рамка> - необязательный параметр. Число: 0 - нет; 1 -  тонкая точечная; 2 - очень тонкая; 3 - тонкая сплошная; 4 - средняя сплошная; 5 - толстая сплошная; 6 - двойная; 7 - тонкая средний пунктир; 8 - тонкая длинный пунктир; 9 - толстая пунктир. Если параметр опущен, то рамка справа области не изменяется."
    },
    {"Item","AST","Рамка","Border",
"Рамка(<?>,,,)",
"Border(<?>,,,)",
"@Синтаксис:
Рамка(<РамкаСлева>,<РамкаСверху>,<РамкаСправа>,<РамкаСнизу>)
@Назначение:
Установить рамки всех ячеек области.
@Параметры:
<РамкаСлева>,<РамкаСверху>,<РамкаСправа>,<РамкаСнизу> - необязательные параметры. Число: 0 - нет; 1 -  тонкая точечная; 2 - очень тонкая; 3 - тонкая сплошная; 4 - средняя сплошная; 5 - толстая сплошная; 6 - двойная; 7 - тонкая средний пунктир; 8 - тонкая длинный пунктир; 9 - толстая пунктир. Если какой-либо параметр опущен, то соответствующая рамка ячеек области не изменяется."
    },
    {"Item","AST","РамкаОбвести","BorderOutline",
"РамкаОбвести(<?>,,,)",
"BorderOutline(<?>,,,)",
"@Синтаксис:
РамкаОбвести(<РамкаСлева>,<РамкаСверху>,<РамкаСправа>,<РамкаСнизу>)
@Назначение:
Установить рамки по краям области.
@Параметры:
<РамкаСлева>,<РамкаСверху>,<РамкаСправа>,<РамкаСнизу> - необязательные параметры. Число: 0 - нет; 1 -  тонкая точечная; 2 - очень тонкая; 3 - тонкая сплошная; 4 - средняя сплошная; 5 - толстая сплошная; 6 - двойная; 7 - тонкая средний пунктир; 8 - тонкая длинный пунктир; 9 - толстая пунктир. Если какой-либо параметр опущен, то соответствующая рамка области не изменяется."
    },
    {"Item","AST","ЦветФона","BackgroundColor",
"ЦветФона(<?>)",
"BackgroundColor(<?>)",
"@Синтаксис:
ЦветФона(<Цвет>)
@Назначение:
Получить/установить режим отображения цвета фона области. Возвращает текущее числовое значение RGB-цвета фона области (на момент до исполнения метода).
@Параметры:
<Цвет> - необязательный параметр. Числовое выражение, значение которого задает RGB цвет. Допустимые значения от 0 до 16'777'215. Значение -1 (минус единица) задает цвет, заданный для всей области по умолчанию."
    },
    {"Item","AST","ЦветФона","BackgroundColor",
"ЦветФона(<?>,,)",
"BackgroundColor(<?>,,)",
"@Синтаксис:
ЦветФона(<R>,<G>,<B>)
@Назначение:
Получить/установить режим отображения цвета фона области. Возвращает текущее числовое значение RGB-цвета фона области (на момент до исполнения метода).
@Параметры:
<R> - числовое выражение, значение которого задает красную компоненту цвета. Допустимые значения от 0 до 255.
<G> - числовое выражение, значение которого задает зеленую компоненту цвета. Допустимые значения от 0 до 255.
<B> - числовое выражение, значение которого задает синюю компоненту цвета. Допустимые значения от 0 до 255."
    },
    {"Item","AST","ЦветРамки","BorderColor",
"ЦветРамки(<?>)",
"BorderColor(<?>)",
"@Синтаксис:
ЦветРамки(<Цвет>)
@Назначение:
Получить/установить режим отображения цвета рамки области. Возвращает текущее числовое значение RGB-цвета рамки области (на момент до исполнения метода).
@Параметры:
<Цвет> - необязательный параметр. Числовое выражение, значение которого задает RGB цвет. Допустимые значения от 0 до 16'777'215. Значение -1 (минус единица) задает цвет, заданный для всей области по умолчанию."
    },
    {"Item","AST","ЦветРамки","BorderColor",
"ЦветРамки(<?>,,)",
"BorderColor(<?>,,)",
"@Синтаксис:
ЦветРамки(<R>,<G>,<B>)
@Назначение:
Получить/установить режим отображения цвета рамки области. Возвращает текущее числовое значение RGB-цвета рамки области (на момент до исполнения метода).
@Параметры:
<R> - числовое выражение, значение которого задает красную компоненту цвета. Допустимые значения от 0 до 255.
<G> - числовое выражение, значение которого задает зеленую компоненту цвета. Допустимые значения от 0 до 255.
<B> - числовое выражение, значение которого задает синюю компоненту цвета. Допустимые значения от 0 до 255."
    },
    {"Item","AST","ЦветТекста","TextColor",
"ЦветТекста(<?>)",
"TextColor(<?>)",
"@Синтаксис:
ЦветТекста(<Цвет>)
@Назначение:
Получить/установить режим отображения цвета текста области. Возвращает текущее числовое значение RGB-цвета текста области (на момент до исполнения метода).
@Параметры:
<Цвет> - необязательный параметр. Числовое выражение, значение которого задает RGB цвет. Допустимые значения от 0 до 16'777'215. Значение -1 (минус единица) задает цвет, заданный для всей области по умолчанию."
    },
    {"Item","AST","ЦветТекста","TextColor",
"ЦветТекста(<?>,,)",
"TextColor(<?>,,)",
"@Синтаксис:
ЦветТекста(<R>,<G>,<B>)
@Назначение:
Получить/установить режим отображения цвета текста области. Возвращает текущее числовое значение RGB-цвета текста области (на момент до исполнения метода).
@Параметры:
<R> - числовое выражение, значение которого задает красную компоненту цвета. Допустимые значения от 0 до 255.
<G> - числовое выражение, значение которого задает зеленую компоненту цвета. Допустимые значения от 0 до 255.
<B> - числовое выражение, значение которого задает синюю компоненту цвета. Допустимые значения от 0 до 255."
    },
    {"Item","AST","ВысотаСтроки","RowHeight",
"ВысотаСтроки(<?>)",
"RowHeight(<?>)",
"@Синтаксис:
ВысотаСтроки(<Высота>)
@Назначение:
Получить/установить высоту строк, проходящих через область. Возвращает высоту строк области в пунктах (на момент до исполнения метода).
@Параметры:
<Высота> - необязательный параметр. Число: высота строк, проходящих через область в пунктах с точностью до 0,25. Если параметр опущен, то высота строк области не изменяется."
    },
    {"Item","AST","ШиринаСтолбца","ColumnWidth",
"ШиринаСтолбца(<?>)",
"ColumnWidth(<?>)",
"@Синтаксис:
ШиринаСтолбца(<Ширина>)
@Назначение:
Получить/установить ширину столбцов, проходящих через область. Возвращает ширину столбцов области в стандартных символах (на момент до исполнения метода).
@Параметры:
<Ширина> - необязательный параметр. Число: ширина столбцов, проходящих через область в стандартных символах с точностью до 0,125. Если параметр опущен, то ширина столбцов области не изменяется."
    },
    {"Item","AST","ОриентацияТекста","TextOrientation",
"ОриентацияТекста(<?>)",
"TextOrientation(<?>)",
"@Синтаксис:
ОриентацияТекста(<Угол>)
@Назначение:
Получить/установить ориентацию текста в области. Возвращает угол наклона текста в градусах.
@Параметры:
<Угол> - необязательный параметр. Число: угол наклона текста в градусах. Если параметр опущен, то угол наклона текста области не изменяется."
    },
    },
 {"Folder","AST","Атрибуты и методы таблицы в режиме ввода данных","",
    {"Item","AST","<ИмяОбласти>","<NameReg>",
"<ИмяОбласти>",
"<NameReg>",
"@Синтаксис:
<ИмяОбласти>
@Назначение:
Атрибут позволяет обращаться к поименованной области таблицы. Для обращения к конкретной области таблицы следует указать ее идентификатор, заданный для этой области в конфигураторе."
    },
    {"Item","AST","АктивнаяОбласть","ActiveArea",
"АктивнаяОбласть(<?>);",
"ActiveArea(<?>);",
"@Синтаксис:
АктивнаяОбласть(<Адрес>)
@Назначение:
Активизировать область таблицы. Возвращает строковое значение имени активной области или адрес в формате ''R1C1:R2C2'' до начала выполнения метода. 
@Параметры:
<Адрес> - необязательный параметр. Строковое выражение, задающее имя области или адрес в формате ''R1C1:R2C2''."
    },
    {"Item","AST","Выгрузить","Unload",
"Выгрузить(<?>);",
"Unload(<?>);",
"@Синтаксис:
Выгрузить(<СписокЗначений>)
@Назначение:
Выгружает значения и имена для всех предназначенных для ввода ячеек таблицы в объект типа ''Список значений'', причем имя ячейки становится представлением, а данные из ячейки - значением в записи списка значений.
@Параметры:
<СписокЗначений> - идентификатор объекта типа ''Список значений'', куда выгружаются парами значения и имена для всех предназначенных для ввода ячеек."
    },
    {"Item","AST","Загрузить","Load",
"Загрузить(<?>);",
"Load(<?>);",
"@Синтаксис:
Загрузить(<СписокЗначений>)
@Назначение:
Загружает значения и имена для всех предназначенных для ввода ячеек таблицы из объекта типа ''Список значений'', причем представление списка значений становится именем ячейки, а значение записи становится значением ячейки.
@Параметры:
<СписокЗначений> - идентификатор объекта типа ''Список значений'', откуда загружаются парами значения и имена для всех предназначенных для ввода ячеек."
    },
    },
 {"Folder","AST","Атрибуты и методы ОбластиТаблицы в режиме ввода данных","",
    {"Item","AST","Значение","Value",
"Значение",
"Value",
"@Синтаксис:
Значение
@Назначение:
Атрибут позволяет прочитать/установить значение, записанное в области (аналогично тому, как в конфигураторе интерактивно задают значение в свойствах ячейки таблицы ''Свойства''- закладка ''Данные'')."
    },
    {"Item","AST","Формат","Format",
"Формат(<?>);",
"Format(<?>);",
"@Синтаксис:
Формат(<СтрокаФормата>)
@Назначение:
Устанавливает формат для вывода всех выражений в ячейках области таблицы. Возвращает: строковое значение, содержащее текущую форматную строку по умолчанию для области таблицы (на момент до исполнения метода).
@Параметры:
<СтрокаФормата> - необязательный параметр. Строковое выражение, содержащее форматную строку (см. метод Формат)."
    },
    {"Item","AST","УстановитьТип","AssignType",
"УстановитьТип(<?>);",
"AssignType(<?>);",
"@Синтаксис:
УстановитьТип(<Выражение>)
@Назначение:
Установить тип для значения ячейки неопределенного вида (которому в конфигураторе назначен тип ''Неопределенный'').
@Параметры:
<Выражение> - выражение. Тип значения этого выражения будет присвоен элементу диалога."
    },
    {"Item","AST","НазначитьТип","SetType",
"НазначитьТип(<?>,,);",
"SetType(<?>,,);",
"@Синтаксис:
НазначитьТип(<ИмяТипа>,<Длина>,<Точность>)
@Назначение:
Назначить тип для значения ячейки неопределенного вида (которому в конфигураторе назначен тип ''Неопределенный'').
@Параметры:
<ИмяТипа> - строковое выражение - название типа данных, которое назначается элементу диалога. Например, 'Строка', 'Число', 'Справочник.Товары', 'Документ.РасходнаяНакладная' и т.п.
<Длина> - необязательный параметр. Числовое выражение - длина поля представления числа. Имеет смысл только при задании числового типа.
<Точность> - необязательный параметр. Числовое выражение - число знаков числа после десятичной точки. Имеет смысл только при задании числового типа."
    },
    {"Item","AST","Доступность","ReadOnly",
"Доступность(<?>)",
"ReadOnly(<?>)",
"@Синтаксис:
Доступность(<Режим>)
@Назначение:
Установка режима редактирования области таблицы. Возвращает: текущее числовое значение режима редактирования области таблицы (на момент до исполнения метода).
@Параметры:
<Режим> - число: 1 - разрешено редактирование области таблицы , 0 - запрещено (необязателен)."
    },
    {"Item","AST","Редактирование","EnableEdit",
"Редактирование(<?>)",
"EnableEdit(<?>)",
"@Синтаксис:
Редактирование(<Флаг>)
@Назначение:
Определяет возможность редактирования значений ячеек области таблицы для полей ввода типа Число, Строка, Дата, Счет. 
@Параметры:
<Флаг> - число: 1 - значения ячеек области таблицы редактируется как обычно; 0 - значение не редактируется, но может выбираться кнопкой выбора. Отличие от метода ''Доступность '' в том, что ''Доступность'' отключает и кнопку выбора."
    },
    },
 {"Folder","AST","Предопределенные","",
    {"Item","AST","ОбработкаЯчейкиТаблицы","SheetCellProcessing",
"Процедура ОбработкаЯчейкиТаблицы(<?>,,,)
КонецПроцедуры",
"Procedure SheetCellProcessing(<?>,,,)
EndProcedure",
"@Синтаксис:
ОбработкаЯчейкиТаблицы(<Значение>,<ФлагСтандОбраб>,<Таблица>,<Адрес>)
@Назначение:
Предопределенная процедура обработки ячейки таблицы (по двойному щелчку мыши или по нажатию клавиши ''Enter'' в табличном документе на выбранной ячейке).
@Параметры:
<Значение> - здесь в процедуру передается вычисленное значение ячейки (задается в конфигураторе: ''Свойства'' ячейки, ''Текст'', ''Значение'').
<ФлагСтандОбраб> - флаг обработки ячейки: установка в 1 приведет к выполнению стандартной обработки значения ячейки по завершении процедуры (открытию документа, элемента справочника и т.п.).
<Таблица> - необязательный параметр. Имя переменной, куда система передаст объект типа ''Таблица''. С помощью значения этого контекста можно произвольно манипулировать данной таблицей, пока она открыта. Пока данный объект ''Таблица'' существует,  тип значения данного параметра равен 100, если закрыта - 0.
<Адрес> - необязательный параметр. Имя переменной, куда система передаст адрес ячейки/объекта в формате ''R1C1:R2C2''.
@Замечание:
Объект типа ''СписокЗначений'' может записываться в поле ''значение'' ячейки таблицы и использоваться затем процедурой ОбработкаЯчейкиТаблицы. 
@Важно! 
Если данная процедура описана в модуле формы, то вызывается она, иначе система запускает одноименную процедуру из глобального модуля.
@Внимание! 
Данная предопределенная процедура НЕ вызывается при выборе ячейки таблицы в режиме ввода данных. Для этого случая вызывается предопределенная процедура ПриВыбореЯчейкиТаблицы."
    },
    {"Item","AST","ПриВыбореЯчейкиТаблицы","OnSelectSheetCell",
"Процедура ПриВыбореЯчейкиТаблицы(<?>,)
КонецПроцедуры",
"Procedure OnSelectSheetCell(<?>,)
EndProcedure",
"@Синтаксис:
ПриВыбореЯчейкиТаблицы(<Адрес>,<Значение>)
@Назначение:
Предопределенная процедура обработки ячейки таблицы в режиме ввода данных (по двойному щелчку мыши или по нажатию клавиши ''Enter'' в табличном документе на выбранной ячейке).
@Параметры:
<Адрес> - здесь в процедуру системой передается строковое значение имени области таблицы, если выбранная ячейка помечена в таблице как отдельная область, или адрес ячейки в формате ''R1C1:R2C2''.
<Значение> - здесь в процедуру системой передается значение данной ячейки, а если диаграмма - значение выбранного элемента.
@Внимание! 
Данная предопределенная процедура вызывается в модуле формы отчета (обработки) при выборе ячейки только для таблиц в режиме ввода данных."
    },
    },
    },
 {"Folder","AST","Запрос","Query",
 {"Folder","AST","Методы","",
    {"Item","AST","Выполнить","Execute",
"Выполнить(<?>)",
"Execute(<?>)",
"@Синтаксис:
Выполнить(<ТекстЗапроса>)
@Назначение:
Выполнить запрос.
Возвращает: 1 - если запрос выполнен, 0 - иначе.
@Параметры:
<ТекстЗапроса> - строка с текстом запроса на языке генерации запросов.
Подробнее см. в документации, глава 'Работа с Запросами'"
    },
    {"Item","AST","Группировка","Group",
"Группировка(<?>,)",
"Group(<?>,)",
"@Синтаксис:
Группировка(<Группировка>,<Направление>)
@Назначение:
Получить следующее значение выборки Запроса
Возвращает: 1 - если получено следующее значение выборки запроса, 0 - иначе.
@Параметры:
<Группировка> - выражение, содержащее номер или имя группировки.
<Направление> -  необязательный параметр. Число: 1 - выборка значений группировки по возрастанию; -1 (минус единица) - выборка значений группировки по убыванию. Значение по умолчанию: 1."
    },
    {"Item","AST","ЭтоГруппа","IsItAGroup",
"ЭтоГруппа(<?>)",
"IsItAGroup(<?>)",
"@Синтаксис:
ЭтоГруппа(<ИмяГруппировки>)
@Назначение:
Возвращает флаг принадлежности группе справочника: 1 - если текущая строка выборки соответствует группе справочника, 0 - иначе.
@Параметры:
<ИмяГруппировки> - выражение, содержащее имя группировки текста запроса."
    },
    {"Item","AST","НачалоПериода","BeginOfPeriod",
"НачалоПериода()",
"BeginOfPeriod()",
"@Синтаксис:
НачалоПериода()
@Назначение:
Возвращает дату начала периода формирования запроса.  Если в тексте запроса указана одна из предопределенных группировок типа период (''Год'', ''Месяц'', ''День'' и т.д.), то при обработке этой и вложенных в нее группировок метод будет возвращать начало периодов текущих значений этих группировок."
    },
    {"Item","AST","КонецПериода","EndOfPeriod",
"КонецПериода()",
"EndOfPeriod()",
"@Синтаксис:
КонецПериода()
@Назначение:
Возвращает дату конца периода формирования запроса.  Если в тексте запроса указана одна из предопределенных группировок типа период (''Год'', ''Месяц'', ''День'' и т.д.), то при обработке этой и вложенных в нее группировок метод будет возвращать конец периодов текущих значений этих группировок."
    },
    {"Item","AST","Получить","Get",
"Получить(<?>)",
"Get(<?>)",
"@Синтаксис:
Получить(<ЗначениеГруппировки1>,...,<ЗначениеГруппировкиN>)
@Назначение:
Прямое позиционирование на запись в выборке по конкретным значениям группировок.
Возвращает: 1 - если запись найдена, 0 - иначе.
@Параметры:
<ЗначениеГруппировкиN> - значение параметра N-ой группировки запроса.
@Замечание:
Опущенные при вызове последние значения группировок должны заменяться запятыми. Если при вызове метода опущены все параметры, то выборка позиционируется на самое начало временного набора данных, на строку итогов. После выполнения метода Получить может осуществляться дальнейший обход выборки вызовами метода Группировка."
    },
    {"Item","AST","вНачалоВыборки","toSelectionBegin",
"вНачалоВыборки()",
"toSelectionBegin()",
"@Синтаксис:
вНачалоВыборки()
@Назначение: 
Осуществляет прямое позиционирование на начало выборки.
Возвращает: 1 - если операция выполнена успешно, 0 - если нет.  Метод следует использовать, если необходимо перейти на верхний уровень группировок, чтобы затем организовать проход группировки первого уровня (в любом направлении)."
    },
    {"Item","AST","ИспользоватьГрафуОтбора","UseSelectionColumn",
"ИспользоватьГрафуОтбора(<?>)",
"UseSelectionColumn(<?>)",
"@Синтаксис:
ИспользоватьГрафуОтбора(<ГрафаОтбора>)
@Назначение:
Установка использования графы отбора. Возвращает: идентификатор использованной реально графы отбора, если метод вызывается после выполнения запроса.
@Параметры:
<ГрафаОтбора> - Строковое выражение. 
Если не указан - автоматический выбор графы отбора.
Идентификатор графы отбора - использование определенной графы отбора.
* - автоматический выбор графы отбора.
Пустая строка - не использовать графу отбора."
    },
    {"Item","AST","Выгрузить","Unload",
"Выгрузить(<?>,,)",
"Unload(<?>,,)",
"@Синтаксис:
Выгрузить(<ТаблЗнач>,<Флаг>,<Итоги>)
@Назначение:
Выгружает результаты запроса в таблицу значений. Возвращает число: 1 - если выгрузка произошла успешно, иначе - 0.
@Параметры:
<ТаблЗнач> - Таблица значений, куда выгружаются результаты запроса.
<Флаг> - необязательный параметр. Число или строка:
0 - значения групп и функций (по умолчанию);
1 - значения групп и функций, дополнительных переменных;
2 - значения упорядочиваний групп и функций;
3 - значения упорядочиваний групп и функций, дополнительных переменных;
Строка - '' Товар(1), Товар(2), Товар, Склад, Приход, Расход'', где Товар(1) - значение первого упорядочивания группировки ''Товар''.
<Итоги> - необязательный параметр. Число:
0 - итоги по группировкам не выводить;
1 - итоги по группировкам выводить сверху (по умолчанию);
2 - итоги по группировкам выводить снизу;
3 - итоги по группировкам выводить сверху и снизу."
    },
    {"Item","AST","ЗначениеУпорядочивания","OrderValue",
"ЗначениеУпорядочивания(<?>,)",
"OrderValue(<?>,)",
"@Синтаксис:
ЗначениеУпорядочивания(<Группировка>,<Упорядочив>)
@Назначение:
Возвращает значение заданного поля упорядочивания текущей группы.
@Параметры:
<Группировка> - выражение, содержащее номер или имя группировки (номер работает быстрее).;
<Упорядочив> -  необязательный параметр. Порядковый номер параметра упорядочивания указанной группировки. Значение по умолчанию: 1."
    },
    {"Item","AST","ПолучитьАтрибут","GetAttrib",
"ПолучитьАтрибут(<?>)",
"GetAttrib(<?>)",
"@Синтаксис:
ПолучитьАтрибут(<ИмяАтрибута>)
@Назначение:
Возвращает значение атрибута запроса по его имени.
@Параметры:
<ИмяАтрибута> - строковое выражение, содержащее значение любого атрибута запроса."
    },
    },
 {"Folder","AST","Язык Запросов","",
    {"Item","AST","Внутренние переменные запроса","",
"<?> = ;",
"<?> = ;",
"@Синтаксис:
ИмяПеременной = ОписаниеПеременной[, ОписаниеПеременной...];
@Назначение:
Объявление внутренней переменной.
@Параметры: 
ИмяПеременной - имя объявляемой внутренней переменной;
ОписаниеПеременной - указывает на конкретный реквизит документа, справочника, измерение или ресурс регистра.
@Замечание:
Можно указывать несколько вариантов ОписанияПеременной через запятую.
@Дополнительные атрибуты внутренних переменных типа документ:
ТекущийДокумент (CurDocument)- ссылка на текущий документ;
НомерДок (DocNum) - номер документа;
ДатаДок (DocDate) - дата документа;
НомерСтроки (LineNum)- номер строки документа;
ВремяДок (DocTime)- время документа.
@Дополнительные атрибуты внутренних переменных типа справочник:
ТекущийЭлемент (CurItem) - ссылка на элемент справочника;
Код (Code) -  код;
Наименование (Description) - наименование.
Подробнее см. в документации, глава ''Язык Генерации Запросов''"
    },
    {"Item","AST","Период С По","Period From Till",
"Период С <?> По ;",
"Period From <?> Till ;",
"@Синтаксис:
[Период] С <Дата1>|<ВнешняяПеременная1> [По <Дата2>|Внешняя переменная2];
Англоязычный синоним:
[Period] From <Дата>|<ВнешняяПеременная>[Till <Дата>|<ВнешняяПеременная>];
@Назначение:
Установить интервал дат формирования Запроса.
@Параметры: 
<Дата1>,<Дата2> -  значение типа ''Дата'', ''Документ'' или позиция документа.
<ВнешняяПеременная1>,<ВнешняяПеременная2> - внешняя переменная, задающая значение типа ''Дата'', ''Документ'' или позиция документа.
@Замечание:
Если вторая часть оператора после ключевого слова По пропущена или значение второго параметра команды равно нулю, то интервал времени применяется от начального момента времени до ТА (или по РабочуюДату, если не установлена компонента ''Оперативный учет''). Если в описании запроса команда Период С опущена, то интервал дат формирования запроса устанавливается в точку актуальности итогов. Для журнала расчетов конструкция Период С ... По... означает выборку в разрезе расчетных периодов журнала, а конструкция  С ... По...  означает выборку в разрезе времени действия записей журнала расчетов, определяемых реквизитами журнала ''ДатаНачала'' и ''ДатаОкончания''.
Подробнее см. в документации, глава ''Язык Генерации Запросов''"
    },
    {"Item","AST","С По","From Till",
"С <?> По ;",
"From <?> Till ;",
"@Синтаксис:
С <Дата1>|<ВнешняяПеременная1> [По <Дата2>|Внешняя переменная2];
Англоязычный синоним:
From <Дата>|<ВнешняяПеременная>[Till <Дата>|<ВнешняяПеременная>];
@Назначение:
Установить интервал дат формирования Запроса.
@Параметры: 
<Дата1>,<Дата2> -  значение типа ''Дата'', ''Документ'' или позиция документа.
<ВнешняяПеременная1>,<ВнешняяПеременная2> - внешняя переменная, задающая значение типа ''Дата'', ''Документ'' или позиция документа.
@Замечание:
Для журнала расчетов конструкция С ... По... означает выборку в разрезе времени действия записей журнала расчетов, определяемых реквизитами журнала ''ДатаНачала'' и '''ДатаОкончания''.
Подробнее см. в документации, глава ''Язык Генерации Запросов''"
    },
    {"Item","AST","Обрабатывать","Process",
"Обрабатывать<?>;",
"Process<?>;",
"@Синтаксис:
Обрабатывать Все|ПомеченныеНаУдаление|НеПомеченныеНаУдаление;
@Назначение:
Назначает режим обработки документов и справочников в запросе. В операторе указывается, какими документами и элементами справочников должен оперировать запрос: помеченными на удаление, не помеченными на удаление или теми и другими. По умолчанию в запросе обрабатываются как помеченные, так и не помеченные на удаление документы и элементы справочников. Подробнее см. в документации, глава ''Язык Генерации Запросов''"
    },
    {"Item","AST","ОбрабатыватьДокументы","ProcessDocuments",
"ОбрабатыватьДокументы <?>;",
"ProcessDocuments<?>;",
"@Синтаксис:
ОбрабатыватьДокументы Проведенные|Непроведенные|Все;
@Назначение:
Назначает условие обработки документов в запросе.
  Проведенные - только проведенные документы;
  Непроведенные - только непроведенные документы;
  Все - как проведенные, так и непроведенные документы;
Подробнее см. в документации, глава ''Язык Генерации Запросов''"
    },
    {"Item","A","ОбрабатыватьОперации","ProcessOperations",
"ОбрабатыватьОперации<?>;",
"ProcessOperations<?>;",
"@Синтаксис:
ОбрабатыватьОперации Включенные|Выключенные|Все;
@Назначение:
Назначает условие обработки бухгалтерских операций в запросе.
  Включенные - только включенные операции;
  Выключенные - только выключенные операции;
  Все - как включенные, так и выключенные операции;
Подробнее см. в документации, глава ''Язык Генерации Запросов''"
    },
    {"Item","AST","Функция","Function",
"Функция <?> = ();",
"Function <?> = ();",
"@Синтаксис:
Функция <ИмяФункции> = <ТипФункции>(<Параметр>|<УточненныйПараметр>) [Когда(<Условие>)];
Англоязычный синоним:
Function <ИмяФункции> = <ТипФункции>(<Параметр>|<УточненныйПараметр>) [When(<Условие>)];
@Назначение:
Вычислить функцию и включить ее результат в запрос.
@Параметры: 
<ИмяФункции> - имя, присваиваемое функции;
<ТипФункции> - ключевое слово одной из встроенных функций языка;
<Параметр> - имя внутренней переменной, параметр вызова функции;
<УточненныйПараметр> - конкретизация внутренней переменной, параметр вызова функции.
<Условие> - условие вычисления функции (необязательно).
@Замечание:
Типы встроенных функций:
Сумма (Sum) - сумма значений параметра;
Среднее (Avg) - среднее значений параметра;
Минимум (Min) - минимум значений параметра;
Максимум (Max) - максимум значений параметра;
НачОст (BegRest) - начальный остаток значений параметра-ресурса Регистра;
КонОст (EndRest) - конечный остаток значений параметра-ресурса Регистра;
Приход (Debit) - приход значений параметра-ресурса Регистра;
Расход (Credit) - расход значений параметра-ресурса Регистра;
Счётчик (Counter) - количество записей, вошедших в выборку, <Параметр> - не нужен;
СНД, СКД, СНК, СКК (IDB, FDB, ICD, FCD) - сальдо начальное или конечное по дебету или кредиту;
ДО, КО, КорДо, КорКо (TD, TC, CorTD, CorTC) - обороты по дебету или кредиту счета или корсчета;
В функциях: Сумма, Среднее, Максимум, Минимум в качестве аргумента возможно использование арифметического выражения в терминах встроенного языка. 
К параметрам, указывающим на ресурсы Регистров, могут применяться только оговоренные функции.
Подробнее см. в документации, глава ''Язык Генерации Запросов''"
    },
    {"Item","AST","Группировка","Group",
"Группировка <?> Упорядочить по ;",
"Group <?> Order By ;",
"@Синтаксис:
Группировка <ИмяГруппировки>|<ПредопредГруппировка> [Упорядочить по <КонкретизацГруппировки>, ...][Без Упорядочивания][Без Групп][Все [ВошедшиеВЗапрос]];
Англоязычный синоним:
Group <ИмяГруппировки>|<ПредопредГруппировка> [Order By КонкретизацГруппировки, ...][Without Groups][All [IncludedInQuery]];
@Назначение:
Установить порядок выборки информации.
@Параметры: 
<ИмяГруппировки> - имя внутренней переменной, задающей группировку; 
<ПредопредГруппировка> - ключевое слово одной из встроенных группировок;
<КонкретизацГруппировки> - конкретизация переменной <ИмяГруппировки>, задающая порядок групп.
@Ключевые слова:
Упорядочить по - параметры, следующие за данным ключевым словом, определяют упорядочивание строк в группировке. 
Без Упорядочивания - необязательное добавочное ключевое слово, которое преследует цель уменьшения времени формирования запроса, при условии, что ни упорядочивание, ни значения упорядочивания при использовании данного запроса не нужны.
Без Групп -  группы справочника не выводятся в запрос (для группировки по справочнику);
Все - в запрос выводятся все значения, и нулевые тоже (используется для группировок по справочникам и временных группировок).
ВошедшиеВЗапрос - уточняет предыдущее ключевое слово 'Все'. Использование данного слова подразумевает, что в каждую строку запроса будут включены значения данных (в том числе нулевые), для которых есть ненулевое значение хотя бы в одной строке запроса.
@Замечание:
Предопределенные группировки:
  Документ (Document) - позволяет детализацию до документа;
  СтрокаДокумента (DocumentLine) - позволяет детализацию до строки документа;
  ПериодЖурнала (JournalPeriod) - группировка по времени ввода записи журнала расчетов или по времени ее действия.
Группировки по дате:
  День (Day);
  Неделя (Week);
  Месяц (Month);
  Квартал (Quarter);
  Год (Year).
Подробнее см. в документации, глава ''Язык Генерации Запросов''"
    },
    {"Item","AST","Без итогов","Without Totals",
"Без итогов;",
"Without Totals;",
"@Синтаксис:
Без итогов;
@Назначение:
Не накапливать итоги по группировкам. Цель данного оператора - увеличение скорости выполнения запроса, при условии, что итоговые записи при использовании запроса не нужны. В случае применения данного оператора в тексте запроса, при обходе результатов запроса применяется только один цикл обхода, используя метод объекта ''Запрос'' Группировка() без параметра.
@Замечание:
Если в тексте запроса используется группировка по многоуровневому справочнику и не указано ''Без Групп'', то итоги по группам справочника будут накапливаться. Другими словами, если в запросе не нужны итоги по группам справочника, то в тексте запроса кроме использования оператора ''Без Итогов'' дополнительно следует в операторах ''Группировка ...'' использовать ключевое слово ''Без Групп''.
Подробнее см. в документации, глава ''Язык Генерации Запросов''"
    },
    {"Item","AST","Условие","Condition",
"Условие (<?>);",
"Condition (<?>);",
"@Синтаксис:
Условие(<ЛогическоеВыражение>);
@Назначение:
Назначить условие включения информации в запрос.
@Параметры: 
<ЛогическоеВыражение> - логическое выражение языка.
@Замечание:
В логическом выражении могут участвовать внутренние и внешние переменные.
Кроме обычных логических операторов (>, <, =, >=, <=, <>, И, ИЛИ, НЕ) в операторе ''Условие ...'' языка запросов можно использовать дополнительный оператор:
@логический оператор принадлежности. 
@Синтаксис:
 В
@Англоязычный синоним:
 In
@Описание:
Оператор языка запросов ''Условие (А в Б);'' говорит о том, что условие истинно, когда значение А является подмножеством значения Б. Следует особо отметить, что если значение Б пустое (объект не выбран), то условие является истинным, в отличие от оператора ''='' (равно). Если на принадлежность проверяется значение типа элемент справочника, то проверка выполняется с учетом его возможного вхождения в группу справочника. Аналогично, проверка на принадлежность субсчета осуществляется с учетом его возможного вхождения в счет-группу.
В качестве включающего подмножества логического оператора принадлежности (второй параметр после слова ''в'') может выступать как простое значение, так и список значений. В этом случае проверка выполняется с учетом вышеотмеченных особенностей для каждой строки списка значений.
Подробнее см. в документации, глава ''Язык Генерации Запросов''"
    },
    },
    },
 {"Folder","AST","Текст","Text",
    {"Item","AST","КоличествоСтрок","LinesCnt",
"КоличествоСтрок()",
"LinesCnt()",
"@Синтаксис:
КоличествоСтрок()
@Назначение:
Возвращает число строк в тексте."
    },
    {"Item","AST","ПолучитьСтроку","GetLine",
"ПолучитьСтроку(<?>)",
"GetLine(<?>)",
"@Синтаксис:
ПолучитьСтроку(<НомерСтроки>)
@Назначение:
Возвращает строку текста с заданным номером.
@Параметры: 
<НомерСтроки> - номер строки."
    },
    {"Item","AST","Открыть","Open",
"Открыть(<?>);",
"Open(<?>);",
"@Синтаксис:
Открыть(<ИмяФайла>)
@Назначение:
Открыть текстовый файл.
@Параметры: 
<ИмяФайла> - строка с именем файла."
    },
    {"Item","AST","Шаблон","Template",
"Шаблон(<?>)",
"Template(<?>)",
"@Синтаксис:
Шаблон(<Флаг>)
@Назначение:
Установить флаг добавления строк по шаблону.
Возвращает:
Текущее числовое значение флага добавления строк по шаблону (на момент до исполнения метода).
@Параметры: 
<Флаг> -: 1 - установить флаг добавления строк по шаблону, 0 - отменить.
Подробнее см. в документации, глава 'Работа с Текстом'"
    },
    {"Item","AST","ФиксШаблон","FixTemplate",
"ФиксШаблон(<?>)",
"FixTemplate(<?>)",
"@Синтаксис:
ФиксШаблон(<Флаг>)
@Назначение:
Установить флаг добавления строк по фиксированному шаблону.
Возвращает:
Текущее числовое значение флага добавления строк по фиксированному шаблону (на момент до исполнения метода).
@Параметры: 
<Флаг> -: 1 - установить флаг добавления строк по фиксированному шаблону, 0 - отменить.
Подробнее см. в документации, глава 'Работа с Текстом'"
    },
    {"Item","AST","ВставитьСтроку","InsertLine",
"ВставитьСтроку(<?>,);",
"InsertLine(<?>,);",
"@Синтаксис:
ВставитьСтроку(<НомерСтроки>,<Строка>)
@Назначение:
Вставить строку с указанным номером.
@Параметры: 
<НомерСтроки> - номер вставляемой строки;
<Строка> - вставляемая строка.
Подробнее см. в документации, глава 'Работа с Текстом'"
    },
    {"Item","AST","ДобавитьСтроку","AddLine",
"ДобавитьСтроку(<?>);",
"AddLine(<?>);",
"@Синтаксис:
ДобавитьСтроку(<Строка>)
@Назначение:
Добавить строку в конец текста.
@Параметры: 
<Строка> - добавляемая строка."
    },
    {"Item","AST","ЗаменитьСтроку","ReplaceLine",
"ЗаменитьСтроку(<?>,);",
"ReplaceLine(<?>,);",
"@Синтаксис:
ЗаменитьСтроку(<НомерСтроки>,<Строка>)
@Назначение:
Заменить строку с указанным номером.
@Параметры: 
<НомерСтроки> - номер заменяемой строки;
<Строка> - заменяющая строка.
Подробнее см. в документации, глава 'Работа с Текстом'"
    },
    {"Item","AST","УдалитьСтроку","DeleteLine",
"УдалитьСтроку(<?>);",
"DeleteLine(<?>);",
"@Синтаксис:
УдалитьСтроку(<НомерСтроки>)
@Назначение:
Удалить строку с указанным номером.
@Параметры: 
<НомерСтроки> - номер удаляемой строки."
    },
    {"Item","AST","ТолькоПросмотр","ReadOnly",
"ТолькоПросмотр(<?>)",
"ReadOnly(<?>)",
"@Синтаксис:
ТолькоПросмотр(<Флаг>)
@Назначение:
Установить флаг возможности редактирования текста.
Возвращает:
Текущее числовое значение режима редактирования текста (на момент до исполнения метода).
@Параметры: 
<Флаг> -: 1 - только просмотр текста, 0 - можно редактировать.
Подробнее см. в документации, глава 'Работа с Текстом'"
    },
    {"Item","AST","Показать","Show",
"Показать(<?>,);",
"Show(<?>,);",
"@Синтаксис:
Показать(<Заголовок>,<ИмяФайла>)
@Назначение:
Открыть окно редактирования текста.
@Параметры: 
<Заголовок> - заголовок окна редактирования;
<ИмяФайла> - строка с именем файла.
Подробнее см. в документации, глава 'Работа с Текстом'"
    },
    {"Item","AST","Очистить","Clear",
"Очистить();",
"Clear();",
"@Синтаксис:
Очистить()
@Назначение:
Очищает содержимое текстового документа. Его использование позволяет заново заполнить содержимое текстового документа."
    },
    {"Item","AST","КодоваяСтраница","CodePage",
"КодоваяСтраница(<?>)",
"CodePage(<?>)",
"@Синтаксис:
КодоваяСтраница(<Режим>)
@Назначение:
Установить режим кодировки текста.
Возвращает: 
текущее числовое значение режима кодировки (на момент до исполнения метода).
@Параметры: 
<Режим> : 0 - windows-кодировка, 1 - DOS-кодировка."
    },
    {"Item","AST","Записать","Write",
"Записать(<?>);",
"Write(<?>);",
"@Синтаксис:
Записать(<ИмяФайла>)
@Назначение:
Записать текст в файл с указанным именем.
@Параметры: 
<ИмяФайла> - строка с именем файла."
    },
    },
 {"Folder","AST","Картинка","Picture",
    {"Item","AST","Загрузить","Load",
"Загрузить(<?>);",
"Load(<?>);",
"@Синтаксис:
Загрузить(<ИмяФайла>)
@Назначение:
Загрузить картинку из файла.
@Параметры:
<ИмяФайла> - строковое выражение, которое может задавать: - идентификатор картинки в библиотеке картинок конфигурации или имя файла картинки.
Файл может быть следующих форматов:
 .wmf
 .emf
 .ico
 .bmp
 .dib
 .rle"
    },
    {"Item","AST","Сохранить","Save",
"Сохранить(<?>);",
"Save(<?>);",
"@Синтаксис:
Сохранить(<ИмяФайла>)
@Назначение:
Сохранить картинку в файле в формате загрузки.
@Параметры:
<ИмяФайла> - строка с именем файла."
    },
    {"Item","AST","РежимРисования","SetDrawMode",
"РежимРисования(<?>);",
"SetDrawMode(<?>);",
"@Синтаксис:
РежимРисования(<Режим>)
@Назначение:
Установить режим рисования картинки.
Возвращает:
Текущее числовое значение режима рисования картинки (на момент до исполнения метода).
@Параметры:
<Режим> -:
  1 - растягивать;
  2 - рисовать по центру с оригинальным размером; 
  3 - рисовать, сохраняя оригинальное соотношение размеров.
Подробнее см. в документации, глава ''Работа с Картинками''"
    },
    {"Item","AST","УстановитьКартинку","SetPicture",
"УстановитьКартинку(<?>);",
"SetPicture(<?>);",
"@Синтаксис:
УстановитьКартинку(<Объект>)
@Назначение:
Переустановить объект типа Картинка.
@Параметры:
<Объект> - Выражение, имеющее значение типа объекта картинки встроенного языка, или OLE-объект типа IPicture.
Подробнее см. в документации, глава ''Работа с Картинками''"
    },
    },
 {"Folder","AST","Диаграмма","Chart",
 {"Folder","AST","Атрибуты","",
    {"Item","AST","Заголовок","TitleText",
"Заголовок",
"TitleText",
"@Синтаксис:
Заголовок
@Назначение:
Атрибут содержит текст заголовка диаграммы. По умолчанию имеет значение ''1С.V7.Диаграмма''."
    },
    },
 {"Folder","AST","Методы","",
    {"Item","AST","КоличествоСерий","SeriesCount",
"КоличествоСерий(<?>);",
"SeriesCount(<?>);",
"@Синтаксис:
КоличествоСерий(<количество>)
@Назначение:
Явно устанавливает количество серий диаграммы. Возвращает текущее значение количества серий (до исполнения метода).
@Параметры:
<количество> - необязательный параметр. Количество серий диаграммы."
    },
    {"Item","AST","КоличествоТочек","PointsCount",
"КоличествоТочек(<?>);",
"PointsCount(<?>);",
"@Синтаксис:
КоличествоТочек(<количество>)
@Назначение:
Явно устанавливает количество точек диаграммы.  Возвращает текущее значение количества точек (до исполнения метода).
@Параметры:
<количество> - необязательный параметр. Количество точек диаграммы."
    },
    {"Item","AST","УстановитьИмяСерии","SetSeriesLabel",
"УстановитьИмяСерии(<?>,);",
"SetSeriesLabel(<?>,);",
"@Синтаксис:
УстановитьИмяСерии(<номер серии>,<метка>)
@Назначение:
Устанавливает метку <метка> для серии <номер серии>.
@Параметры:
<номер серии> - номер серии, для которой устанавливается метка;
<метка> - строка, используемая для обозначения серии в легенде и подписях к координатным осям."
    },
    {"Item","AST","УстановитьИмяТочки","SetPointLabel",
"УстановитьИмяТочки(<?>,);",
"SetPointLabel(<?>,);",
"@Синтаксис:
УстановитьИмяТочки(<номер точки>,<метка>)
@Назначение:
Устанавливает метку <метка> для точки <номер точки>.
@Параметры:
<номер точки> - номер точки, для которой устанавливается метка;
<метка> - строка, используемая для обозначения точки в подписях к координатным осям."
    },
    {"Item","AST","ЦветСерии","SetSeriesColor",
"ЦветСерии(<?>,,,);",
"SetSeriesColor(<?>,,,);",
"@Синтаксис:
ЦветСерии(<номер серии>,<r>,<g>,<b>)
@Назначение:
Устанавливает RGB цвет для серии <номер серии>. По умолчанию первые 54 серии имеют уникальный цвет.
@Параметры:
<номер серии> - номер серии, для которой устанавливается цвет;
<R> - число, задающее красную компоненту цвета;
<G> - число, задающее зеленую компоненту цвета;
<B> - число, задающее синюю компоненту цвета."
    },
    {"Item","AST","АвтоУстановкаИменСерий","AutoSeriesLabels",
"АвтоУстановкаИменСерий(<?>);",
"AutoSeriesLabels(<?>);",
"@Синтаксис:
АвтоУстановкаИменСерий(<флаг>)
@Назначение:
Устанавливает флаг автоматической генерации меток серий. В случае, если автогенерация имен разрешена, сериям диаграммы будут автоматически присваиваться имена Серия1, Серия2, ..., СерияN.
@Параметры:
<флаг> - число: 1 - разрешить; 0 - запретить автогенерацию меток."
    },
    {"Item","AST","АвтоУстановкаИменТочек","AutoPointLabels",
"АвтоУстановкаИменТочек(<?>);",
"AutoPointLabels(<?>);",
"@Синтаксис:
АвтоУстановкаИменТочек(<флаг>)
@Назначение:
Устанавливает флаг автоматической генерации меток точек. В случае, если автогенерация имен разрешена, точкам диаграммы будут автоматически присваиваться имена 1, 2, ..., N.
@Параметры:
<флаг> - число: 1 - разрешить; 0 - запретить автогенерацию меток."
    },
    {"Item","AST","УстановитьЗначение","SetValue",
"УстановитьЗначение(<?>,,,);",
"SetValue(<?>,,,);",
"@Синтаксис:
УстановитьЗначение(<номер точки>,<номер серии>,<значение>,<расшифровка>)
@Назначение:
Установка значения в заданной точке и серии.
@Параметры:
<номер точки> - неотрицательное число, номер точки, в которой устанавливается значение серии (чаще всего Х - координата);
<номер серии> - неотрицательное число, номер серии, для которой устанавливается значение (чаще всего Y - координата);
<значение> - число, устанавливаемое значение.
<расшифровка> - необязательный параметр. Значение любого типа, используемое для расшифровки диаграммы при помощи предопределенной процедуры ОбработкаЯчейкиТаблицы."
    },
    {"Item","AST","Обновление","RedrawFlag",
"Обновление(<?>);",
"RedrawFlag(<?>);",
"@Синтаксис:
Обновление(<флаг>)
@Назначение:
Установка режима обновления диаграммы. Запрет перерисовки диаграммы рекомендуется на время наполнения данными, в целях ускорения работы системы. По умолчанию перерисовка разрешена.
@Параметры:
<флаг> - числовое значение 1 - разрешающий. 0 - запрещающий перерисовку диаграммы"
    },
    {"Item","AST","Очистить","Clear",
"Очистить();",
"Clear();",
"@Синтаксис:
Очистить()
@Назначение:
очищает диаграмму, т.е. удаляет все ранее установленные значения; количество серий и точек устанавливает нулевым; стирает все ранее установленные имена."
    },
    },
    },
 {"Folder","AST","Файловая система","Files",
    {"Item","AST","ВыбратьФайл","SelectFile",
"ВыбратьФайл(<?>,,,,)",
"SelectFile(<?>,,,,)",
"@Синтаксис:
ВыбратьФайл(<ТипДиалога>,<ИмяФайла>,<ИмяНачКаталога>,<ЗаголовокОкна>,<Фильтр>,<Расширение>,<Таймаут>)
@Назначение:
Открывает окно диалога выбора/сохранения файла.
Возвращает: 0 - если в окне диалога нажата кнопка 'Отмена', 1 - если нажата кнопка 'ОК'.
@Параметры:
<ТипДиалога> -: 0 - диалог типа <открыть>, 1 - диалог типа <сохранить>;
<ИмяФайла> - переменная, содержащая на входе строку с именем файла, а на выходе - имя выбранного файла;
<ИмяНачКаталога> - переменная, содержащая на входе строку с  начальным каталогом, а на выходе - имя выбранного каталога;
<ЗаголовокОкна> - строка с заголовком окна;
<Фильтр> - строка с фильтром отбора файлов (например: 'Все файлы (*.*) |*.*');
<Расширение> - строка с расширением файла по умолчанию;
<Таймаут> - время ожидания отклика пользователя в секундах (необязателен).
Подробнее см. в документации, глава 'Работа с Файлами'"
    },
    {"Item","AST","ВыбратьФайлКартинки","SelectPictFile",
"ВыбратьФайлКартинки(<?>,,,,)",
"SelectPictFile(<?>,,,,)",
"@Синтаксис:
ВыбратьФайлКартинки(<ТипДиалога>,<ИмяФайла>,<ИмяНачКаталога>,<ЗаголовокОкна>,<Расширение>,<Таймаут>)
@Назначение:
Открывает окно диалога выбора/сохранения файла картинки.
Возвращает: 0 - если в окне диалога нажата кнопка 'Отмена', 1 - если нажата кнопка 'ОК'.
@Параметры:
<ТипДиалога> -: 0 - диалог типа <открыть>, 1 - диалог типа <сохранить>;
<ИмяФайла> - переменная, содержащая на входе строку с именем файла, а на выходе - имя выбранного файла;
<ИмяНачКаталога> - переменная, содержащая на входе строку с  начальным каталогом, а на выходе - имя выбранного каталога;
<ЗаголовокОкна> - строка с заголовком окна;
<Расширение> - строка с расширением файла по умолчанию;
<Таймаут> - время ожидания отклика пользователя в секундах (необязателен).
Подробнее см. в документации, глава 'Работа с Файлами'"
    },
    {"Item","AST","ВыбратьКаталог","SelectDirectory",
"ВыбратьКаталог(<?>,,)",
"SelectDirectory(<?>,,)",
"@Синтаксис:
ВыбратьКаталог(<ИмяКаталога>,<ЗаголовокОкна>,<Таймаут>)
@Назначение:
Открывает окно диалога выбора каталога.
Возвращает: 0 - если в окне диалога нажата кнопка 'Отмена'; 1 - если в окне диалога нажата кнопка 'ОК', при этом в переменную <ИмяНачКаталога> возвращается имя выбранного каталога; -1 (минус единица) - закончилось время <Таймаут> ожидания отклика пользователя.
@Параметры:
<ИмяКаталога> - переменная, содержащая на входе строку с  начальным каталогом, на выходе имя выбранного каталога;
<ЗаголовокОкна> - строка с заголовком окна;
<Таймаут> - время ожидания отклик пользователя в секундах (необязателен).
Подробнее см. в документации, глава 'Работа с Файлами'"
    },
    {"Item","AST","СуществуетФайл","ExistFile",
"СуществуетФайл(<?>)",
"ExistFile(<?>)",
"@Синтаксис:
СуществуетФайл(<ИмяФайла>)
@Назначение:
Проверяет существование файла..
Возвращает: 1 - файл существует; 0 - не существует.
@Параметры:
<ИмяФайла> - Строковое выражение с именем файла.
Подробнее см. в документации, глава 'Работа с Файлами'"
    },
    {"Item","AST","КопироватьФайл","FileCopy",
"КопироватьФайл(<?>,,);",
"FileCopy(<?>,,);",
"@Синтаксис:
КопироватьФайл(<ИмяФайлаИсточника>,<ИмяФайлаПриемника>,<ФлагПерезаписи>)
@Назначение:
Копирует файл.
@Параметры:
<ИмяФайлаИсточника> - строка с именем файла источника;
<ИмяФайлаПриемника> - строка с именем файла приемника;
<ФлагПерезаписи> -:
  0 - существующий файл приемника перезаписать;
  1 - существующий файл приемника не перезаписывать."
    },
    {"Item","AST","УдалитьФайл","DeleteFile",
"УдалитьФайл(<?>)",
"DeleteFile(<?>)",
"@Синтаксис:
УдалитьФайл(<ИмяФайла>)
@Назначение:
Удаляет файл.
@Параметры:
<ИмяФайла> - строка с именем удаляемого файла."
    },
    {"Item","AST","ПереименоватьФайл","MoveFile",
"ПереименоватьФайл(<?>,,);",
"MoveFile(<?>,,);",
"@Синтаксис:
ПереименоватьФайл(<ИмяФайлаИсточника>,<ИмяФайлаПриемника>,<ФлагПерезаписи>)
@Назначение:
Переименовать/переместить файл.
@Параметры:
<ИмяФайлаИсточника> - строка с именем файла источника;
<ИмяФайлаПриемника> - строка с новым именем файла;
<ФлагПерезаписи> -:
  0 - запрещает перемещение файла между дисками и существующий файл приемника не перезаписывается;
  1 - разрешает перемещение файла между дисками (только для файлов) и существующий файл приемника перезаписывается."
    },
    {"Item","AST","НайтиПервыйФайл","FindFirstFile",
"НайтиПервыйФайл(<?>)",
"FindFirstFile(<?>)",
"@Синтаксис:
НайтиПервыйФайл(<МаскаИмени>)
@Назначение:
Открывает выборку файлов по заданной маске и находит первый файл.
Возвращает строку с именем найденного файла.
@Параметры:
<МаскаИмени> - строка с маской имен файлов."
    },
    {"Item","AST","НайтиСледующийФайл","FindNextFile",
"НайтиСледующийФайл()",
"FindNextFile()",
"@Синтаксис:
НайтиСледующийФайл()
@Назначение:
Находит следующий файл по открытой выборке файлов.
Возвращает строку с именем найденного файла."
    },
    {"Item","AST","АтрибутыФайла","GetFileAttr",
"АтрибутыФайла(<?>,,,,,,);",
"GetFileAttr(<?>,,,,,,);",
"@Синтаксис:
АтрибутыФайла(<ИмяФайла>,<РазмерФайла>,<АтрибутыФайла>,<ВремяСоздания>,<ВремяПоследнегоДоступа>,<ВремяПоследнейЗаписи>,<РасширенноеИмяФайла>)
@Назначение:
Возвращает атрибуты файла (в параметрах).
@Параметры:
<ИмяФайла> - строка с именем файла;
<РазмерФайла> - переменная, принимающая размер файла в байтах;
<АтрибутыФайла> - переменная, принимающая атрибуты файла;
Возвращаемое строковое значение длиной 9 символов, в котором закодированы атрибуты файла. Символы могут принимать значения ''0'' или ''1'':
первый символ: если ''1'' - файл только для чтения;
второй символ: если ''1'' - скрытый файл;
третий символ: если ''1'' - системный файл;
четвертый символ: если ''1'' - каталог;
пятый символ: если ''1'' - архивный файл;
шестой символ: если ''1'' - обычный файл (все другие атрибуты не установлены);
седьмой символ: если ''1'' - временный файл;
восьмой символ: если ''1'' - файл, сжатый каким-либо архиватором;
девятый символ: если ''1'' - нет доступа к файлу.
<ВремяСоздания> - переменная, принимающая строку с датой и временем создания файла;
<ВремяПоследнегоДоступа> - переменная, принимающая строку с датой и временем последнего доступа к файлу;
<ВремяПоследнейЗаписи> - переменная, принимающая строку с датой и временем последней записи файла;
<РасширенноеИмяФайла> - переменная, принимающая строку с полным именем файла.

Подробнее см. в книгу ''1С:Предприятие 7.7. Описание встроенного языка. Часть 2'', глава 37 ''Работа с Файлами''."
    },
    {"Item","AST","СоздатьКаталог","CreateDirectory",
"СоздатьКаталог(<?>);",
"CreateDirectory(<?>);",
"@Синтаксис:
СоздатьКаталог(<ИмяФайла>)
@Назначение:
Создать новый каталог файлов.
@Параметры:
<ИмяФайла> - строка с именем создаваемого каталога."
    },
    {"Item","AST","УдалитьКаталог","RemoveDirectory",
"УдалитьКаталог(<?>);",
"RemoveDirectory(<?>);",
"@Синтаксис:
УдалитьКаталог(<ИмяФайла>)
@Назначение:
Удаляет каталог файлов.
@Параметры:
<ИмяФайла> - строка с именем удаляемого каталога файлов."
    },
    {"Item","AST","УстТекКаталог","SetCurrentDirectory",
"УстТекКаталог(<?>);",
"SetCurrentDirectory(<?>);",
"@Синтаксис:
УстТекКаталог(<ИмяФайла>)
@Назначение:
Устанавливает текущий каталог файлов.
@Параметры:
<ИмяФайла> - строка с именем текущего каталога файлов."
    },
    {"Item","AST","ТекКаталог","GetCurrentDirectory",
"ТекКаталог()",
"GetCurrentDirectory()",
"@Синтаксис:
ТекКаталог()
@Назначение:
Возвращает строку с именем текущего каталога файлов."
    },
    {"Item","AST","WindowsКаталог","GetWindowsDirectory",
"WindowsКаталог()",
"GetWindowsDirectory()",
"@Синтаксис:
WindowsКаталог()
@Назначение:
Возвращает строку с именем Windows директории."
    },
    {"Item","AST","СвободноеМестоНаДиске","GetDiskFreeSpace",
"СвободноеМестоНаДиске(<?>)",
"GetDiskFreeSpace(<?>)",
"@Синтаксис:
СвободноеМестоНаДиске(<ИмяДиска>)
@Назначение:
Возвращает размер свободного дискового пространства в байтах.
@Параметры:
<ИмяДиска> - строка с именем диска (например, 'С:')."
    },
    },
 {"Folder","AST","XBase","XBase",
 {"Folder","AST","Атрибуты","",
    {"Item","AST","<Поле>","<Поле>",
"<Поле>",
"<Поле>",
"@Синтаксис:
<Поле>
@Назначение:
Предоставляет доступ к полю записи с именем <Поле>. Имя поля должно совпадать с именем поля базы данных, с которой связан объект."
    },
    {"Item","AST","Ключ","Key",
"Ключ",
"Key",
"@Синтаксис:
Ключ
@Назначение:
Предоставляет доступ к агрегатному типу данных типа ''Ключ''."
    },
    },
 {"Folder","AST","Методы","",
    {"Item","AST","СоздатьФайл","CreateFile",
"СоздатьФайл(<?>,);",
"CreateFile(<?>,);",
"@Синтаксис:
СоздатьФайл(<ПутьКБазе>,<ПутьКИндексу>)
@Назначение:
Создать новый файл DBF формата.
@Параметры:
<ПутьКБазе> - строковое выражение с путем к файлу базы DBF формата
<ПутьКИндексу> - строковое выражение с путем к индексному файлу"
    },
    {"Item","AST","ОткрытьФайл","OpenFile",
"ОткрытьФайл(<?>,,);",
"OpenFile(<?>,,);",
"@Синтаксис:
ОткрытьФайл(<ПутьКБазе>,<ПутьКИндексу>,<ТолькоЧтение>)
@Назначение:
Открыть существующую базу.
@Параметры:
<ПутьКБазе> - строковое выражение с путем к файлу базы DBF формата
<ПутьКИндексу> - строковое выражение с путем к индексному файлу базы формата
<ТолькоЧтение> - необязательный параметр. Число: 1 - файл открывается в режиме только чтение; 0 - файл открывается в режиме полного доступа (при этом файл открывается в эксклюзивном режиме)."
    },
    {"Item","AST","Открыта","IsOpen",
"Открыта()",
"IsOpen()",
"@Синтаксис:
Открыта()
@Назначение:
Возвращает значение флага открытия файла: 1 - база открыта, 0 - не открыта."
    },
    {"Item","AST","ЗакрытьФайл","CloseFile",
"ЗакрытьФайл();",
"CloseFile();",
"@Синтаксис:
ЗакрытьФайл()
@Назначение:
Закрыть ранее открытую или созданную базу."
    },
    {"Item","AST","ОчиститьФайл","Zap",
"ОчиститьФайл();",
"Zap();",
"@Синтаксис:
ОчиститьФайл()
@Назначение:
Очистить все записи в базе."
    },
    {"Item","AST","Сжать","Pack",
"Сжать();",
"Pack();",
"@Синтаксис:
Сжать()
@Назначение:
Сжать базу, убрав удаленные записи."
    },
    {"Item","AST","Переиндексировать","Reindex",
"Переиндексировать();",
"Reindex();",
"@Синтаксис:
Переиндексировать()
@Назначение:
Переиндексировать базу."
    },
    {"Item","AST","ПоказыватьУдаленные","ShowDeleted",
"ПоказыватьУдаленные(<?>)",
"ShowDeleted(<?>)",
"@Синтаксис:
ПоказыватьУдаленные(<Режим>)
@Назначение:
Установить режим показа удаленных записей в базе.
Возвращает:
Текущее числовое значение режима показа удаленных записей в базе (на момент до исполнения метода).
@Параметры:
<Режим> - выражение (1 - показывать удаленные записи, 0 - нет), по умолчанию - 0"
    },
    {"Item","AST","Первая","First",
"Первая()",
"First()",
"@Синтаксис:
Первая()
@Назначение:
Перейти на первую запись.
Возвращает:
1 - если действие выполнено;
0 - если действие не выполнено."
    },
    {"Item","AST","Последняя","Last",
"Последняя()",
"Last()",
"@Синтаксис:
Последняя()
@Назначение:
Перейти на последнюю запись.
Возвращает:
1 - если действие выполнено;
0 - если действие не выполнено."
    },
    {"Item","AST","Следующая","Next",
"Следующая()",
"Next()",
"@Синтаксис:
Следующая()
@Назначение:
Перейти на следующую запись.
Возвращает: 1 - если получена следующая запись; 0 - иначе."
    },
    {"Item","AST","Предыдущая","Prev",
"Предыдущая()",
"Prev()",
"@Синтаксис:
Предыдущая()
@Назначение:
Перейти на предыдущую запись.
Возвращает: 1 - если получена предыдущая запись; 0 - иначе."
    },
    {"Item","AST","НомерЗаписи","RecNo",
"НомерЗаписи()",
"RecNo()",
"@Синтаксис:
НомерЗаписи()
@Назначение:
Возвращает внутренний номер текущей записи."
    },
    {"Item","AST","Перейти","GoTo",
"Перейти(<?>);",
"GoTo(<?>);",
"@Синтаксис:
Перейти(<НомерЗаписи>)
@Назначение:
Перейти на запись по ее  номеру записи.
@Параметры:
<НомерЗаписи> - внутренний номер записи в базе данных"
    },
    {"Item","AST","ВКонце","EOF",
"ВКонце()",
"EOF()",
"@Синтаксис:
ВКонце()
@Назначение:
Возвращает значение флага конца файла (1 - конец файла, 0 - нет)."
    },
    {"Item","AST","ВНачале","BOF",
"ВНачале()",
"BOF()",
"@Синтаксис:
ВНачале()
@Назначение:
Возвращает значение флага начала файла (1 - начало файла, 0 - нет)."
    },
    {"Item","AST","ТекущийИндекс","CurrentIndex",
"ТекущийИндекс()",
"CurrentIndex()",
"@Синтаксис:
ТекущийИндекс(<НазваниеИндекса>)
@Назначение:
Возвращает строку с названием текущего индекса (на момент до выполнения метода).
@Параметры:
<НазваниеИндекса> - выражение с названием индекса."
    },
    {"Item","AST","Найти","Find",
"Найти(<?>,)",
"Find(<?>)",
"@Синтаксис:
Найти(<Ключ>,<Режим>)
@Назначение:
Найти запись по индексу.
Возвращает:
1 - если действие выполнено (запись найдена);
0 - если действие не выполнено.
@Параметры:
<Ключ> - выражение со значением ключа текущего индекса
<Режим> - Режим поиска записей:
0 -  ищет запись на точное соответствие ключу (=); 
1 -  ищет запись на точное соответствие с ключом или большую (>=); 
2 -  ищет запись с большим ключом (>); 
-1 (минус единица) -  ищет запись на точное соответствие с ключом или меньшую(<=); 
-2 (минус два) -  ищет запись с меньшим ключом (<).
Подробнее см. в документации, глава ''Работа с базами данных DBF формата''"
    },
    {"Item","AST","НайтиПоКлючу","FindByKey",
"НайтиПоКлючу(<?>)",
"FindByKey(<?>)",
"@Синтаксис:
НайтиПоКлючу(<Режим>)
@Назначение:
Найти запись по индексу. Перед вызовом метода следует установить значения всех атрибутов агрегатного объекта типа ''Ключ'', которые участвуют в вычислении выражения текущего индекса.
Возвращает:
1 - если действие выполнено (запись найдена);
0 - если действие не выполнено.
@Параметры:
<Режим> - Режим поиска записей:
0 -  ищет запись на точное соответствие ключу (=); 
1 -  ищет запись на точное соответствие с ключом или большую (>=); 
2 -  ищет запись с большим ключом (>); 
-1 (минус единица) -  ищет запись на точное соответствие с ключом или меньшую(<=); 
-2 (минус два) -  ищет запись с меньшим ключом (<).
Подробнее см. в документации, глава ''Работа с базами данных DBF формата''"
    },
    {"Item","AST","ПолучитьЗначениеПоля","GetFieldValue",
"ПолучитьЗначениеПоля(<?>)",
"GetFieldValue(<?>)",
"@Синтаксис:
ПолучитьЗначениеПоля(<НазваниеПоля>)
@Назначение:
Возвращает значение поля.
@Параметры:
<НазваниеПоля> - выражение с названием поля или с номером поля"
    },
    {"Item","AST","УстановитьЗначениеПоля","SetFieldValue",
"УстановитьЗначениеПоля(<?>,);",
"SetFieldValue(<?>,);",
"@Синтаксис:
УстановитьЗначениеПоля(<НазваниеПоля>,<Значение>)
@Назначение:
Установить значение поля текущей записи.
@Параметры:
<НазваниеПоля> - выражение с названием поля или с номером поля,
<Значение> - значение поля"
    },
    {"Item","AST","Добавить","Add",
"Добавить();",
"Add();",
"@Синтаксис:
Добавить()
@Назначение:
Добавить новую пустую запись."
    },
    {"Item","AST","Скопировать","Copy",
"Скопировать();",
"Copy();",
"@Синтаксис:
Скопировать()
@Назначение:
Скопировать текущую запись."
    },
    {"Item","AST","АвтоСохранение","AutoSave",
"АвтоСохранение(<?>);",
"AutoSave(<?>);",
"@Синтаксис:
АвтоСохранение(<Режим>)
@Назначение:
Установить режим автоматического сохранения изменений в базе.
Возвращает:
Текущее числовое значение режима автоматического сохранения изменений в базе (на момент до исполнения метода).
@Параметры:
<Режим> - выражение: 1 - задает режим автоматического сохранения изменений в базе, 0 - снимает (по умолчанию - 0)"
    },
    {"Item","AST","Записать","Save",
"Записать();",
"Save();",
"@Синтаксис:
Записать()
@Назначение:
Записать изменения в базу."
    },
    {"Item","AST","Отменить","Cancel",
"Отменить();",
"Cancel();",
"@Синтаксис:
Отменить()
@Назначение:
Отменить запись изменения в базу."
    },
    {"Item","AST","Удалить","Del",
"Удалить();",
"Del();",
"@Синтаксис:
Удалить()
@Назначение:
Удалить текущую запись."
    },
    {"Item","AST","ЗаписьУдалена","RecDeleted",
"ЗаписьУдалена()",
"RecDeleted()",
"@Синтаксис:
ЗаписьУдалена()
@Назначение:
Возвращает значение флага удаления текущей записи (1 - запись удалена, 0 - нет)."
    },
    {"Item","AST","Восстановить","Recall",
"Восстановить();",
"Recall();",
"@Синтаксис:
Восстановить()
@Назначение:
Восстановить текущую запись."
    },
    {"Item","AST","Очистить","Clear",
"Очистить();",
"Clear();",
"@Синтаксис:
Очистить()
@Назначение:
Очистить текущую запись."
    },
    {"Item","AST","КоличествоЗаписей","RecCount",
"КоличествоЗаписей()",
"RecCount()",
"@Синтаксис:
КоличествоЗаписей()
@Назначение:
Возвращает количество записей в базе."
    },
    {"Item","AST","КоличествоПолей","FieldCount",
"КоличествоПолей()",
"FieldCount()",
"@Синтаксис:
КоличествоПолей()
@Назначение:
Возвращает количество полей в записи."
    },
    {"Item","AST","КоличествоИндексов","IndexCount",
"КоличествоИндексов()",
"IndexCount()",
"@Синтаксис:
КоличествоИндексов()
@Назначение:
Возвращает количество индексов в базе."
    },
    {"Item","AST","ОписаниеПоля","GetFieldInfo",
"ОписаниеПоля(<?>,,,,)",
"GetFieldInfo(<?>,,,,)",
"@Синтаксис:
ОписаниеПоля(<НомерПоля>,<НазваниеПоля>,<Тип>,<Длина>,<Точность>)
@Назначение:
Возвращает в параметрах описание поля с заданным номером.
@Параметры:
<НомерПоля> - номер поля для которого требуется получить описание,
<НазваниеПоля> - идентификатор переменной для названия поля,
<Тип> - идентификатор переменной для типа поля в соответствии с инструкциями CodeBase,
<Длина> - идентификатор переменной для длины поля,
<Точность> - идентификатор переменной для числа знаков после десятичной точки (только для числовых полей).
Подробнее см. в документации, глава ''Работа с базами данных DBF формата''"
    },
    {"Item","AST","ОписаниеИндекса","GetIndexInfo",
"ОписаниеИндекса(<?>,,,,,)",
"GetIndexInfo(<?>,,,,,)",
"@Синтаксис:
ОписаниеИндекса(<НомерИндекса>,<НазваниеИндекса>,<Выражение>,<Уникальность>,<Убывание>,<Фильтр>)
@Назначение:
Возвращает в параметрах описание индекса с заданным номером.
@Параметры:
<НомерИндекса> - номер индекса для которого требуется получить описание,
<НазваниеИндекса> - идентификатор переменной для названия индекса,
<Выражение> - идентификатор переменной для ключа индекса в соответствии с инструкциями CodeBase,
<Уникальность> - идентификатор переменной для флага уникальности индекса (1 - уникальный, 0 - нет),
<Убывание> - идентификатор переменной для флага направления убывания индекса (1 - по убыванию значения ключа, 0 - по возрастанию),
<Фильтр> - идентификатор переменной для фильтра индекса в соответствии с инструкциями CodeBase.
Подробнее см. в документации, глава ''Работа с базами данных DBF формата''"
    },
    {"Item","AST","НомерПоля","FieldNo",
"НомерПоля(<?>)",
"FieldNo(<?>)",
"@Синтаксис:
НомерПоля(<НазваниеПоля>)
@Назначение:
Возвращает номер поля.
@Параметры:
<НазваниеПоля> - выражение с названием поля"
    },
    {"Item","AST","ДобавитьПоле","AddField",
"ДобавитьПоле(<?>,,,);",
"AddField(<?>,,,);",
"@Синтаксис:
ДобавитьПоле(<Название>,<Тип>,<Длина>,<Точность>)
@Назначение:
Добавить поле в структуру базы.
Метод можно использовать только перед созданием новой базы.
@Параметры:
<Название> - строковое выражение, содержащее имя создаваемого поля,
<Тип> - выражение, содержащее тип создаваемого поля,
<Длина> - общая длина создаваемого поля,
<Точность> - число знаков после десятичной точки (только для числовых полей).
Подробнее см. в документации, глава ''Работа с базами данных DBF формата''"
    },
    {"Item","AST","ДобавитьИндекс","AddIndex",
"ДобавитьИндекс(<?>,,,,);",
"AddIndex(<?>,,,,);",
"@Синтаксис:
ДобавитьИндекс(<Название>,<Выражение>,<Уникальность>,<Убывание>,<Фильтр>)
@Назначение:
Добавить индекс в структуру базы.
Метод можно использовать только перед созданием новой базы.
@Параметры:
<Название> - строковое выражение, содержащее имя создаваемого индекса,
<Выражение> - строковое выражение, содержащее ключ индекса (должно соответствовать инструкциям CodeBase),
<Уникальность> - флаг уникальности индекса (1 - уникальный, 0 - нет),
<Убывание> - флаг направления убывания индекса (1 - по убыванию значения ключа, 0 - по возрастанию),
<Фильтр> - строковое выражение содержащее фильтр индекса (в соответствии с инструкциям CodeBase).
Подробнее см. в документации, глава ''Работа с базами данных DBF формата''"
    },
    {"Item","AST","СоздатьИндексныйФайл","CreateIndex",
"СоздатьИндексныйФайл(<?>)",
"CreateIndex(<?>)",
"@Синтаксис:
СоздатьИндексныйФайл(<ИмяФайла>)
@Назначение:
Создает индексный файл, содержащий все индексы, которые были созданы методом ''ДобавитьИндекс''.
@Параметры:
<ИмяФайла> - строковое выражение с именем создаваемого индексного файла."
    },
    {"Item","AST","КодоваяСтраница","CodePage",
"КодоваяСтраница(<?>)",
"CodePage(<?>)",
"@Синтаксис:
КодоваяСтраница(<Режим>)
@Назначение:
Установить режим кодировки для чтения и записи строковых значений в файл.
Возвращает: текущее числовое значение режима кодировки (на момент до исполнения метода).
@Параметры:
<Режим> : 0  - windows-кодировка, 1 - DOS-кодировка"
    },
    {"Item","AST","КодОшибки","ErrorCode",
"КодОшибки()",
"ErrorCode()",
"@Синтаксис:
КодОшибки()
@Назначение:
Возвращает код последней ошибки.
Подробнее см. в документации, глава ''Работа с базами данных DBF формата''"
    },
    },
    },
 {"Folder","AST","Метаданные","Metadata",
    {"Item","AST","Выбран","Selected",
"Выбран()",
"Selected()",
"@Синтаксис:
Выбран()
@Назначение:
Проверяет спозиционирован ли объект типа ''Метаданные'' на конкретном объекте метаданных или нет. Возвращает число: 1 - объект соответствует объекту метаданных (спозиционирован), 0 - если не соответствует."
    },
    {"Item","AST","Родитель","Parent",
"Родитель()",
"Parent()",
"@Синтаксис:
Родитель()
@Назначение:
Возвращает объект метаданных, которому подчинен данный объект."
    },
    {"Item","AST","ПолныйИдентификатор","FullIdentifier",
"ПолныйИдентификатор()",
"FullIdentifier()",
"@Синтаксис:
ПолныйИдентификатор()
@Назначение:
Возвращает полный идентификатор объекта (идентификатор объекта с идентификаторами его родителей через точку)."
    },
    {"Item","AST","Представление","Present",
"Представление()",
"Present()",
"@Синтаксис:
Представление()
@Назначение:
Возвращает строковое значение представления объекта (синоним объекта, а если он не задан, то идентификатор)."
    },
    {"Item","AST","ДлинаПредставленияЗначения","ValuePresentLen",
"ДлинаПредставленияЗначения(<?>,,)",
"ValuePresentLen(<?>,,)",
"@Синтаксис:
ДлинаПредставленияЗначения(<Мин>,<Макс>,<ДлПоУмолч>)
@Назначение:
Возвращает длину представления значения. Данный метод может использоваться, например, для определения ширины столбца в универсальных отчетах, выводящих данные объектов различных видов.
@Параметры:
<Мин> - необязательный параметр. Метод не будет возвращать значение меньше указанной в данном параметре величины. 
<Макс> - необязательный параметр. Метод не будет возвращать значение больше указанной в данном параметре величины. 
<ДлПоУмолч> - необязательный параметр. Метод будет возвращать данную величину для метаданных, для которых длина представления не определена. Параметр задает длину для типов данных, таких как Справочник неопределенного типа и аналогичных, у которых не определена длина."
    },
 {"Folder","AST","Методы атрибутов метаданных, содержащие список ссылок","",
    {"Item","AST","Количество","Count",
"Количество();",
"Count();",
"@Синтаксис:
Количество()
@Назначение:
Возвращает количество ссылок в списке.
@Параметры: нет"
    },
    {"Item","AST","Получить","Get",
"Получить(<?>)",
"Get(<?>)",
"@Синтаксис:
Получить(<Номер>)
@Назначение:
Возвращает ссылку по заданному номеру.
@Параметры:
<Номер> - числовое выражение. Номер ссылки."
    },
    },
    },
}